{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/admin-users-edit/admin-users-edit.component.html","./src/app/admin-users/admin-users.component.html","./src/app/app.component.html","./src/app/client-grossistes/client-grossistes.component.html","./src/app/client-pharmacies/client-pharmacies.component.html","./src/app/commande-produit-item/commande-produit-item.component.html","./src/app/commandes-historique/commandes-historique.component.html","./src/app/commandes/commandes.component.html","./src/app/contacts/contacts.component.html","./src/app/dashboard/dashboard.component.html","./src/app/evaluations/evaluations.component.html","./src/app/footer/footer.component.html","./src/app/historique-fiches/historique-fiches.component.html","./src/app/login/login.component.html","./src/app/navbar/navbar.component.html","./src/app/packs/packs.component.html","./src/app/planning-popup/planning-popup.component.html","./src/app/planning/planning.component.html","./src/app/product-item/product-item.component.html","./src/app/products-comparator/products-comparator.component.html","./src/app/products-veillec-admin/products-veillec-admin.component.html","./src/app/products-veillec/products-veillec.component.html","./src/app/products/products.component.html","./src/app/profile/profile.component.html","./src/app/rapport-form/rapport-form.component.html","./src/app/rapports/rapports.component.html","./src/app/reunions/reunions.component.html","./src/app/saisie-fiches/saisie-fiches.component.html","./src/app/small-modal/small-modal.component.html","./src/app/task-discussion/task-discussion.component.html","./src/app/task-element/task-element.component.html","./src/app/tasks/tasks.component.html","./src/app/topbar/topbar.component.html","./node_modules/tslib/tslib.es6.js","./src/app/admin-users-edit/admin-users-edit.component.css","./src/app/admin-users-edit/admin-users-edit.component.ts","./src/app/admin-users/admin-users.component.css","./src/app/admin-users/admin-users.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/client-grossistes/client-grossistes.component.css","./src/app/client-grossistes/client-grossistes.component.ts","./src/app/client-pharmacies/client-pharmacies.component.css","./src/app/client-pharmacies/client-pharmacies.component.ts","./src/app/commande-produit-item/commande-produit-item.component.css","./src/app/commande-produit-item/commande-produit-item.component.ts","./src/app/commandes-historique/commandes-historique.component.css","./src/app/commandes-historique/commandes-historique.component.ts","./src/app/commandes/commandes.component.css","./src/app/commandes/commandes.component.ts","./src/app/contacts/contacts.component.css","./src/app/contacts/contacts.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.ts","./src/app/evaluations/evaluations.component.css","./src/app/evaluations/evaluations.component.ts","./src/app/footer/footer.component.css","./src/app/footer/footer.component.ts","./src/app/historique-fiches/historique-fiches.component.css","./src/app/historique-fiches/historique-fiches.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.ts","./src/app/packs/packs.component.css","./src/app/packs/packs.component.ts","./src/app/planning-popup/planning-popup.component.css","./src/app/planning-popup/planning-popup.component.ts","./src/app/planning/planning.component.css","./src/app/planning/planning.component.ts","./src/app/product-item/product-item.component.css","./src/app/product-item/product-item.component.ts","./src/app/products-comparator/products-comparator.component.css","./src/app/products-comparator/products-comparator.component.ts","./src/app/products-veillec-admin/products-veillec-admin.component.css","./src/app/products-veillec-admin/products-veillec-admin.component.ts","./src/app/products-veillec/products-veillec.component.css","./src/app/products-veillec/products-veillec.component.ts","./src/app/products/products.component.css","./src/app/products/products.component.ts","./src/app/profile/profile.component.css","./src/app/profile/profile.component.ts","./src/app/rapport-form/rapport-form.component.css","./src/app/rapport-form/rapport-form.component.ts","./src/app/rapports/rapports.component.css","./src/app/rapports/rapports.component.ts","./src/app/reunions/reunions.component.css","./src/app/reunions/reunions.component.ts","./src/app/saisie-fiches/saisie-fiches.component.css","./src/app/saisie-fiches/saisie-fiches.component.ts","./src/app/services/authguard.service.ts","./src/app/services/client.service.ts","./src/app/services/commande.service.ts","./src/app/services/comment.service.ts","./src/app/services/contact.service.ts","./src/app/services/eval.service.ts","./src/app/services/notif.service.ts","./src/app/services/pack.service.ts","./src/app/services/product.service.ts","./src/app/services/rapport.service.ts","./src/app/services/reunion.service.ts","./src/app/services/roleguard.service.ts","./src/app/services/stats.service.ts","./src/app/services/task.service.ts","./src/app/services/user.service.ts","./src/app/services/vehicule.service.ts","./src/app/services/veille.service.ts","./src/app/small-modal/small-modal.component.css","./src/app/small-modal/small-modal.component.ts","./src/app/task-discussion/task-discussion.component.css","./src/app/task-discussion/task-discussion.component.ts","./src/app/task-element/task-element.component.css","./src/app/task-element/task-element.component.ts","./src/app/tasks/tasks.component.css","./src/app/tasks/tasks.component.ts","./src/app/topbar/topbar.component.css","./src/app/topbar/topbar.component.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<div *ngIf=\\\"targetUser\\\">\\n    <h1 class=\\\"h3 mb-3\\\">Modifier un utilisateur</h1>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"card-actions float-right\\\">\\n                        <a (click)=\\\"dismiss()\\\">\\n                            <i class=\\\"fas fa-times\\\"></i>\\n                        </a>\\n                    </div>\\n                    <h5 class=\\\"card-title mb-0\\\">{{targetUser? targetUser.nom+' '+targetUser.prenom : 'chargement...'}}\\n                    </h5>\\n                    <!--    alert message    -->\\n                    <br />\\n                    <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">×</span>\\n                        </button>\\n                        <div class=\\\"alert-message\\\">\\n                            <strong>Modification echouée</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                            champs.\\n                        </div>\\n                    </div>\\n                    <!--end alert-->\\n                </div>\\n\\n                <div class=\\\"card-body\\\">\\n                    <div *ngIf=\\\"showSection == false\\\" class=\\\"spinner-border text-dark mr-2\\\" role=\\\"status\\\">\\n                        <span class=\\\"sr-only\\\">Loading...</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-body\\\" *ngIf=\\\"showSection == true\\\">\\n                    <form #userForm=\\\"ngForm\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-12 col-lg-6\\\">\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>Nom</label>\\n                                        <input #nom=\\\"ngModel\\\" minlength=\\\"3\\\" maxlength=\\\"15\\\" required\\n                                            [(ngModel)]=\\\"targetUser.nom\\\" name=\\\"nom\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                                            placeholder=\\\"foulen\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"nom.touched && nom.errors\\\">nom\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>prenom</label>\\n                                        <input #prenom=\\\"ngModel\\\" required minlength=\\\"3\\\" maxlength=\\\"20\\\"\\n                                            [(ngModel)]=\\\"targetUser.prenom\\\" name=\\\"prenom\\\" type=\\\"text\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"ben foulen\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"prenom.touched && prenom.errors\\\">prenom\\n                                            invalide*</span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>date de naissance</label>\\n                                        <input #daten=\\\"ngModel\\\" required [(ngModel)]=\\\"targetUser.date_naissance\\\"\\n                                            name=\\\"date_naissance\\\" type=\\\"date\\\" class=\\\"form-control\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"daten.touched && daten.errors\\\">date\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>n° CIN</label>\\n                                        <input #cin=\\\"ngModel\\\" required [(ngModel)]=\\\"targetUser.cin\\\" pattern=\\\"^[0-9]{8}\\\"\\n                                            minlength=\\\"8\\\" maxlength=\\\"8\\\" name=\\\"cin\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\n                                            placeholder=\\\"XXXXXXX\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"cin.touched && cin.errors\\\">n° CIN\\n                                            invalide*</span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>adresse</label>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"targetUser.adresse\\\" name=\\\"adr\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"15 rue des jasmins\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>adresse actuelle</label>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"targetUser.adresse_actuelle\\\" name=\\\"adract\\\"\\n                                        class=\\\"form-control\\\" placeholder=\\\"24 rue el attarine\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>image</label>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"targetUser.imageUrl\\\" name=\\\"image\\\"\\n                                        class=\\\"form-control\\\" placeholder=\\\"http://img.png\\\">\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>diplome</label>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"targetUser.diplome\\\" name=\\\"diplome\\\"\\n                                        class=\\\"form-control\\\" placeholder=\\\"License, doctorat, mastére...\\\">\\n                                </div>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>email personnel</label>\\n                                        <input #emailp=\\\"ngModel\\\" minlength=\\\"0\\\"\\n                                            pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\"\\n                                            [(ngModel)]=\\\"targetUser.emailPerso\\\" name=\\\"emailp\\\" type=\\\"text\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"foulen@farmavens.tn\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"emailp.touched && emailp.errors\\\">email\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>email attribué</label>\\n                                        <input #email=\\\"ngModel\\\" minlength=\\\"0\\\" type=\\\"text\\\"\\n                                            pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\"\\n                                            [(ngModel)]=\\\"targetUser.email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                                            placeholder=\\\"foulen@farmavens.tn\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"email.touched && email.errors\\\">email\\n                                            invalide*</span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>type de contrat</label>\\n                                        <select required #contrat='ngModel' [(ngModel)]=\\\"targetUser.type_contrat\\\"\\n                                            name=\\\"contrat\\\" class=\\\"form-control mb-3\\\">\\n                                            <option selected value=\\\"type\\\">type</option>\\n                                            <option>CDI</option>\\n                                            <option>CDD</option>\\n                                            <option>SIVP</option>\\n                                            <option>KARAMA</option>\\n                                            <option>autres</option>\\n                                        </select>\\n                                        <span class=\\\"msg font-11\\\"\\n                                            *ngIf=\\\"contrat.touched && contrat.value == 'type'\\\">type de\\n                                            contrat\\n                                            non choisit*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label>salaire</label>\\n                                        <input #salaire=\\\"ngModel\\\" minlength=\\\"1\\\" [(ngModel)]=\\\"targetUser.salaire\\\"\\n                                            name=\\\"salaire\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"TND.\\\">\\n                                        <span class=\\\"msg font-11\\\"\\n                                            *ngIf=\\\"(salaire.touched && salaire.errors) || (salaire.touched && salaire.value <= 0)\\\">salaire\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-3\\\">\\n                                        <label>frais</label>\\n                                        <input #frais=\\\"ngModel\\\" minlength=\\\"1\\\" [(ngModel)]=\\\"targetUser.frais\\\"\\n                                            name=\\\"frais\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"TND.\\\">\\n                                        <span class=\\\"msg font-11\\\"\\n                                            *ngIf=\\\"(frais.touched && frais.errors) || (frais.touched && frais.value <= 0)\\\">frais\\n                                            invalides*</span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row\\\" *ngIf=\\\"targetUser.type_contrat === 'SIVP' || targetUser.type_contrat === 'CDD'\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>date debut contrat</label>\\n                                        <input type=\\\"date\\\" [(ngModel)]=\\\"targetUser.date_debut_contrat\\\" class=\\\"form-control\\\" name=\\\"date_d_c\\\"/>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>date fin contrat</label>\\n                                        <input type=\\\"date\\\" [(ngModel)]=\\\"targetUser.date_fin_contrat\\\" class=\\\"form-control\\\" name=\\\"date_f_c\\\"/>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <div class=\\\"form-group custom-control custom-switch\\\">\\n                                        <input [(ngModel)]=\\\"cartToEdit.vehicule_societe\\\" name=\\\"vehicule\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                                            id=\\\"customSwitch2\\\">\\n                                        <label for=\\\"customSwitch2\\\" class=\\\"custom-control-label\\\">Vehicule farmavans\\n                                        </label>\\n                                    </div>\\n                                    <div *ngIf=\\\"cartToEdit\\\">\\n                                        <div class=\\\"form-row\\\">\\n                                            <div *ngIf=\\\"cartToEdit.vehicule_societe\\\" class=\\\"form-group col-md-4\\\">\\n                                                <label>modele</label>\\n                                                <input  #modele=\\\"ngModel\\\" [(ngModel)]=\\\"cartToEdit.modele\\\"\\n                                                     name=\\\"modele\\\"\\n                                                    type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Peugeot,VW...\\\">\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-4\\\">\\n                                                <label>amortissement</label>\\n                                                <input  #amortissement=\\\"ngModel\\\"\\n                                                    [(ngModel)]=\\\"cartToEdit.amortissement_vehicule\\\"\\n                                                     min=\\\"1\\\"\\n                                                    name=\\\"amortissementTND\\\" type=\\\"number\\\" class=\\\"form-control\\\"\\n                                                    placeholder=\\\"valeur en TND.\\\">\\n                                            </div>\\n                                            <div *ngIf=\\\"cartToEdit.vehicule_societe\\\" class=\\\"form-group col-md-4\\\">\\n                                                <label>kilométrage</label>\\n                                                <input [(ngModel)]=\\\"cartToEdit.kilometrage\\\" name=\\\"km\\\"\\n                                                     minlength=\\\"1\\\"\\n                                                    type=\\\"number\\\" placeholder=\\\"km.\\\" class=\\\"form-control\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div *ngIf=\\\"cartToEdit.vehicule_societe\\\" class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-4\\\">\\n                                                <label>immatriculation</label>\\n                                                <input name=\\\"carm\\\" maxlength=\\\"9\\\"\\n                                                    [(ngModel)]=\\\"cartToEdit.immatriculation\\\" minlength=\\\"8\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"XXXTUXXXX\\\">\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-3\\\">\\n                                                <label>n° carte grise</label>\\n                                                <input name=\\\"cg\\\" [(ngModel)]=\\\"cartToEdit.carte_grise\\\" minlength=\\\"1\\\"\\n                                                    type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"XQKLMCODSDS...\\\">\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-5\\\">\\n                                                <label>Date vignette</label>\\n                                                <input name=\\\"dv\\\"  [(ngModel)]=\\\"cartToEdit.date_vignette\\\" minlength=\\\"1\\\"\\n                                                    type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"XQKLMCODSDS...\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div *ngIf=\\\"cartToEdit.vehicule_societe\\\" class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>date échénace assurance</label>\\n                                                <input name=\\\"assurc\\\" [(ngModel)]=\\\"cartToEdit.date_echeance_assurance\\\"\\n                                                    minlength=\\\"1\\\" type=\\\"date\\\" class=\\\"form-control\\\">\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>date derniere vidange</label>\\n                                                <input name=\\\"date_derniere_vidange\\\"\\n                                                    [(ngModel)]=\\\"cartToEdit.date_derniere_vidange\\\" minlength=\\\"1\\\"\\n                                                    type=\\\"date\\\" class=\\\"form-control\\\">\\n                                            </div>\\n                                        </div>\\n                                        <div *ngIf=\\\"cartToEdit.vehicule_societe\\\" class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>numero carte essence</label>\\n                                                <input name=\\\"numero_carte_essence\\\"\\n                                                    [(ngModel)]=\\\"cartToEdit.numero_carte_essence\\\" minlength=\\\"1\\\"\\n                                                    type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"ABDCEFGH...\\\">\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>code carte essence</label>\\n                                                <input name=\\\"code_carte_essence\\\"\\n                                                    [(ngModel)]=\\\"cartToEdit.code_carte_essence\\\" minlength=\\\"1\\\"\\n                                                    type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"*****\\\">\\n                                            </div>\\n                                        </div>\\n                                        \\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-12 col-lg-6\\\">\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>Banque</label>\\n                                        <input #banque=\\\"ngModel\\\" minlength=\\\"3\\\" maxlength=\\\"25\\\" required\\n                                            [(ngModel)]=\\\"targetUser.banque\\\" name=\\\"banque\\\" type=\\\"text\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"BIAT,attijari...\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"banque.touched && banque.errors\\\">banque\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>RIB banque</label>\\n                                        <input #rib=\\\"ngModel\\\" required minlength=\\\"3\\\" maxlength=\\\"20\\\"\\n                                            [(ngModel)]=\\\"targetUser.rib_bancaire\\\" name=\\\"rib\\\" type=\\\"text\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"A41XXXXXX...\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"rib.touched && rib.errors\\\">RIB\\n                                            invalide*</span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>Matricule CNSS</label>\\n                                    <input required #cnss=\\\"ngModel\\\" type=\\\"text\\\" minlength=\\\"8\\\"\\n                                        [(ngModel)]=\\\"targetUser.matricule_cnss\\\" name=\\\"matricule_cnss\\\"\\n                                        class=\\\"form-control\\\" placeholder=\\\"CQFGHIJ.....\\\">\\n                                    <span class=\\\"msg font-11\\\" *ngIf=\\\"cnss.touched && cnss.errors\\\">Matricule CNSS\\n                                        invalide*</span>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>Nouveau mot de passe</label>\\n                                    <input #mdp=\\\"ngModel\\\" placeholder=\\\"*******\\\" pattern=\\\"^[A-Z]+[a-zA-Z0-9]*\\\"\\n                                        minlength=\\\"8\\\" [(ngModel)]=\\\"targetUser.password\\\" name=\\\"pass\\\" type=\\\"password\\\"\\n                                        class=\\\"form-control\\\">\\n                                    <span class=\\\"msg font-11\\\" *ngIf=\\\"mdp.touched && mdp.errors\\\">mot de passe\\n                                        faible*</span>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>confirmer le mot de passe</label>\\n                                    <input placeholder=\\\"*******\\\" #confirmpw=\\\"ngModel\\\" ngModel\\n                                        pattern=\\\"^[A-Z]+[a-zA-Z0-9]*\\\" minlength=\\\"8\\\" type=\\\"password\\\" name=\\\"confirmpw\\\"\\n                                        class=\\\"form-control\\\">\\n                                    <span class=\\\"msg font-11\\\"\\n                                        *ngIf=\\\"(confirmpw.touched && confirmpw.errors)||(mdp.touched && mdp.errors) || (confirmpw.touched && mdp.touched && confirmpw.value != mdp.value)\\\">mot\\n                                        de passe incompatibles*</span>\\n                                </div>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>Sexe</label>\\n                                        <div class=\\\"custom-controls-inline\\\">\\n                                            <label class=\\\"custom-control custom-radio\\\">\\n                                                <input (click)=\\\"checkGender('homme')\\\" name=\\\"custom-radio-3\\\" type=\\\"radio\\\"\\n                                                    class=\\\"custom-control-input\\\" checked>\\n                                                <span class=\\\"custom-control-label\\\">Homme</span>\\n                                            </label>\\n                                            <label class=\\\"custom-control custom-radio\\\">\\n                                                <input (click)=\\\"checkGender('femme')\\\" name=\\\"custom-radio-3\\\" type=\\\"radio\\\"\\n                                                    class=\\\"custom-control-input\\\">\\n                                                <span class=\\\"custom-control-label\\\">Femme</span>\\n                                            </label>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>Role</label>\\n                                        <select #role=\\\"ngModel\\\" required [(ngModel)]=\\\"targetUser.role\\\" name=\\\"role\\\"\\n                                            class=\\\"form-control mb-3\\\">\\n                                            <option selected value=\\\"Role\\\">Role</option>\\n                                            <option value=\\\"admin\\\">Administrateur</option>\\n                                            <option value=\\\"delege\\\">Délegué / Animatrice</option>\\n                                            <option value=\\\"superviseur\\\">Superviseur</option>\\n                                        </select>\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"role.touched && role.value === 'Role'\\\">Role non\\n                                            choisit</span>\\n                                    </div>\\n                                </div>\\n                                \\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>N° Tel personnel</label>\\n                                        <input #telp=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"20\\\"\\n                                            [(ngModel)]=\\\"targetUser.telephone_perso\\\" name='telp' type=\\\"number\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"+216 XXX XX XX\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"telp.touched && telp.errors\\\">Numéro\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group col-md-6\\\">\\n                                        <label>N° Tel attribué</label>\\n                                        <input #tela=\\\"ngModel\\\" [(ngModel)]=\\\"targetUser.telephone\\\" name=\\\"tel\\\"\\n                                            type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"+216 XXX XX XX\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"tela.touched && tela.errors\\\">Numéro\\n                                            invalide*</span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>etat du compte </label>\\n                                    <div class=\\\"custom-control custom-switch\\\">\\n                                        <input #enabled=\\\"ngModel\\\" [(ngModel)]=\\\"targetUser.isActivated\\\" name=\\\"etat\\\"\\n                                            type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" id=\\\"customSwitch12\\\">\\n                                        <label class=\\\"custom-control-label\\\"\\n                                            for=\\\"customSwitch12\\\">{{enabled.value == true ? 'activé' : 'desactivé'}}\\n                                        </label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label>A propos</label>\\n                                    <textarea [(ngModel)]=\\\"targetUser.about\\\" name=\\\"abt\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"Vos remarques, ou autres informations içi...\\\" rows=\\\"3\\\"></textarea>\\n                                </div>\\n                                <div class=\\\"form-row mt-3 float-right\\\">\\n                                    <div class=\\\"\\\">\\n                                        <button type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\" (click)=\\\"updateUser(userForm)\\\"\\n                                            class=\\\"btn btn-warning btn-lg \\\">Enregistrer les modifications</button>\\n                                        <button type=\\\"reset\\\" class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                        \\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n            <!--    alert message    -->\\n            <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">×</span>\\n                </button>\\n                <div class=\\\"alert-message\\\">\\n                    <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos champs.\\n                </div>\\n            </div>\\n            <!--end alert-->\\n            <h1 class=\\\"h3 mb-3\\\">Utilisateurs</h1>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">                      \\n                            <h5 class=\\\"card-title\\\">Ajouter un utilisateur</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">informations générales</h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form #userForm=\\\"ngForm\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-12 col-lg-6\\\">\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>Nom</label>\\n                                                <input #nom=\\\"ngModel\\\" minlength=\\\"3\\\" maxlength=\\\"15\\\" required\\n                                                    [(ngModel)]=\\\"userToAdd.nom\\\" name=\\\"nom\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"foulen\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"nom.touched && nom.errors\\\">nom\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>prenom</label>\\n                                                <input #prenom=\\\"ngModel\\\" required minlength=\\\"3\\\" maxlength=\\\"20\\\"\\n                                                    [(ngModel)]=\\\"userToAdd.prenom\\\" name=\\\"prenom\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"ben foulen\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"prenom.touched && prenom.errors\\\">prenom\\n                                                    invalide*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>date de naissance</label>\\n                                                <input #daten=\\\"ngModel\\\" required [(ngModel)]=\\\"userToAdd.date_naissance\\\"\\n                                                    name=\\\"date_naissance\\\" type=\\\"date\\\" class=\\\"form-control\\\"\\n                                                    placeholder=\\\"JJ/MM/AAAA\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"daten.touched && daten.errors\\\">date\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>n° CIN</label>\\n                                                <input #cin=\\\"ngModel\\\" required [(ngModel)]=\\\"userToAdd.cin\\\"\\n                                                    pattern=\\\"^[0-9]{8}\\\" minlength=\\\"8\\\" maxlength=\\\"8\\\" name=\\\"cin\\\"\\n                                                    type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"XXXXXXX\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"cin.touched && cin.errors\\\">n° CIN\\n                                                    invalide*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>adresse</label>\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"userToAdd.adresse\\\" name=\\\"adr\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"15 rue des jasmins\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>adresse actuelle</label>\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"userToAdd.adresse_actuelle\\\" name=\\\"adract\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"24 rue el attarine\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>image</label>\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"userToAdd.imageUrl\\\" name=\\\"image\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"http://img.png\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>diplome</label>\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"userToAdd.diplome\\\" name=\\\"diplome\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"License, doctorat, mastére...\\\">\\n                                        </div>\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>email personnel</label>\\n                                                <input #emailp=\\\"ngModel\\\" minlength=\\\"0\\\"\\n                                                    pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\"\\n                                                    [(ngModel)]=\\\"userToAdd.emailPerso\\\" name=\\\"emailp\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"foulen@farmavens.tn\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"emailp.touched && emailp.errors\\\">email\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>email attribué</label>\\n                                                <input #email=\\\"ngModel\\\" minlength=\\\"0\\\" type=\\\"text\\\"\\n                                                    pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\"\\n                                                    [(ngModel)]=\\\"userToAdd.email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                                                    placeholder=\\\"foulen@farmavens.tn\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"email.touched && email.errors\\\">email\\n                                                    invalide*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>type de contrat</label>\\n                                                <select required #contrat='ngModel' [(ngModel)]=\\\"userToAdd.type_contrat\\\"\\n                                                    name=\\\"contrat\\\" class=\\\"form-control mb-3\\\">\\n                                                    <option selected value=\\\"type\\\">type</option>\\n                                                    <option>CDI</option>\\n                                                    <option>CDD</option>\\n                                                    <option>SIVP</option>\\n                                                    <option>KARAMA</option>\\n                                                    <option>autres</option>\\n                                                </select>\\n                                                <span class=\\\"msg font-11\\\"\\n                                                    *ngIf=\\\"contrat.touched && contrat.value == 'type'\\\">type de contrat\\n                                                    non choisit*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-3\\\">\\n                                                <label>salaire</label>\\n                                                <input #salaire=\\\"ngModel\\\" minlength=\\\"1\\\" [(ngModel)]=\\\"userToAdd.salaire\\\"\\n                                                    name=\\\"salaire\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"TND.\\\">\\n                                                <span class=\\\"msg font-11\\\"\\n                                                    *ngIf=\\\"(salaire.touched && salaire.errors) || (salaire.touched && salaire.value <= 0)\\\">salaire\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-3\\\">\\n                                                <label>frais</label>\\n                                                <input #frais=\\\"ngModel\\\" minlength=\\\"1\\\" [(ngModel)]=\\\"userToAdd.frais\\\"\\n                                                    name=\\\"frais\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"TND.\\\">\\n                                                <span class=\\\"msg font-11\\\"\\n                                                    *ngIf=\\\"(frais.touched && frais.errors) || (frais.touched && frais.value <= 0)\\\">frais\\n                                                    invalides*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-row\\\" *ngIf=\\\"userToAdd.type_contrat === 'SIVP' || userToAdd.type_contrat === 'CDD'\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>date debut contrat</label>\\n                                                <input type=\\\"date\\\" [(ngModel)]=\\\"userToAdd.date_debut_contrat\\\" class=\\\"form-control\\\" name=\\\"date_d_c\\\"/>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>date fin contrat</label>\\n                                                <input type=\\\"date\\\" [(ngModel)]=\\\"userToAdd.date_fin_contrat\\\" class=\\\"form-control\\\" name=\\\"date_f_c\\\"/>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <div class=\\\"form-group custom-control custom-switch\\\">\\n                                                <input [(ngModel)]=\\\"carToAdd.vehicule_societe\\\" name=\\\"vehicule\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                                                    id=\\\"customSwitch2\\\">\\n                                                <label for=\\\"customSwitch2\\\" class=\\\"custom-control-label\\\">Vehicule personnel\\n                                                </label>\\n                                            </div>\\n                                            <div>\\n                                            <div class=\\\"form-row\\\">\\n                                                <div class=\\\"form-group col-md-4\\\" *ngIf=\\\"carToAdd.vehicule_societe\\\">\\n                                                    <label>modele</label>\\n                                                    <input #modele=\\\"ngModel\\\" [(ngModel)]=\\\"carToAdd.modele\\\" \\n                                                     name=\\\"modele\\\" \\n                                                    type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Peugeot,VW...\\\">\\n                                                </div>\\n                                            <div class=\\\"form-group col-md-4\\\">\\n                                                <label>amortissement</label>\\n                                                <input #amortissement=\\\"ngModel\\\" [(ngModel)]=\\\"carToAdd.amortissement_vehicule\\\"  min=\\\"1\\\"\\n                                                 name=\\\"amortissementTND\\\" \\n                                                type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"valeur en TND.\\\">\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-4\\\" *ngIf=\\\"carToAdd.vehicule_societe\\\">\\n                                                <label>kilométrage</label>\\n                                                <input [(ngModel)]=\\\"carToAdd.kilometrage\\\" name=\\\"km\\\"  minlength=\\\"1\\\" type=\\\"number\\\" placeholder=\\\"km.\\\" class=\\\"form-control\\\">\\n                                            </div>\\n                                            </div>\\n                                            <div class=\\\"form-row\\\" *ngIf=\\\"carToAdd.vehicule_societe\\\">\\n                                                <div class=\\\"form-group col-md-4\\\">\\n                                                    <label>immatriculation</label>\\n                                                    <input name=\\\"carm\\\" maxlength=\\\"9\\\" [(ngModel)]=\\\"carToAdd.immatriculation\\\" minlength=\\\"8\\\"\\n                                                         type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"XXXTUXXXX\\\">\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-3\\\">\\n                                                    <label>n° carte grise</label>\\n                                                    <input name=\\\"cg\\\" [(ngModel)]=\\\"carToAdd.carte_grise\\\" minlength=\\\"1\\\"\\n                                                         type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"XQKLMCODSDS...\\\">\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-5\\\">\\n                                                    <label>Date vignette</label>\\n                                                    <input name=\\\"dv\\\"  [(ngModel)]=\\\"carToAdd.date_vignette\\\" minlength=\\\"1\\\"\\n                                                        type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"XQKLMCODSDS...\\\">\\n                                                </div>\\n                                                </div>\\n                                                <div class=\\\"form-row\\\" *ngIf=\\\"carToAdd.vehicule_societe\\\">\\n                                                <div class=\\\"form-group col-md-6\\\">\\n                                                    <label>date échénace assurance</label>\\n                                                    <input name=\\\"assurc\\\" [(ngModel)]=\\\"carToAdd.date_echeance_assurance\\\"  minlength=\\\"1\\\"\\n                                                    type=\\\"date\\\" class=\\\"form-control\\\">\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-6\\\">\\n                                                    <label>date derniere vidange</label>\\n                                                    <input  name=\\\"date_derniere_vidange\\\" [(ngModel)]=\\\"carToAdd.date_derniere_vidange\\\"  minlength=\\\"1\\\"\\n                                                    type=\\\"date\\\" class=\\\"form-control\\\">\\n                                                </div>\\n                                                </div>\\n                                                <div class=\\\"form-row\\\" *ngIf=\\\"carToAdd.vehicule_societe\\\">\\n                                                    <div class=\\\"form-group col-md-6\\\">\\n                                                    <label>numero carte essence</label>\\n                                                    <input  name=\\\"numero_carte_essence\\\" [(ngModel)]=\\\"carToAdd.numero_carte_essence\\\" minlength=\\\"1\\\"\\n                                                    type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"ABDCEFGH...\\\">\\n                                                </div>\\n                                                <div class=\\\"form-group col-md-6\\\">\\n                                                    <label>code carte essence</label>\\n                                                    <input name=\\\"code_carte_essence\\\" [(ngModel)]=\\\"carToAdd.code_carte_essence\\\" minlength=\\\"1\\\"\\n                                                    type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"*****\\\">\\n                                                </div>                         \\n                                                </div>\\n                                                </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-12 col-lg-6\\\">\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>Banque</label>\\n                                                <input #banque=\\\"ngModel\\\" minlength=\\\"3\\\" maxlength=\\\"25\\\" required\\n                                                    [(ngModel)]=\\\"userToAdd.banque\\\" name=\\\"banque\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"BIAT,attijari...\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"banque.touched && banque.errors\\\">banque\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>RIB banque</label>\\n                                                <input #rib=\\\"ngModel\\\" required minlength=\\\"3\\\" maxlength=\\\"20\\\"\\n                                                    [(ngModel)]=\\\"userToAdd.rib_bancaire\\\" name=\\\"rib\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"A41XXXXXX...\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"rib.touched && rib.errors\\\">RIB\\n                                                    invalide*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Matricule CNSS</label>\\n                                            <input required #cnss=\\\"ngModel\\\" type=\\\"text\\\" minlength=\\\"8\\\"\\n                                                [(ngModel)]=\\\"userToAdd.matricule_cnss\\\" name=\\\"matricule_cnss\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"CQFGHIJ.....\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"cnss.touched && cnss.errors\\\">Matricule CNSS\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Mot de passe</label>\\n                                            <input required #mdp=\\\"ngModel\\\" placeholder=\\\"*******\\\" pattern=\\\"^[A-Z]+[a-zA-Z0-9]*\\\" minlength=\\\"8\\\"\\n                                                [(ngModel)]=\\\"userToAdd.password\\\" name=\\\"pass\\\" type=\\\"password\\\"\\n                                                class=\\\"form-control\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"mdp.touched && mdp.errors\\\">mot de passe\\n                                                faible*</span>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>confirmer le mot de passe</label>\\n                                            <input  placeholder=\\\"*******\\\" required #confirmpw=\\\"ngModel\\\" ngModel pattern=\\\"^[A-Z]+[a-zA-Z0-9]*\\\"\\n                                                minlength=\\\"8\\\" type=\\\"password\\\" name=\\\"confirmpw\\\" class=\\\"form-control\\\">\\n                                            <span class=\\\"msg font-11\\\"\\n                                                *ngIf=\\\"(confirmpw.touched && confirmpw.errors)||(mdp.touched && mdp.errors) || (confirmpw.touched && mdp.touched && confirmpw.value != mdp.value)\\\">mot\\n                                                de passe incompatibles*</span>\\n                                        </div>\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>Sexe</label>\\n                                                <div class=\\\"custom-controls-inline\\\">\\n                                                    <label class=\\\"custom-control custom-radio\\\">\\n                                                        <input (click)=\\\"checkGender('homme')\\\" name=\\\"custom-radio-3\\\"\\n                                                            type=\\\"radio\\\" class=\\\"custom-control-input\\\" checked>\\n                                                        <span class=\\\"custom-control-label\\\">Homme</span>\\n                                                    </label>\\n                                                    <label class=\\\"custom-control custom-radio\\\">\\n                                                        <input (click)=\\\"checkGender('femme')\\\" name=\\\"custom-radio-3\\\"\\n                                                            type=\\\"radio\\\" class=\\\"custom-control-input\\\">\\n                                                        <span class=\\\"custom-control-label\\\">Femme</span>\\n                                                    </label>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>Role</label>\\n                                                <select #role=\\\"ngModel\\\" required [(ngModel)]=\\\"userToAdd.role\\\"\\n                                                    name=\\\"role\\\" class=\\\"form-control mb-3\\\">\\n                                                    <option selected value=\\\"Role\\\">Role</option>\\n                                                    <option value=\\\"admin\\\">Administrateur</option>\\n                                                    <option value=\\\"delege\\\">Délegué / Animatrice</option>\\n                                                    <option value=\\\"superviseur\\\">Superviseur</option>\\n                                                </select>\\n                                                <span class=\\\"msg font-11\\\"\\n                                                    *ngIf=\\\"role.touched && role.value === 'Role'\\\">Role non\\n                                                    choisit</span>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>N° Tel personnel</label>\\n                                                <input #telp=\\\"ngModel\\\" required minlength=\\\"6\\\" maxlength=\\\"20\\\"\\n                                                    [(ngModel)]=\\\"userToAdd.telephone_perso\\\" name='telp' type=\\\"number\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"+216 XXX XX XX\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"telp.touched && telp.errors\\\">Numéro\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>N° Tel attribué</label>\\n                                                <input #tela=\\\"ngModel\\\" [(ngModel)]=\\\"userToAdd.telephone\\\" name=\\\"tel\\\"\\n                                                    type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"+216 XXX XX XX\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"tela.touched && tela.errors\\\">Numéro\\n                                                    invalide*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>etat du compte </label>\\n                                            <div class=\\\"custom-control custom-switch\\\">\\n                                                <input #enabled=\\\"ngModel\\\" [(ngModel)]=\\\"userToAdd.isActivated\\\"\\n                                                    name=\\\"etat\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                                                    id=\\\"customSwitch1\\\">\\n                                                <label class=\\\"custom-control-label\\\"\\n                                                    for=\\\"customSwitch1\\\">{{enabled.value == true ? 'activé' : 'desactivé'}}\\n                                                </label>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>A propos</label>\\n                                            <textarea [(ngModel)]=\\\"userToAdd.about\\\" name=\\\"abt\\\" class=\\\"form-control\\\"\\n                                                placeholder=\\\"Vos remarques, ou autres informations içi...\\\"\\n                                                rows=\\\"3\\\"></textarea>\\n                                        </div>\\n                                        <div class=\\\"form-row mt-3 float-right\\\">\\n                                            <div class=\\\"\\\">\\n                                                <button type=\\\"submit\\\" [disabled]=\\\"userForm.invalid\\\" (click)=\\\"submit(userForm)\\\"\\n                                                    class=\\\"btn btn-primary btn-lg \\\">Enregistrer</button>\\n                                                <button type=\\\"reset\\\" class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                              \\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <app-admin-users-edit *ngIf=\\\"editableUser\\\" [targetUser]=\\\"editableUser\\\"></app-admin-users-edit>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Liste des utilisateurs</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">délegués, administrateurs et superviseurs enregistrés\\n                                <ul>\\n                                    <li>(A) : attribué</li>\\n                                    <li>(P) : personnel</li>\\n                                </ul>\\n                            </h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <table class=\\\"table table-striped table-bordered \\\" [dtTrigger]=\\\"usersTrigger\\\" datatable\\n                                [dtOptions]=\\\"dtOptions\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th></th>\\n                                        <th>role</th>\\n                                        <th>Nom Complet</th>\\n                                        <th>Emails</th>\\n                                        <th>N° telephone</th>\\n                                        <th>etat du compte</th>\\n                                        <th></th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let user of data\\\">\\n                                        <td class=\\\"text-center\\\">\\n                                            <img [src]=\\\"user.imageUrl ? user.imageUrl : 'assets/img/default.png'\\\" (error)=\\\"user.imageUrl = 'assets/img/default.png'\\\" width=\\\"48\\\" height=\\\"48\\\" class=\\\"rounded-circle mr-2\\\" alt=\\\"Avatar\\\">\\n                                        </td>\\n                                        <td class=\\\"text-center\\\"><span\\n                                                [ngClass]=\\\"roleClass(user.role)\\\">{{user.role}}</span></td>\\n                                        <td>{{user.nom}} {{user.prenom}}</td>\\n                                        <td><span *ngIf=\\\"user.email\\\">(A){{user.email}}</span><span\\n                                                *ngIf=\\\"user.emailPerso\\\"><br>(P){{user.emailPerso}}</span></td>\\n                                        <td><span *ngIf=\\\"user.telephone\\\">(A){{user.telephone}}</span> <span\\n                                                *ngIf=\\\"user.telephone_perso\\\"> <br /> (P){{user.telephone_perso}}</span>\\n                                        </td>\\n                                        <td class=\\\"text-center\\\"><span\\n                                                [ngClass]=\\\"etatCompte(user.isActivated)\\\">{{user.isActivated == true ? 'activé' : 'desactivé'}}</span>\\n                                            <span [ngClass]=\\\"online(user.status)\\\">{{user.status}}</span></td>\\n                                        <td class=\\\"text-center\\\"><button (click)=\\\"setEditableUser(user)\\\" class=\\\"btn btn-pill btn-primary btn-sm\\\"><i\\n                                                    class=\\\"fas fa-info\\\"></i></button>\\n                                                    <button *ngIf=\\\"connectedUser.role === 'admin' && user.role != 'admin' \\\" class=\\\"btn btn-pill btn-danger btn-sm\\\" data-toggle=\\\"modal\\\" (click)=\\\"selectedUser = user\\\"\\n                                                data-target=\\\"#sizedModalSm\\\"><i class=\\\"fas fa-times\\\"></i></button>\\n\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </main>\\n\\n\\n\\n<div class=\\\"modal fade\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer l'utilisateur</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer {{selectedUser.prenom}} {{selectedUser.nom}} qui est un(e) {{selectedUser.sexe == 'homme' ? 'délégué' : 'animatrice'}}.</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteUser()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- END  modal -->\"","export default \"<ngx-loading-bar></ngx-loading-bar>\\n<body data-theme=\\\"default\\\" data-layout=\\\"fluid\\\" data-sidebar=\\\"left\\\">\\n  <div class=\\\"wrapper\\\">\\n    <app-navbar *ngIf=\\\"router.url != '/login'\\\"></app-navbar>\\n    <div class='main'>\\n      <div *ngIf=\\\"router.url != '/login'\\\">\\n      <app-topbar ></app-topbar>\\n    </div>\\n      <router-outlet></router-outlet>\\n      <div *ngIf=\\\"router.url != '/login'\\\" class=\\\"foot\\\">\\n      <app-footer ></app-footer>\\n      </div>\\n    </div>\\n  </div>\\n</body>\"","export default \"<div class=\\\"main\\\">\\n    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <button *ngIf=\\\"!showForm\\\" (click)=\\\"showPanel()\\\" class=\\\"btn btn-primary float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-plus\\\"></i> Nouveau grossiste</button>\\n            <button *ngIf=\\\"showForm\\\" (click)=\\\"hidePanel()\\\" class=\\\"btn btn-danger float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-times\\\"></i> Annuler</button>\\n            <h1 class=\\\"h3 mb-3\\\">Grossistes</h1>\\n            <!--form-->\\n            <div class=\\\"row\\\" *ngIf=\\\"showForm\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Ajouter un grossiste</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">informations générales</h6>\\n                            <!--    alert message    -->\\n                            <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                    <span aria-hidden=\\\"true\\\">×</span>\\n                                </button>\\n                                <div class=\\\"alert-message\\\">\\n                                    <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                    champs.\\n                                </div>\\n                            </div>\\n                            <!--end alert-->\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form #grForm=\\\"ngForm\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-12 col-lg-12\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>nom grossiste</label>\\n                                                <input #nomg=\\\"ngModel\\\" minlength=\\\"3\\\" required\\n                                                    [(ngModel)]=\\\"grossisteToAdd.nom_client\\\" name=\\\"nom_client\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"neoxam, seller...\\\">\\n                                                <span class=\\\"msg font-11\\\"\\n                                                    *ngIf=\\\"nomg.touched && nomg.errors\\\">nom \\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>localite</label>\\n                                                <input #localite=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                    [(ngModel)]=\\\"grossisteToAdd.Localite\\\" name=\\\"localite\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"adresse...\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"localite.touched && localite.errors\\\">localite\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-row mb-2\\\">\\n                                                    <div class=\\\"col-md-6\\\">\\n                                                        <label>numero telephone</label>\\n                                                        <input #tel=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                        [(ngModel)]=\\\"grossisteToAdd.num_tel\\\" name=\\\"tel\\\" type=\\\"text\\\"\\n                                                        class=\\\"form-control\\\" placeholder=\\\"711236547...\\\">\\n                                                    </div>\\n                                                    <div class=\\\"col-md-6\\\">\\n                                                        <label>Email</label>\\n                                                        <input #tel=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                        [(ngModel)]=\\\"grossisteToAdd.email\\\" name=\\\"email\\\" type=\\\"text\\\"\\n                                                        class=\\\"form-control\\\" placeholder=\\\"email@entreprise.tn\\\">\\n                                                    </div>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>délégé</label>\\n                                            <select required #contrat='ngModel'  [(ngModel)]=\\\"grossisteToAdd.delegue?grossisteToAdd.delegue.id : grossisteToAdd.delegue \\\"\\n                                                    name=\\\"deleg\\\" class=\\\"form-control mb-3\\\">\\n                                                    <option  *ngFor=\\\"let d of deleges\\\" [ngValue]=\\\"d.id\\\" >{{d.nom}} {{d.prenom}} {{d.email}}</option>\\n                                                </select>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>addresse complete </label>\\n                                                <textarea [(ngModel)]=\\\"grossisteToAdd.addresse\\\" name=\\\"adr\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    placeholder=\\\"l'adresse compléte...\\\"\\n                                                    rows=\\\"4\\\"></textarea>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>partenaires </label>\\n                                                <textarea [(ngModel)]=\\\"grossisteToAdd.partenaires\\\" name=\\\"part\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    placeholder=\\\"Vos remarques, ou autres informations içi...\\\"\\n                                                    rows=\\\"4\\\"></textarea>\\n                                            </div>\\n                                            <div class=\\\"form-row mt-3 float-right \\\">\\n                                                <div class=\\\"\\\">\\n                                                    <button type=\\\"submit\\\" *ngIf=\\\"ajout\\\" [disabled]=\\\"grForm.invalid\\\"\\n                                                        (click)=\\\"submit(grForm)\\\"\\n                                                        class=\\\"btn btn-primary btn-lg \\\">Enregistrer</button>\\n                                                        <button type=\\\"submit\\\" *ngIf=\\\"modification\\\" [disabled]=\\\"grForm.invalid\\\"\\n                                                        (click)=\\\"submitModif(grForm)\\\"\\n                                                        class=\\\"btn btn-warning btn-lg \\\">Enregistrer</button>\\n                                                    <button type=\\\"reset\\\"\\n                                                        class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                                </div>\\n                                            </div>\\n                                    </div>\\n                                </div>\\n\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--endform-->\\n            <div class=\\\"row\\\">\\n        </div>\\n            <div class=\\\"row\\\">\\n                <div *ngIf=\\\"listgr.length == 0\\\" class=\\\"col-md-12\\\">\\n                <div class=\\\"alert alert-primary alert-outline alert-dismissible\\\" role=\\\"alert\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n                    <div class=\\\"alert-icon\\\">\\n                        <i class=\\\"far fa-fw fa-bell\\\"></i>\\n                    </div>\\n                    <div class=\\\"alert-message\\\">\\n                        <strong>Pas de grossistes</strong> pas de grossistes dans la liste\\n                    </div>\\n                </div>\\n            </div>\\n                <div class=\\\"col-12\\\" >\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Liste des grossistes</h5>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <table class=\\\"table table-striped table-bordered \\\" [dtTrigger]=\\\"trigger\\\" datatable\\n                                [dtOptions]=\\\"dtOptions\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>nom</th>\\n                                        <th>Localite</th>\\n                                        <th>adresse</th>\\n                                        <th>délégé</th>\\n                                        <th></th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let g of listgr\\\">\\n                                        <td>{{g.nom_client}}</td>\\n                                        <td>{{g.Localite}}</td>\\n                                        <td>{{g.addresse}}</td>\\n                                        <td>{{g.delegue? g.delegue.nom+' '+g.delegue.prenom : ''}}</td>\\n                                    <td class=\\\"text-center\\\"><button (click)=\\\"editGrossiste(g)\\\" class=\\\"btn btn-pill btn-primary\\\"><i\\n                                                class=\\\"fas fa-info\\\"></i></button>\\n                                                <button class=\\\"btn btn-pill btn-danger ml-2\\\" data-toggle=\\\"modal\\\" (click)=\\\"selectedGrossiste = g\\\"\\n                                            data-target=\\\"#sizedModalSm\\\"><i class=\\\"fas fa-times\\\"></i></button>\\n\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\\n<!--modal-->\\n<div class=\\\"modal fade\\\" *ngIf=\\\"selectedGrossiste\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer le grossiste</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer {{selectedGrossiste.nom_client}}.</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteSeller()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"main\\\">\\n    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <button *ngIf=\\\"!showForm\\\" (click)=\\\"showPanel()\\\" class=\\\"btn btn-primary float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-plus\\\"></i> Nouvelle pharmacie</button>\\n            <button *ngIf=\\\"showForm\\\" (click)=\\\"hidePanel()\\\" class=\\\"btn btn-danger float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-times\\\"></i> Annuler</button>\\n            <h1 class=\\\"h3 mb-3\\\">Pharmacies</h1>\\n            <!--form-->\\n            <div class=\\\"row\\\" *ngIf=\\\"showForm\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Ajouter une pharmacie</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">informations générales</h6>\\n                            <!--    alert message    -->\\n                            <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                    <span aria-hidden=\\\"true\\\">×</span>\\n                                </button>\\n                                <div class=\\\"alert-message\\\">\\n                                    <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                    champs.\\n                                </div>\\n                            </div>\\n                            <!--end alert-->\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form #grForm=\\\"ngForm\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-12 col-lg-12\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>nom pharmacie</label>\\n                                                <input #nomg=\\\"ngModel\\\" minlength=\\\"3\\\" required\\n                                                    [(ngModel)]=\\\"pharmacieToAdd.nom_client\\\" name=\\\"nom_client\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"neoxam, seller...\\\">\\n                                                <span class=\\\"msg font-11\\\"\\n                                                    *ngIf=\\\"nomg.touched && nomg.errors\\\">nom\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>localite</label>\\n                                                <input #localite=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                    [(ngModel)]=\\\"pharmacieToAdd.Localite\\\" name=\\\"localite\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"adresse...\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"localite.touched && localite.errors\\\">localite\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-row mb-2\\\">\\n                                                <div class=\\\"col-md-6\\\">\\n                                                    <label>numero telephone</label>\\n                                                    <input #tel=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                    [(ngModel)]=\\\"pharmacieToAdd.num_tel\\\" name=\\\"tel\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"711236547...\\\">\\n                                                </div>\\n                                                <div class=\\\"col-md-6\\\">\\n                                                    <label>Email</label>\\n                                                    <input #tel=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                    [(ngModel)]=\\\"pharmacieToAdd.email\\\" name=\\\"email\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"email@entreprise.tn\\\">\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>animatrice / animateur</label>\\n                                            <select required #contrat='ngModel'  [(ngModel)]=\\\"pharmacieToAdd.delegue?pharmacieToAdd.delegue.id : pharmacieToAdd.delegue \\\"\\n                                                    name=\\\"deleg\\\" class=\\\"form-control mb-3\\\">\\n                                                    <option  *ngFor=\\\"let d of deleges\\\" [ngValue]=\\\"d.id\\\" >{{d.nom}} {{d.prenom}} {{d.email}}</option>\\n                                                </select>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>addresse complete </label>\\n                                                <textarea [(ngModel)]=\\\"pharmacieToAdd.addresse\\\" name=\\\"adr\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    placeholder=\\\"l'adresse compléte...\\\"\\n                                                    rows=\\\"4\\\"></textarea>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>partenaires </label>\\n                                                <textarea [(ngModel)]=\\\"pharmacieToAdd.partenaires\\\" name=\\\"part\\\"\\n                                                    class=\\\"form-control\\\"\\n                                                    placeholder=\\\"Vos remarques, ou autres informations içi...\\\"\\n                                                    rows=\\\"4\\\"></textarea>\\n                                            </div>\\n                                            <div class=\\\"form-row mt-3 float-right \\\">\\n                                                <div class=\\\"\\\">\\n                                                    <button type=\\\"submit\\\" *ngIf=\\\"ajout\\\" [disabled]=\\\"grForm.invalid\\\"\\n                                                        (click)=\\\"submit(grForm)\\\"\\n                                                        class=\\\"btn btn-primary btn-lg \\\">Enregistrer</button>\\n                                                        <button type=\\\"submit\\\" *ngIf=\\\"modification\\\" [disabled]=\\\"grForm.invalid\\\"\\n                                                        (click)=\\\"submitModif(grForm)\\\"\\n                                                        class=\\\"btn btn-warning btn-lg \\\">Enregistrer</button>\\n                                                    <button type=\\\"reset\\\"\\n                                                        class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                                </div>\\n                                            </div>\\n                                    </div>\\n                                </div>\\n\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--endform-->\\n            <div class=\\\"row\\\">\\n        </div>\\n            <div class=\\\"row\\\">\\n                <div *ngIf=\\\"listgr.length == 0\\\" class=\\\"col-md-12\\\">\\n                <div class=\\\"alert alert-primary alert-outline alert-dismissible\\\" role=\\\"alert\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n                    <div class=\\\"alert-icon\\\">\\n                        <i class=\\\"far fa-fw fa-bell\\\"></i>\\n                    </div>\\n                    <div class=\\\"alert-message\\\">\\n                        <strong>Pas de pharmacies</strong> pas de pharmacies dans la liste\\n                    </div>\\n                </div>\\n            </div>\\n                <div class=\\\"col-12\\\" >\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Liste des pharmacies</h5>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <table class=\\\"table table-striped table-bordered \\\" [dtTrigger]=\\\"trigger\\\" datatable\\n                                [dtOptions]=\\\"dtOptions\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>nom</th>\\n                                        <th>Localite</th>\\n                                        <th>adresse</th>\\n                                        <th>animateur(trice)</th>\\n                                        <th></th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let g of listgr\\\">\\n                                        <td>{{g.nom_client}}</td>\\n                                        <td>{{g.Localite}}</td>\\n                                        <td>{{g.addresse}}</td>\\n                                        <td>{{g.delegue? g.delegue.nom+' '+g.delegue.prenom : ''}}</td>\\n                                    <td class=\\\"text-center\\\"><button (click)=\\\"editpharmacie(g)\\\" class=\\\"btn btn-pill btn-primary\\\"><i\\n                                                class=\\\"fas fa-info\\\"></i></button>\\n                                                <button class=\\\"btn btn-pill btn-danger ml-2\\\" data-toggle=\\\"modal\\\" (click)=\\\"selectedpharmacie = g\\\"\\n                                            data-target=\\\"#sizedModalSm\\\"><i class=\\\"fas fa-times\\\"></i></button>\\n\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n</div>\\n<!--modal-->\\n<div class=\\\"modal fade\\\" *ngIf=\\\"selectedpharmacie\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer le pharmacie</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer {{selectedpharmacie.nom_client}}.</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteSeller()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"col-12 col-xl-6\\\">\\n    <div class=\\\"form-group\\\">\\n        <label>produit</label>\\n    <select class=\\\"form-control select2\\\">\\n        <option> nom du produit</option>\\n    </select>\\n    </div>\\n</div>\\n\\n<div class=\\\"col-12 col-xl-2\\\">\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"form-label\\\">quantité</label>\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"qte\\\" />\\n    </div>\\n</div>\\n<div class=\\\"col-12 col-xl-2\\\">\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"form-label\\\">remise (%)</label>\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"%\\\" name=\\\"remise\\\" />\\n    </div>\\n</div>\\n<div class=\\\"col-12 col-xl-2\\\">\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"form-label\\\">total TTC</label>\\n        <input class=\\\"form-control\\\" disabled type=\\\"number\\\" name=\\\"total\\\" />\\n    </div>\\n</div>\"","export default \"<main class=\\\"content\\\">\\n    <div id=\\\"print\\\" class=\\\"container-fluid p-0\\\" *ngIf=\\\"detailsCommande.length > 0 && selectedCommande\\\">\\n \\n        <h1 class=\\\"h3 mb-3\\\">Facture</h1>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-body m-sm-3 m-md-5\\\">\\n                        <div class=\\\"float-right\\\">\\n                            <button class=\\\"btn btn-danger\\\" (click)=\\\"detailsCommande = []\\\" id=\\\"x\\\" *ngIf=\\\"isPrinting == false\\\">X</button>\\n                        </div>\\n                        <div class=\\\"mb-4\\\">\\n                           <div class=\\\"mb-2\\\"><img src=\\\"assets/img/logo23.png\\\" /></div> \\n                           <span *ngIf=\\\"selectedCommande.client.type_client == 'pharmacie'\\\">Facture au compte de la pharmacie <strong>{{selectedCommande.client.nom_client}}</strong></span>\\n                           <span *ngIf=\\\"selectedCommande.client.type_client == 'grossiste'\\\">Facture au compte du grossiste <strong>{{selectedCommande.client.nom_client}}</strong></span>\\n\\n                           <br />\\n                            Ceci est une simulation avec un total de <strong>{{selectedCommande.prix_total}}</strong> (TND).\\n                            \\n                        </div>\\n                        \\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"text-muted\\\">Commande No.</div>\\n                                <strong>FC{{selectedCommande.id}}</strong>\\n                                <div *ngIf=\\\"selectedCommande.client.type_client === 'pharmacie'\\\" class=\\\"text-muted\\\">Type : {{selectedCommande.type}} <span class=\\\"text-muted\\\" *ngIf=\\\"selectedCommande.type === 'grossiste'\\\"> par l'intérmediaire de {{selectedCommande.grossiste_intermediare.nom_client}}.</span></div>\\n                                \\n                            </div>\\n                            <div class=\\\"col-md-6 text-md-right\\\">\\n                                <div class=\\\"text-muted\\\">Date d'emission</div>\\n                                <strong>{{selectedCommande.createdAt}}</strong>\\n                                <div class=\\\"text-muted\\\">{{selectedCommande.emetteur.nom}} {{selectedCommande.emetteur.prenom}}</div>\\n                            </div>\\n                        </div>\\n\\n                        <hr class=\\\"my-4\\\" />\\n\\n                        <div class=\\\"row mb-4\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"text-muted\\\">Client</div>\\n                                <strong>\\n                                    {{selectedCommande.client.nom_client}}\\n                                </strong>\\n                                <p>\\n                                    {{selectedCommande.client.addresse}} <br>\\n                                    <a>\\n                                        {{selectedCommande.client.Localite}}\\n                                    </a>\\n                                </p>\\n                            </div>\\n                            <div class=\\\"col-md-6 text-md-right\\\">\\n                                <strong>\\n                                    Farmavans\\n                                </strong>\\n                                <p>\\n                                    02 Rue du Paon, <br>\\n                                    Tunis <br>\\n                                    1009 <br>\\n                                    Tunisie <br>\\n                                    N° Tel +216 97 668 753 <br>\\n                                    <a href=\\\"#\\\">\\n                                        contact@farmavans.com\\n                                    </a>\\n                                </p>\\n                            </div>\\n                        </div>\\n                        <table class=\\\"table table-sm\\\" *ngIf=\\\"selectedCommande.pack_choisit\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Nom pack</th>\\n                                    <th class=\\\"text-right\\\">Prix pack</th>\\n                                </tr>\\n                               \\n                            </thead>\\n                            <tbody>\\n                                <tr>\\n                                    <td>{{selectedCommande.pack_choisit.nom_pack}}</td>\\n                                    <td class=\\\"text-right\\\">{{selectedCommande.pack_choisit.prix_total}} TND.</td>\\n                                </tr>\\n                                <tr>\\n                                    <th>&nbsp;</th>\\n                                    <th class=\\\"text-right\\\">Gratuites : Bon D'achat de {{selectedCommande.pack_choisit.valeur_bon_achat}}TND.</th>\\n                                </tr>\\n                                <tr>\\n                                    <td colspan=\\\"2\\\" class=\\\"text-right\\\">Modalités : {{selectedCommande.pack_choisit.description}}</td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <table class=\\\"table table-sm\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Description</th>\\n                                    <th>Prix unitaire</th>\\n                                    <th>Quantité</th>\\n                                    <th>Reduction</th>\\n                                    <th class=\\\"text-right\\\">Prix total</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let l of detailsCommande\\\">\\n                                    <td>{{l.produits[0].libelle}} BTE {{l.produits[0].nb_gellules}}</td>\\n                                    <td>{{l.produits[0].prix}} TND.</td>\\n                                    <td>X{{l.quantite}}</td>\\n                                    <td>{{l.remise}} %</td>\\n                                    <td class=\\\"text-right\\\">{{l.prixTTC.toFixed(3)}} TND.</td>\\n                                </tr>\\n                                <tr *ngIf=\\\"selectedCommande.total_remise > 0\\\">\\n                                    <th>&nbsp;</th>\\n                                    <th>&nbsp;</th>\\n                                    <th>&nbsp;</th>\\n                                    <th>Total remise </th>\\n                                    <th class=\\\"text-right\\\">{{selectedCommande.total_remise}} %</th>\\n                                </tr>            \\n                                <tr>\\n                                    <th>&nbsp;</th>\\n                                    <th>&nbsp;</th>\\n                                    <th>&nbsp;</th>\\n                                    <th>Nombre d'unités </th>\\n                                    <th class=\\\"text-right\\\">{{selectedCommande.nb_produits}}</th>\\n                                </tr>\\n                                <tr *ngIf=\\\"selectedCommande.client.type_client === 'grossiste' && selectedCommande.remise_total_grossite > 0\\\">\\n                                    <th>&nbsp;</th>\\n                                    <th>&nbsp;</th>\\n                                    <th>&nbsp;</th>\\n                                    <th>Remise sur commande </th>\\n                                    <th class=\\\"text-right\\\">{{selectedCommande.remise_total_grossite}} %</th>\\n                                </tr>\\n                                <tr>\\n                                    <th>&nbsp;</th>\\n                                    <th>&nbsp;</th>\\n                                    <th>&nbsp;</th>\\n                                    <th>Total </th>\\n                                    <th class=\\\"text-right\\\">{{selectedCommande.prix_total.toFixed(3)}} TND.</th>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n\\n                        <div class=\\\"text-center\\\">\\n                            <p class=\\\"text-sm\\\">\\n                                <strong>Remarques:</strong>\\n                                Devis approximatif, sauf erreur ou omission de notre part.\\n                            </p>\\n\\n                            <button id=\\\"imp\\\" *ngIf=\\\"isPrinting == false\\\" (click)=\\\"printPage()\\\" class=\\\"btn btn-primary\\\">\\n                                Imprimer\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"container-fluid p-0\\\">\\n\\n        <h1 class=\\\"h3 mb-3\\\">Historique des commmandes </h1>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h6 class=\\\"card-subtitle text-muted\\\">L'historique des commandes passées\\n                           </h6>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <table class=\\\"table table-striped table-bordered table-sm row-border hover\\\" [dtTrigger]=\\\"trigger\\\" datatable [dtOptions]=\\\"dtOptions\\\">\\n                            <thead>\\n                              <tr>\\n                                <th>#</th>\\n                                <th>Client</th>\\n                                <th *ngIf=\\\"user.role == 'admin'\\\">Délégué</th>\\n                                <th>Type client</th>\\n                                <th>Type vente</th>\\n                                <th>Date</th>\\n                                <th>Prix total</th>\\n                                <th></th>\\n                              </tr>\\n                            </thead>\\n                            <tbody>\\n                             <tr *ngFor=\\\"let c of commandes\\\">\\n                                    <td>FC{{c.id}}</td>                          \\n                                   <td>{{c.client.nom_client}}</td>\\n                                   <td  *ngIf=\\\"user.role == 'admin'\\\">{{c.emetteur.nom}} {{c.emetteur.prenom}}</td>\\n                                   <td class=\\\"text-center\\\"><span [ngClass]=\\\"c.client.type_client == 'grossiste'? 'badge badge-warning' : 'badge badge-info'\\\">{{c.client.type_client}}</span></td>\\n                                   <td>{{c.type}}</td>\\n                                   <td>Le {{c.createdAt | date : 'dd/MM/yyyy hh:mm'}}</td>\\n                                   <td>{{c.prix_total}} TND</td>\\n                                   <td class=\\\"text-center\\\"><button (click)=\\\"loadInvoice(c)\\\" class=\\\"btn btn-success btn-sm\\\">détails</button>\\n                                    <button (click)=\\\"deletableInvoice = c\\\" data-toggle=\\\"modal\\\" data-target=\\\"#sizedModalSm\\\" class=\\\"btn btn-danger  btn-sm ml-2\\\">X</button></td>\\n                               </tr>\\n                            </tbody>\\n                          </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</main>\\n\\n<!--modal-->\\n<div class=\\\"modal fade\\\" *ngIf=\\\"deletableInvoice\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer la commande </h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer la commande N° FC{{deletableInvoice.id}} de {{deletableInvoice.client.nom_client}} au prix de {{deletableInvoice.prix_total}} TND?</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteInvoice()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"\\n    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <h1 class=\\\"h3 mb-3\\\">Nouvelle commande</h1>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-lg-12 col-xxl-6 d-flex\\\">\\n                    <div class=\\\"card flex-fill\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Choix du client</h5>\\n\\n                            <h3 class=\\\"text-muted float-right\\\"><span class=\\\"badge badge-success\\\"><i class=\\\"align-middle mr-2 fas fa-fw fa-calendar-alt\\\"></i>{{today | date :'dd/MM/yyyy hh:mm:ss'}}</span></h3>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"mb-3\\\">\\n                                <label>client</label>\\n                                <select class=\\\"form-control select2\\\" [(ngModel)]=\\\"targetClient\\\" (change)=\\\"verifyPack()\\\" required name=\\\"cli\\\" data-toggle=\\\"select2\\\">\\n                                    <option selected disabled value=\\\"0\\\">Veuillez Selectionner un client</option>\\n                                    <option *ngFor=\\\"let c of clients \\\" [ngValue]=\\\"c\\\">\\n                                        <span *ngIf=\\\"c.type_client=='grossiste'\\\" class=\\\"badge badge-pill badge-secondary\\\">Grossiste</span>\\n                                        <span *ngIf=\\\"c.type_client == 'pharmacie'\\\" class=\\\"badge badge-pill badge-success\\\">Pharmacie</span>\\n                                         {{c.nom_client}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <div class=\\\"mb-3\\\" *ngIf=\\\"targetClient && targetClient.type_client == 'pharmacie'\\\">\\n                                <label>type de vente</label>\\n                                <select [required]=\\\"targetClient.type_client == 'pharmacie'\\\" [(ngModel)]=\\\"commandeToAdd.type\\\" class=\\\"form-control select2\\\"  name=\\\"typev\\\" data-toggle=\\\"select2\\\">\\n                                    <option selected disabled value=\\\"0\\\">Veuillez Selectionner un type de vente</option>\\n                                    <option value=\\\"direct\\\">vente directe</option>\\n                                    <option value=\\\"grossiste\\\">vente grossiste</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"mb-3\\\" *ngIf=\\\"targetClient && targetClient.type_client == 'pharmacie' && commandeToAdd.type == 'grossiste'\\\">\\n                                <label>Choisir un grossiste intermediare</label>\\n                                <select  [(ngModel)]=\\\"commandeToAdd.grossiteIntermediareId\\\"  class=\\\"form-control select2\\\"  name=\\\"grossisteinterm\\\">\\n                                    <option selected disabled value=\\\"0\\\">Veuillez Selectionner un grossiste intermediare</option>\\n                                    <option *ngFor=\\\"let g of grossistes\\\" [ngValue]=\\\"g.id\\\">{{g.nom_client}}</option>\\n                                </select>\\n                            </div>\\n                            <div class=\\\"mb-3\\\" *ngIf=\\\"targetClient && targetClient.type_client == 'pharmacie' && commandeToAdd.type\\\">\\n                                <label>Choisir un Pack</label>\\n                                <select  [(ngModel)]=\\\"selectedPack\\\" (change)=\\\"loadPackage()\\\"  class=\\\"form-control select2\\\"  name=\\\"pack\\\">\\n                                    <option selected disabled value=\\\"0\\\">Veuillez Selectionner un pack</option>\\n                                    <option *ngFor=\\\"let p of packs\\\" [ngValue]=\\\"p\\\">{{p.nom_pack}}</option>\\n                                </select>\\n                            </div>\\n                            <div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-12 col-lg-12 col-xxl-6 d-flex\\\" *ngIf=\\\"targetClient\\\">\\n                    <div class=\\\"card flex-fill\\\">\\n                        <div class=\\\"card-header\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                            <h5 class=\\\"card-title\\\">Détails de la commande</h5><button class=\\\"btn btn-primary\\\" (click)=\\\"addProduct()\\\">Ajouter produit</button>\\n                            <h1 class=\\\"text-muted float-right\\\" *ngIf=\\\"isPanache && prixpanacheActuel >= 0\\\">SOLDE : {{ (selectedPack.prix_total - prixpanacheActuel).toFixed(2)}} TND.</h1>\\n                        </div>\\n                        </div>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form [formGroup]=\\\"commandeForm\\\" >\\n                                <div formArrayName=\\\"products\\\">\\n                            <div class=\\\"row\\\" *ngFor=\\\"let product of products().controls; let i=index\\\" [formGroupName]=\\\"i\\\">                               \\n                                <div class=\\\"col-12 col-xl-5\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>produit</label>\\n                                    <select (change)=\\\"calculRed(i,pttc)\\\" formControlName=\\\"produit\\\" #selectedp class=\\\"form-control select2\\\" name=\\\"product\\\">\\n                                        <option *ngFor=\\\"let p of produits\\\" [ngValue]=\\\"p.id\\\"> {{p.libelle}} BTE {{p.nb_gellules}} PU : {{p.prix}}</option>\\n                                    </select>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-6 col-xl-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">quantité</label>\\n                                        <input formControlName=\\\"quantite\\\" #qte (change)=\\\"calculRed(i,pttc)\\\"  class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"qte\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-6 col-xl-2\\\">\\n                                    <div class=\\\"form-group\\\" >\\n                                        <label class=\\\"form-label\\\">remise (%)</label>\\n                                        <input formControlName=\\\"reduction\\\" (change)=\\\"calculRed(i,pttc)\\\"\\n                                         #red class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"%\\\" name=\\\"reduction\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-6 col-xl-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">total</label>\\n                                        <input formControlName=\\\"prixTTC\\\" #pttc class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"prixTTC\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-6 col-xl-1\\\">\\n                                    <div class=\\\"form-group\\\">                                        \\n                                    <button (click)=\\\"removeProduct(i)\\\" class=\\\"btn btn-white mt-4\\\">X</button>\\n                                    </div>\\n                                </div>\\n                                <hr>\\n                            </div>\\n                            </div>\\n                            <div class=\\\"row text-center\\\" *ngIf=\\\"estimations && totalQte >= 0 && totalReduction >=0 \\n                                && totalTTC >= 0\\\">\\n                                <div class=\\\"col-0 col-xl-6\\\"  *ngIf=\\\"selectedPack\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <span> <i class=\\\"fas fa-fw fa-angle-right\\\"></i> Prix fixé selon le prix du pack choisit <strong *ngIf=\\\"isPanache && prixpanacheActuel >= 0\\\">il vous reste {{selectedPack.prix_total - prixpanacheActuel}} TND.</strong></span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-3 col-xl-4\\\" *ngIf=\\\"!selectedPack\\\"></div>\\n                                <div class=\\\"col-3 col-xl-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">{{totalQte}} produits</label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-3 col-xl-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\"> {{totalReduction}} % de remise</label>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-2 col-xl-2\\\" *ngIf=\\\"targetClient.type_client == 'grossiste'\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                       <input type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"commandeToAdd.remise_total_grossite\\\" \\n                                       placeholder=\\\"reduction (%)\\\" (change)=\\\"estimationTotal()\\\" [ngModelOptions]=\\\"{standalone: true}\\\" name=\\\"rem_tot\\\" >\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-3 col-xl-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">total : {{totalTTC.toFixed(2)}} TND</label>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\" *ngIf=\\\"estimations && totalQte >= 0 && totalReduction >=0 && totalTTC >= 0 && selectedPack && selectedPack.valeur_bon_achat\\\">\\n                                <div class=\\\"col-0 col-xl-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <ul>\\n                                            <li *ngIf=\\\"selectedPack && selectedPack.valeur_bon_achat\\\">BON D'ACHAT DE VALEUR : {{selectedPack.valeur_bon_achat}} TND.</li>\\n                                            <li *ngIf=\\\"selectedPack && selectedPack.description\\\">Remarques : {{selectedPack.description}}</li>\\n                                        </ul>\\n                                     \\n                                    </div>\\n                                </div>\\n                            </div>\\n                                <div class=\\\"form-row mt-3 float-right\\\">\\n                                <input value=\\\"soumettre\\\" type=\\\"submit\\\" [disabled]=\\\"!targetClient || commandeForm.invalid || products().length == 0 || totalTTC <= 0\\\" class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\">\\n                                <button type=\\\"reset\\\" (click)=\\\"reset()\\\" class=\\\"btn btn-danger ml-2\\\">annuler</button>\\n                            </div>\\n                        </form>\\n                            </div>\\n                        \\n                        </div>\\n                    </div>\\n                </div>\\n        </div>\\n    </main>\"","export default \"<main class=\\\"content\\\">\\n    <div class=\\\"container-fluid p-0\\\">\\n\\n        <h1 class=\\\"h3 mb-3\\\">Contacts</h1>\\n        <div class=\\\"row\\\" *ngIf=\\\"ajout || modification\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"card-title mb-0\\\">Ajouter un contact</h5>\\n                        <button *ngIf=\\\"ajout || modification\\\" (click)=\\\"cancelEditionOrAdd()\\\" class=\\\"btn btn-round btn-danger float-right\\\">Annuler</button>\\n                    </div>\\n                     <!--    alert message    -->\\n                     <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">×</span>\\n                        </button>\\n                        <div class=\\\"alert-message\\\">\\n                            <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                            champs.\\n                        </div>\\n                    </div>\\n                    <!--end alert-->\\n                    <div class=\\\"card-body\\\">\\n                        <form #grForm=\\\"ngForm\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-12 col-lg-12\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Nom du contact</label>\\n                                            <input #nomg=\\\"ngModel\\\" minlength=\\\"2\\\" required\\n                                                [(ngModel)]=\\\"contactToAdd.nom\\\" name=\\\"nom_client\\\" type=\\\"text\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"neoxam, seller...\\\">\\n                                            <span class=\\\"msg font-11\\\"\\n                                                *ngIf=\\\"nomg.touched && nomg.errors\\\">nom\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                            <label>Type de contact</label>\\n                                            <input #type=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                [(ngModel)]=\\\"contactToAdd.type\\\" name=\\\"type\\\" type=\\\"text\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"adresse...\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"type.touched && type.errors\\\">type\\n                                                invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <label>Activité du contact</label>\\n                                                <input #activite=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                [(ngModel)]=\\\"contactToAdd.activite\\\" name=\\\"activite\\\" type=\\\"text\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"adresse...\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"activite.touched && activite.errors\\\">activité\\n                                                invalide*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-row mb-2\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <label>N° telephone</label>\\n                                                <input required #tel=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                [(ngModel)]=\\\"contactToAdd.numtel\\\" name=\\\"tel\\\" type=\\\"text\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"711236547...\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"tel.touched && tel.errors\\\">N°Tel invalide\\n                                                    invalide*</span>\\n                                            </div>\\n                                            \\n                                            \\n                                            <div class=\\\"col-md-6\\\">\\n                                                <label>Email</label>\\n                                                <input #email=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                [(ngModel)]=\\\"contactToAdd.email\\\" name=\\\"email\\\" type=\\\"text\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"email@entreprise.tn\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"email.touched && email.errors\\\">email invalide\\n                                                    invalide*</span>\\n                                            </div>\\n                                            \\n                                        </div>\\n                                        \\n                                        <div class=\\\"form-group\\\">\\n                                            <label>addresse complete </label>\\n                                            <textarea [(ngModel)]=\\\"contactToAdd.addresse\\\" name=\\\"adr\\\"\\n                                                class=\\\"form-control\\\"\\n                                                placeholder=\\\"l'adresse compléte...\\\"\\n                                                rows=\\\"4\\\"></textarea>\\n                                        </div>                                       \\n                                        <div class=\\\"form-row mt-3 float-right \\\">\\n                                            <div class=\\\"\\\">\\n                                                <button type=\\\"submit\\\" *ngIf=\\\"ajout\\\" [disabled]=\\\"grForm.invalid\\\"\\n                                                    (click)=\\\"addContact(grForm)\\\"\\n                                                    class=\\\"btn btn-primary btn-lg \\\">Ajouter</button>\\n                                                    <button type=\\\"submit\\\" *ngIf=\\\"modification\\\" [disabled]=\\\"grForm.invalid\\\"\\n                                                    (click)=\\\"updateContact(grForm)\\\"\\n                                                    class=\\\"btn btn-warning btn-lg \\\">Enregistrer</button>\\n                                                <button type=\\\"reset\\\"\\n                                                    class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                            </div>\\n                                        </div>\\n                                </div>\\n                            </div>\\n\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-xl-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"card-title mb-0\\\">Liste des contacts</h5>\\n                        <button *ngIf=\\\"!ajout && !modification\\\" (click)=\\\"addNewContact()\\\" class=\\\"btn btn-round btn-primary float-right\\\">Ajouter</button>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <table id=\\\"datatables-clients\\\" datatable [dtOptions]=\\\"options\\\" [dtTrigger]=\\\"trigger\\\" class=\\\"table table-striped\\\" style=\\\"width:100%\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>#</th>\\n                                    <th>Contact</th>\\n                                    <th>Type</th>\\n                                    <th>N° Tel</th>\\n                                    <th>Details</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let c of contacts; let i=index\\\">\\n                                    <td>{{i+1}}</td>\\n                                    <td>{{c.nom}}</td>\\n                                    <td>{{c.type}}</td>\\n                                    <td>{{c.numtel}}</td>\\n                                    <td><button (click)=\\\"showDetails(c)\\\" class=\\\"btn btn-success btn-sm\\\">details</button></td>\\n                                </tr>                               \\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-4\\\">\\n                <div class=\\\"card\\\">\\n                    <div *ngIf=\\\"loading\\\" class=\\\"col-12 text-center mt-5 mb-5 \\\">\\n                        <div class=\\\"px-4 d-none d-md-block\\\">\\n                            <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\">\\n                                <span class=\\\"sr-only\\\">Loading...</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"!loading\\\">\\n                    <div class=\\\"card-header\\\">   \\n                        <button class=\\\"btn btn-white btn-sm float-right\\\" (click)=\\\"setContactForEdit(contactForDetails)\\\"><i class=\\\"align-middle mr-2 far fa-fw fa-edit\\\"></i></button>\\n                        <button class=\\\"btn btn-white btn-sm float-right\\\" data-toggle=\\\"modal\\\"  data-target=\\\"#sizedModalSm\\\" (click)=\\\"setContact(contactForDetails)\\\">X</button>                    \\n                        <h5 class=\\\"card-title mb-0\\\">{{contactForDetails.nom}}</h5>\\n                       \\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        \\n                        <div class=\\\"row no-gutters\\\">\\n                            <div class=\\\"col-sm-3 col-xl-12 col-xxl-3 text-center\\\">\\n                                <img src=\\\"assets/img/default.png\\\" width=\\\"64\\\" height=\\\"64\\\" class=\\\"rounded-circle mt-2\\\" alt=\\\"Angelica Ramos\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-9 col-xl-12 col-xxl-9\\\">\\n                                <strong>Adresse</strong>\\n                                <p>{{contactForDetails.addresse}}</p>\\n                            </div>\\n                        </div>\\n\\n                        <table class=\\\"table table-sm my-2\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <th>Nom</th>\\n                                    <td>{{contactForDetails.nom}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <th>Type</th>\\n                                    <td>{{contactForDetails.type}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <th>Email</th>\\n                                    <td>{{contactForDetails.email}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <th>Telephone</th>\\n                                    <td>{{contactForDetails.numtel}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <th>Ajouté par</th>\\n                                    <td>{{contactForDetails.added_by}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <th>Ajouté le</th>\\n                                    <td><span class=\\\"badge badge-success\\\">{{contactForDetails.createdAt | date:'short'}}</span></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                        <hr />\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</main>\\n\\n<div class=\\\"modal fade\\\" *ngIf=\\\"contactToDelete\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer le contact</h5>\\n                <button (click)=\\\"contactToDelete = null\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer {{contactToDelete.nom}} ?</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"contactToDelete = null\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteContact()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- END  modal -->\"","export default \"\\n    <main class=\\\"content\\\">\\n\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <div class=\\\"row mb-2 mb-xl-3\\\">\\n                <div class=\\\"col-auto d-none d-sm-block\\\">\\n                    <h3><strong>Tableau</strong> de bord</h3>\\n                </div>\\n\\n                <div class=\\\"col-auto ml-auto text-right mt-n1\\\">\\n                    <nav aria-label=\\\"breadcrumb\\\">\\n                        <ol class=\\\"breadcrumb bg-transparent p-0 mt-1 mb-0\\\">\\n                            <li class=\\\"breadcrumb-item\\\">Farmavans</li>\\n                            <li class=\\\"breadcrumb-item\\\">Dashboard</li>\\n                            <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Statistiques</li>\\n                        </ol>\\n                    </nav>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-6 col-xl-3\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col mt-0\\\">\\n                                    <h5 class=\\\"card-title\\\">Ventes {{year | date : 'yyyy'}}</h5>\\n                                </div>\\n\\n                                <div class=\\\"col-auto\\\">\\n                                    <div class=\\\"avatar\\\">\\n                                        <div class=\\\"avatar-title rounded-circle bg-primary-light\\\">\\n                                            <i class=\\\"align-middle fas fa-fw fa-dollar-sign\\\"></i>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <h1 class=\\\"display-5 mt-1 mb-3\\\">{{stats.income && stats.income.sum ? stats.income.sum : 0}} TND</h1>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-xl-3\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col mt-0\\\">\\n                                    <h5 class=\\\"card-title\\\">Commandes</h5>\\n                                </div>\\n\\n                                <div class=\\\"col-auto\\\">\\n                                    <div class=\\\"avatar\\\">\\n                                        <div class=\\\"avatar-title rounded-circle bg-primary-light\\\">\\n                                            <i class=\\\"align-middle fas fa-fw fa-dolly\\\"></i>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <h1 class=\\\"display-5 mt-1 mb-3\\\">{{stats.cmd}}</h1>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-xl-3\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col mt-0\\\">\\n                                    <h5 class=\\\"card-title\\\">Rapports</h5>\\n                                </div>\\n\\n                                <div class=\\\"col-auto\\\">\\n                                    <div class=\\\"avatar\\\">\\n                                        <div class=\\\"avatar-title rounded-circle bg-primary-light\\\">\\n                                            <i class=\\\"align-middle fas fa-fw fa-sticky-note\\\"></i>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <h1 class=\\\"display-5 mt-1 mb-3\\\">{{stats.rapports}}</h1>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-xl-3\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col mt-0\\\">\\n                                    <h5 class=\\\"card-title\\\">Ventes cette semaine</h5>\\n                                </div>\\n\\n                                <div class=\\\"col-auto\\\">\\n                                    <div class=\\\"avatar\\\">\\n                                        <div class=\\\"avatar-title rounded-circle bg-primary-light\\\">\\n                                            <i class=\\\"align-middle fas fa-fw fa-shopping-cart\\\"></i>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <h1 class=\\\"display-5 mt-1 mb-3\\\" *ngIf=\\\"stats.weeklyIncome >=0\\\">{{stats.weeklyIncome}} TND</h1>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-lg-8 d-flex\\\">\\n                    <div class=\\\"card flex-fill w-100\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title mb-0\\\">Revenues par mois</h5>\\n                        </div>\\n                        <div class=\\\"card-body py-3\\\">\\n                            <div class=\\\"chart chart-md\\\">\\n                                <div *ngIf=\\\"lineChartData.length > 0 && lineChartLabels.length > 0\\\" style=\\\"display: block;\\\">\\n                                    <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n                                    [datasets]=\\\"lineChartData\\\"\\n                                    [labels]=\\\"lineChartLabels\\\"     \\n                                    [options]=\\\"lineChartOptions\\\" \\n                                    [colors]=\\\"lineChartColors\\\"  \\n                                    [legend]=\\\"true\\\"                   \\n                                    [chartType]=\\\"'line'\\\" ></canvas>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12 col-lg-4 d-flex\\\">\\n                    <div class=\\\"card flex-fill w-100\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title mb-0\\\">Ventes par délégué</h5>\\n                        </div>\\n                        <div class=\\\"card-body px-4\\\">\\n                            <div *ngIf=\\\"lineChartData.length > 0 && lineChartLabels.length > 0\\\" style=\\\"display: block;\\\">\\n                                <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n                                [datasets]=\\\"barChartData\\\"\\n                                [labels]=\\\"barChartLabels\\\"     \\n                                [options]=\\\"lineChartOptions\\\" \\n                                [colors]=\\\"barChartColors\\\"  \\n                                [legend]=\\\"true\\\"                   \\n                                [chartType]=\\\"'bar'\\\" ></canvas>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </main>\\n\"","export default \"<main class=\\\"content\\\">\\n    <div class=\\\"container-fluid p-0\\\">\\n\\n        <h1 class=\\\"h3 mb-3\\\">Evaluations</h1>\\n        <div class=\\\"row\\\" *ngIf=\\\"(ajout || modification) && selectedDelegue\\\">\\n            <div class=\\\"col-xl-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"card-title mb-0\\\">Evaluer {{selectedDelegue.nom}} {{selectedDelegue.prenom}}</h5>\\n                        <button *ngIf=\\\"ajout || modification\\\" (click)=\\\"cancelEditionOrAdd()\\\" class=\\\"btn btn-round btn-danger float-right\\\">Annuler</button>\\n                    </div>\\n                     <!--    alert message    -->\\n                     <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                            <span aria-hidden=\\\"true\\\">×</span>\\n                        </button>\\n                        <div class=\\\"alert-message\\\">\\n                            <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                            champs.\\n                        </div>\\n                    </div>\\n                    <!--end alert-->\\n                    <div class=\\\"card-body\\\">\\n                        <form #grForm=\\\"ngForm\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-12 col-lg-12\\\">  \\n                                    <div class=\\\"form-row mb-2\\\">\\n                                        <div class=\\\"col-md-3\\\">\\n                                        <label>Nom</label>\\n                                        <input #nom=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                            [(ngModel)]=\\\"evalToAdd.nom_sortie\\\" name=\\\"nom_sortie\\\" type=\\\"text\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"sortie 1,sortie 2...\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"nom.touched && nom.errors\\\">Nom\\n                                            invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Date de sortie</label>\\n                                            <input #date_sortie=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.date_sortie\\\" name=\\\"date_sortie\\\" type=\\\"date\\\"\\n                                                class=\\\"form-control\\\" >\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"date_sortie.touched && date_sortie.errors\\\">Date\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Secteur</label>\\n                                            <input #secteur=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                            [(ngModel)]=\\\"evalToAdd.secteur\\\" name=\\\"secteur\\\" type=\\\"text\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"nord, centre...\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"secteur.touched && secteur.errors\\\">secteur\\n                                            invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Note globale</label> \\n                                            <input #noteg=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\"\\n                                            [(ngModel)]=\\\"evalToAdd.note_globale\\\" name=\\\"noteg\\\" type=\\\"number\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"noteg.touched && noteg.errors\\\">Note\\n                                            invalide*</span>\\n                                        </div>\\n                                    </div>    \\n                                    <div class=\\\"form-row mt-2 ml-2\\\">\\n                                        <i class=\\\"fas fa-fw fa-user\\\"></i><h5>Qualités personelles</h5>\\n                                    </div>\\n                                    <div class=\\\"form-row\\\">\\n                                        <div class=\\\"col-md-3\\\">\\n                                        <label>Presentation</label>\\n                                        <input #presentation=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                            [(ngModel)]=\\\"evalToAdd.presentation\\\" name=\\\"presentation\\\" type=\\\"number\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"presentation.touched && presentation.errors\\\">note\\n                                            invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Expressions orales</label>\\n                                            <input #exp_orale=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.exp_orale\\\" name=\\\"exp_orale\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"exp_orale.touched && exp_orale.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Gestuelle</label>\\n                                            <input #gestuelle=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.gestuelle\\\" name=\\\"gestuelle\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"gestuelle.touched && gestuelle.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Propreté voiture</label>\\n                                            <input #prop_voiture=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.prop_voiture\\\" name=\\\"prop_voiture\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"prop_voiture.touched && prop_voiture.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-row mt-2 ml-2\\\">\\n                                        <i class=\\\"fas fa-fw fa-university\\\"></i><h5>Connaissances scientifiques</h5>\\n                                    </div>\\n                                    <div class=\\\"form-row\\\">\\n                                        <div class=\\\"col-md-6\\\">\\n                                        <label>Conaissance produit</label>\\n                                        <input #conaissance_produit=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\"\\n                                            [(ngModel)]=\\\"evalToAdd.conaissance_produit\\\" name=\\\"conaissance_produit\\\" type=\\\"number\\\" (change)=\\\"calculMoy()\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"conaissance_produit.touched && conaissance_produit.errors\\\">note\\n                                            invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-6\\\">\\n                                            <label>Conaissance concurrence</label>\\n                                            <input #conaissance_concurrence=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.conaissance_concurrence\\\" name=\\\"conaissance_concurrence\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"conaissance_concurrence.touched && conaissance_concurrence.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                    </div>   \\n                                    <div class=\\\"form-row mt-2 ml-2\\\">\\n                                        <i class=\\\"fas fa-fw fa-briefcase-medical\\\"></i><h5>Technique de visite médicale</h5>\\n                                    </div>\\n                                    <div class=\\\"form-row\\\">\\n                                        <div class=\\\"col-md-2\\\">\\n                                        <label>Etablir la sécurité</label>\\n                                        <input #etablir_securite=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                            [(ngModel)]=\\\"evalToAdd.etablir_securite\\\" name=\\\"etablir_securite\\\" type=\\\"number\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"etablir_securite.touched && etablir_securite.errors\\\">note\\n                                            invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <label>Mise en place</label>\\n                                            <input #mise_en_place=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.mise_en_place\\\" name=\\\"mise_en_place\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"mise_en_place.touched && mise_en_place.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <label>Négotiation</label>\\n                                            <input #nego_pack=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.nego_pack\\\" name=\\\"nego_pack\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"nego_pack.touched && nego_pack.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <label>Ecoute</label>\\n                                            <input #ecoute=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.ecoute\\\" name=\\\"ecoute\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"ecoute.touched && ecoute.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <label>Observation</label>\\n                                            <input #observation=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.observation\\\" name=\\\"observation\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"observation.touched && observation.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <label>Questionnement</label>\\n                                            <input #questionnement=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\" \\n                                                [(ngModel)]=\\\"evalToAdd.questionnement\\\" name=\\\"questionnement\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"questionnement.touched && questionnement.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                    </div>  \\n                                    <div class=\\\"form-row mt-2\\\">\\n                                        <div class=\\\"col-md-3\\\">\\n                                        <label>Feedback prescription</label>\\n                                        <input #feedback_prescrip=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                            [(ngModel)]=\\\"evalToAdd.feedback_prescrip\\\" name=\\\"feedback_prescrip\\\" type=\\\"number\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"feedback_prescrip.touched && feedback_prescrip.errors\\\">note\\n                                            invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Traitement des objections</label>\\n                                            <input #traitement_objections=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.traitement_objections\\\" name=\\\"traitement_objections\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"traitement_objections.touched && traitement_objections.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Conclusion/engagement</label>\\n                                            <input #conclusion=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.conclusion\\\" name=\\\"conclusion\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"conclusion.touched && conclusion.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Utilisation MP</label> \\n                                            <input #utilisation_mp=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.utilisation_mp\\\" name=\\\"utilisation_mp\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"utilisation_mp.touched && utilisation_mp.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                    </div>  \\n                                    <div class=\\\"form-row mt-2 ml-2\\\">\\n                                        <i class=\\\"fas fa-fw fa-external-link-square-alt\\\"></i><h5>Organisation / Administratif</h5> \\n                                    </div>\\n                                    <div class=\\\"form-row mb-2\\\">\\n                                        <div class=\\\"col-md-3\\\">\\n                                        <label>Plan journée</label>\\n                                        <input #plan_journee=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                            [(ngModel)]=\\\"evalToAdd.plan_journee\\\" name=\\\"plan_journee\\\" type=\\\"number\\\"\\n                                            class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"plan_journee.touched && plan_journee.errors\\\">note\\n                                            invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <label>Ciblage</label>\\n                                            <input #ciblage=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.ciblage\\\" name=\\\"ciblage\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"ciblage.touched && ciblage.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <label>Administratif</label> \\n                                            <input #administratif=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.administratif\\\" name=\\\"administratif\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"administratif.touched && administratif.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-3\\\">\\n                                            <label>Maitrise clients</label>\\n                                            <input #maitrise_clients=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\" (change)=\\\"calculMoy()\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.maitrise_clients\\\" name=\\\"maitrise_clients\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"maitrise_clients.touched && maitrise_clients.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"col-md-2\\\">\\n                                            <label>Maitrise terrain</label>\\n                                            <input (change)=\\\"calculMoy()\\\" #maitrise_terrain=\\\"ngModel\\\" required min=\\\"0\\\" max=\\\"10\\\"\\n                                                [(ngModel)]=\\\"evalToAdd.maitrise_terrain\\\" name=\\\"maitrise_terrain\\\" type=\\\"number\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"/10\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"maitrise_terrain.touched && maitrise_terrain.errors\\\">note\\n                                                invalide*</span>\\n                                        </div>\\n                                    </div> \\n                                    <div class=\\\"form-row\\\">\\n                                        <div class=\\\"col-md-12\\\">\\n                                        <label><i class=\\\"fas fa-fw fa-thumbtack\\\"></i>Objectifs</label>\\n                                        <textarea [(ngModel)]=\\\"evalToAdd.objectifs\\\" name=\\\"objectifs\\\" class=\\\"form-control\\\" rows=\\\"5\\\"></textarea>\\n                                        </div>\\n                                    </div>                           \\n                                </div>                                                                                                             \\n                                \\n                            </div> \\n                            <div class=\\\"form-row mt-4 float-right\\\">\\n                                <div class=\\\"\\\">\\n                                    <button type=\\\"submit\\\" *ngIf=\\\"ajout\\\" [disabled]=\\\"grForm.invalid\\\"\\n                                        (click)=\\\"addReview(grForm)\\\"\\n                                        class=\\\"btn btn-primary btn-lg \\\">Ajouter</button>\\n                                        <button type=\\\"submit\\\" *ngIf=\\\"modification\\\" [disabled]=\\\"grForm.invalid\\\"\\n                                        (click)=\\\"updateReview(grForm)\\\"\\n                                        class=\\\"btn btn-warning btn-lg \\\">Enregistrer</button>\\n                                    <button type=\\\"reset\\\"\\n                                        class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                </div>\\n                            </div>                       \\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div [ngClass]=\\\"selectedDelegue ? 'col-xl-8' : 'col-xl-12'\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"card-title mb-0\\\">Liste des délégués / animatrices</h5>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div *ngIf=\\\"loadUsers == true\\\" class=\\\"col-12 text-center mt-5 mb-5 \\\">\\n                            <div class=\\\"px-4 d-none d-md-block\\\">\\n                                <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\">\\n                                    <span class=\\\"sr-only\\\">Loading...</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <table  id=\\\"datatables-clients\\\"  [dtOptions]=\\\"options\\\" [dtTrigger]=\\\"trigger\\\" datatable class=\\\"table table-striped\\\" style=\\\"width:100%\\\">\\n                                <thead>\\n                                <tr>\\n                                    <th>Nom complet</th>\\n                                    <th>adresse mail</th>\\n                                    <th>N° telephone</th>                                    \\n                                    <th>Details</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let c of users; let i=index\\\">\\n                                    <td>{{c.nom}} {{c.prenom}}</td>\\n                                    <td>{{c.email}}</td>\\n                                    <td>{{c.telephone ? c.telephone : 'aucun'}}</td>\\n                                    <td><button (click)=\\\"showDetails(c)\\\" class=\\\"btn btn-success btn-sm\\\">evaluations</button></td>\\n                                </tr>\\n                            </tbody>                               \\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-4\\\" *ngIf=\\\"selectedDelegue\\\">\\n                <div class=\\\"card\\\">\\n                    <div *ngIf=\\\"loading\\\" class=\\\"col-12 text-center mt-5 mb-5 \\\">\\n                        <div class=\\\"px-4 d-none d-md-block\\\">\\n                            <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\">\\n                                <span class=\\\"sr-only\\\">Loading...</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"!loading && selectedDelegue\\\">\\n                    <div class=\\\"card-header\\\">       \\n                        <h5 class=\\\"card-title mb-0\\\">{{selectedDelegue.nom}} {{selectedDelegue.prenom}}</h5>                    \\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        \\n                        <div class=\\\"row no-gutters\\\">\\n                            <div class=\\\"col-sm-3 col-xl-12 col-xxl-3 text-center mb-3 mt-2\\\">\\n                                <img [src]=\\\"selectedDelegue.imageUrl ? selectedDelegue.imageUrl :  'assets/img/default.png'\\\" (error)=\\\"selectedDelegue.imageUrl = 'assets/img/default.png'\\\" width=\\\"64\\\" height=\\\"64\\\" class=\\\"rounded-circle mt-2\\\" alt=\\\"Angelica Ramos\\\">\\n                                <span class=\\\"badge badge-pill badge-primary ml-2\\\">{{noteDelegeTotal? noteDelegeTotal.toFixed(1) : 0}}/10</span>\\n                            </div>\\n                            <div class=\\\"col-sm-9 col-xl-12 col-xxl-9\\\" *ngIf=\\\"selectedDelegue.about\\\">\\n                                <strong>Bio</strong>\\n                                <p>{{selectedDelegue.about}}</p>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"text-center\\\" *ngIf=\\\"evaluations.length == 0\\\">\\n                            <strong>Aucune evaluation enregistrée</strong>\\n                        </div>\\n                        <table class=\\\"table table-striped table-sm text-center\\\" *ngIf=\\\"evaluations.length > 0\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>evaluation</th>\\n                                    <th>date</th>\\n                                    <th>score</th>\\n                                    <th></th>\\n                                    <th></th>\\n                                </tr>                                                             \\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let ev of evaluations\\\"> \\n                                    <td>{{ev.nom_sortie}}</td>\\n                                    <td><span class=\\\"badge badge-primary\\\">{{ev.date_sortie}}</span></td>\\n                                    <td>{{ev.note_globale.toFixed(1)}}/10</td>\\n                                    <td><button (click)=\\\"editEval(ev)\\\" class=\\\"btn btn-warning btn-sm\\\"><i class=\\\"align-middle fas fa-fw fa-star\\\"></i></button></td>\\n                                    <td><button data-toggle=\\\"modal\\\"  data-target=\\\"#sizedModalSm\\\" (click)=\\\"evalToDelete = ev\\\"  class=\\\"btn btn-danger btn-sm\\\">X</button></td>\\n                                </tr>   \\n                            </tbody>\\n                        </table>\\n                        <div *ngIf=\\\"lineChartData.length > 0 && lineChartLabels.length > 0\\\" style=\\\"display: block;\\\">\\n                            <canvas baseChart width=\\\"400\\\" height=\\\"400\\\"\\n                            [datasets]=\\\"lineChartData\\\"\\n                            [labels]=\\\"lineChartLabels\\\"     \\n                            [options]=\\\"lineChartOptions\\\" \\n                            [colors]=\\\"lineChartColors\\\"  \\n                            [legend]=\\\"true\\\"                   \\n                            [chartType]=\\\"'line'\\\" ></canvas>\\n                        </div>\\n                        <hr />\\n                    </div>\\n                </div>\\n                <button (click)=\\\"evaluer()\\\" class=\\\"btn btn-primary btn-sm\\\">Nouvelle evaluation</button>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</main>\\n\\n<div class=\\\"modal fade\\\" *ngIf=\\\"evalToDelete\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer l'evaluation</h5>\\n                <button (click)=\\\"evalToDelete = null\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer {{evalToDelete.nom_sortie}} ?</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"evalToDelete = null\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteEval()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- END  modal -->\"","export default \"<footer class=\\\"footer\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row text-muted\\\">\\n            <div class=\\\"col-6 text-left\\\">\\n                <p class=\\\"mb-0\\\">\\n                    <a class=\\\"text-muted\\\"><strong>Farmavans - gestion interne</strong></a> &copy; v1.2.1\\n                </p>\\n            </div>\\n            <div class=\\\"col-6 text-right\\\">\\n                powered by <strong>< ybh /></strong> \\n            </div>\\n        </div>\\n    </div>\\n</footer>\"","export default \"<div class=\\\"main\\\">\\n\\n\\n    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <h1 class=\\\"h3 mb-3\\\">Historique des fiches</h1>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Responsive DataTables</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">Highly flexible tool that many advanced features to any HTML table. See official\\n                                documentation <a href=\\\"https://datatables.net/extensions/responsive/\\\" target=\\\"_blank\\\"\\n                                    rel=\\\"noopener noreferrer\\\">here</a>.</h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <table class=\\\"table table-striped table-bordered table-sm row-border hover\\\" datatable [dtOptions]=\\\"dtOptions\\\">\\n                                <thead>\\n                                  <tr>\\n                                    <th>Name</th>\\n                                    <th>Email</th>\\n                                    <th>Website</th>\\n                                    <th></th>\\n                                  </tr>\\n                                </thead>\\n                                <tbody>\\n                                 <tr *ngFor=\\\"let group of data\\\">\\n                                       <td>{{group.name}}</td>\\n                                       <td>{{group.email}}</td>\\n                                       <td>{{group.website}}</td>\\n                                       <td class=\\\"center\\\"><button class=\\\"btn btn-xs btn-danger center\\\" >historique</button></td>\\n                                   </tr>\\n                                </tbody>\\n                              </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </main>\\n\\n    <footer class=\\\"footer\\\">\\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row text-muted\\\">\\n                <div class=\\\"col-6 text-left\\\">\\n                    <p class=\\\"mb-0\\\">\\n                        <a href=\\\"index-2.html\\\" class=\\\"text-muted\\\"><strong>AdminKit Demo</strong></a> &copy;\\n                    </p>\\n                </div>\\n                <div class=\\\"col-6 text-right\\\">\\n                    <ul class=\\\"list-inline\\\">\\n                        <li class=\\\"list-inline-item\\\">\\n                            <a class=\\\"text-muted\\\" href=\\\"#\\\">Support</a>\\n                        </li>\\n                        <li class=\\\"list-inline-item\\\">\\n                            <a class=\\\"text-muted\\\" href=\\\"#\\\">Help Center</a>\\n                        </li>\\n                        <li class=\\\"list-inline-item\\\">\\n                            <a class=\\\"text-muted\\\" href=\\\"#\\\">Privacy</a>\\n                        </li>\\n                        <li class=\\\"list-inline-item\\\">\\n                            <a class=\\\"text-muted\\\" href=\\\"#\\\">Terms</a>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    </footer>\\n</div>\\n\"","export default \"<body>\\n<main class=\\\"d-flex w-100 background\\\">\\n    <div class=\\\"container d-flex flex-column\\\">\\n        <div class=\\\"row vh-100\\\">\\n            <div class=\\\"col-sm-6 col-md-6 col-lg-5 mx-auto d-table h-90\\\">\\n                <div class=\\\"d-table-cell align-middle\\\">\\n\\n                    <div class=\\\"text-center mt-4\\\">\\n                        <p class=\\\"lead white\\\">\\n                            Connexion\\n                        </p>\\n                        \\n                    </div>\\n\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"m-sm-4\\\">\\n                                <div class=\\\"text-center\\\">\\n                                    <img src=\\\"assets/img/F.png\\\"  class=\\\"img-fluid \\\" width=\\\"132\\\" height=\\\"132\\\" />\\n                                </div>\\n                                <div *ngIf=\\\"errors\\\">\\n                                    <div class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                        <div class=\\\"alert-message\\\">\\n                                            <strong>Connexion echouée</strong> <br/> <small>Veuillez vérifier vos informations, ou contacter votre administrateur.</small>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <form #loginForm=\\\"ngForm\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Email</label>\\n                                        <input #mail=\\\"ngModel\\\" class=\\\"form-control form-control-lg\\\" [(ngModel)]=\\\"email\\\" required type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Votre email\\\" />\\n                                        <span *ngIf=\\\"mail.touched && mail.errors\\\" class=\\\"font-13 msg\\\">email incorrecte</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Mot de passe</label>\\n                                        <input class=\\\"form-control form-control-lg\\\"  required [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Mot de passe\\\" />\\n                                        \\n                                    </div>\\n                                    <div>\\n                                        <label class=\\\"custom-control custom-checkbox m-0\\\">\\n                                            <input [(ngModel)]=\\\"always\\\" name=\\\"chk\\\" class=\\\"custom-control-input\\\" type=\\\"checkbox\\\" >\\n                                            <span class=\\\"custom-control-label\\\">Rester connecté</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"text-center mt-3\\\">\\n                                        <button (click)=\\\"login()\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-lg btn-primary\\\">Se connecter</button>\\n                                    </div>\\n                                </form>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</main>\\n</body>\\n\"","export default \"<nav id=\\\"sidebar\\\" class=\\\"sidebar\\\">\\n    <div class=\\\"sidebar-content js-simplebar\\\" *ngIf=\\\"user\\\">\\n        <a class=\\\"sidebar-brand\\\" (click)=\\\"goHome()\\\">\\n            <span class=\\\"align-middle\\\"><img src=\\\"assets/img/logowh.png\\\" /></span>\\n        </a>\\n        <ul class=\\\"sidebar-nav\\\">\\n            <li *ngIf=\\\"user\\\" class=\\\"sidebar-header\\\">\\n                {{today | date : 'EEEE dd/MM/yyyy hh:mm' : 'fr'}}\\n            </li>         \\n            <li  [ngClass]=\\\"user.role === 'admin'?isActiveTab('/dashboard'):'none'\\\">\\n                <a routerLink=\\\"/dashboard\\\"  class=\\\"sidebar-link\\\">\\n                    <i class=\\\"align-middle mr-2 far fa-fw fa-chart-bar\\\"></i> <span class=\\\"align-middle\\\">Dashboard</span>\\n                </a>\\n            </li>\\n            <li class=\\\"sidebar-header\\\">\\n                Commercial\\n            </li>\\n            <li [ngClass]=\\\"user.role === 'admin'? isActiveTab('/products') : 'none'\\\" >\\n                <a routerLink=\\\"/products\\\" class=\\\"sidebar-link\\\"  >\\n                    <i class=\\\"align-middle mr-2 far fa-fw fa-bookmark\\\"></i> <span class=\\\"align-middle\\\">Produits</span>\\n                </a>\\n            </li>\\n            <li [ngClass]=\\\"user.role === 'admin' ? isActiveTab('/comparateur'):'none'\\\" >\\n                <a routerLink=\\\"/comparateur\\\" class=\\\"sidebar-link\\\"  >\\n                    <i class=\\\"align-middle mr-2 far fa-fw fa-file-code\\\"></i> <span class=\\\"align-middle\\\">Comparateur</span>\\n                </a>\\n            </li>  \\n             \\n            <li [ngClass]=\\\"isActiveTab('/veille-concurentielle')\\\" >\\n                <a routerLink=\\\"/veille-concurentielle\\\" class=\\\"sidebar-link\\\">\\n                    <i class=\\\"align-middle mr-2 far fa-fw fa-folder\\\"></i> <span class=\\\"align-middle\\\">Analyse concurrentielle</span>\\n                </a>\\n            </li> \\n            <li [ngClass]=\\\"isActiveTab('/veille-concurentielle-admin')\\\" >\\n                <a routerLink=\\\"/veille-concurentielle-admin\\\"  class=\\\"sidebar-link\\\" >\\n                    <i class=\\\"align-middle mr-2 far fa-fw fa-flag\\\"></i> <span class=\\\"align-middle\\\">Veilles concurrentielles</span>\\n                </a>\\n            </li> \\n            <li [ngClass]=\\\"isActiveTab('/packs')\\\" >\\n                <a routerLink=\\\"/packs\\\" class=\\\"sidebar-link\\\"  >\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-clone\\\"></i> <span class=\\\"align-middle\\\">Packs</span>\\n                </a>\\n            </li>     \\n            <li [ngClass]=\\\"isActiveTab('commandes')\\\">\\n                <a href=\\\"#pages\\\" data-toggle=\\\"collapse\\\" class=\\\"sidebar-link collapsed\\\">\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-credit-card\\\"></i> <span class=\\\"align-middle\\\">Commandes</span>\\n                </a>\\n                <ul id=\\\"pages\\\" class=\\\"sidebar-dropdown list-unstyled collapse \\\" data-parent=\\\"#sidebar\\\">\\n                    <li [ngClass]=\\\"isActiveTab('/saisie-commandes')\\\"><a class=\\\"sidebar-link\\\" routerLink=\\\"/saisie-commandes\\\">Saisie</a></li>\\n                    <li [ngClass]=\\\"isActiveTab('/historique-commandes')\\\"><a class=\\\"sidebar-link\\\" routerLink=\\\"/historique-commandes\\\">Historique</a></li>\\n                </ul>\\n            </li>       \\n            <li class=\\\"sidebar-header\\\">\\n                Contacts & Utilisateurs\\n            </li>                    \\n            <li [ngClass]=\\\"user.role === 'admin' ? isActiveTab('/users') : 'none'\\\" >\\n                <a routerLink=\\\"/users\\\" class=\\\"sidebar-link\\\">\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-address-card\\\"></i> <span class=\\\"align-middle\\\">Utilisateurs</span>\\n                </a>\\n            </li>\\n            <li [ngClass]=\\\"isActiveTab('/planning')\\\" >\\n                <a routerLink=\\\"/planning\\\" class=\\\"sidebar-link\\\"  >\\n                    <i class=\\\"align-middle mr-2 far fa-fw fa-calendar-check\\\"></i> <span class=\\\"align-middle\\\">Planning</span>\\n                </a>\\n            </li>\\n            <li [ngClass]=\\\"user.role === 'admin' ? isActiveTab('clients') : 'none'\\\">\\n                <a href=\\\"#pages2\\\" data-toggle=\\\"collapse\\\" class=\\\"sidebar-link collapsed\\\">\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-address-book\\\"></i> <span class=\\\"align-middle\\\">Clients</span>\\n                </a>\\n                <ul id=\\\"pages2\\\" class=\\\"sidebar-dropdown list-unstyled collapse \\\" data-parent=\\\"#sidebar\\\">\\n                    <li [ngClass]=\\\"isActiveTab('/grossite-clients')\\\"><a class=\\\"sidebar-link\\\" routerLink=\\\"/grossiste-clients\\\">Grossistes</a></li>\\n                    <li [ngClass]=\\\"isActiveTab('/pharmacie-clients')\\\"><a class=\\\"sidebar-link\\\" routerLink=\\\"/pharmacie-clients\\\">Pharmacies</a></li>\\n                </ul>\\n            </li>\\n\\n          \\n            <li [ngClass]=\\\"isActiveTab('/taches')\\\">\\n                <a routerLink=\\\"/taches\\\" class=\\\"sidebar-link\\\" >\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-clipboard\\\"></i> <span class=\\\"align-middle\\\">Taches</span>\\n                </a>\\n            </li>  \\n            <li  [ngClass]=\\\"user.role === 'admin' ? isActiveTab('/contacts') : 'none'\\\">\\n                <a routerLink=\\\"/contacts\\\" class=\\\"sidebar-link\\\" >\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-envelope-open\\\"></i> <span class=\\\"align-middle\\\">Contacts</span>\\n                </a>\\n            </li>  \\n            <li [ngClass]=\\\"user.role === 'admin' ? isActiveTab('/reunions') : 'none'\\\">\\n                <a routerLink=\\\"/reunions\\\" class=\\\"sidebar-link\\\" >\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-handshake\\\"></i> <span class=\\\"align-middle\\\">Reunions</span>\\n                </a>\\n            </li> \\n            <li [ngClass]=\\\"(user.role === 'admin' || user.role === 'superviseur') ? isActiveTab('/evaluations') : 'none'\\\">\\n                <a routerLink=\\\"/evaluations\\\" class=\\\"sidebar-link\\\" >\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-star\\\"></i> <span class=\\\"align-middle\\\">Evaluations</span>\\n                </a>\\n            </li>  \\n            <li [ngClass]=\\\"user.role === 'admin' ? isActiveTab('/rapports'):'none'\\\">\\n                <a routerLink=\\\"/rapports\\\" class=\\\"sidebar-link\\\" >\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-keyboard\\\"></i> <span class=\\\"align-middle\\\">Rapports</span>\\n                </a>\\n            </li>  \\n            <li [ngClass]=\\\"isActiveTab('/profile')\\\">\\n                <a routerLink=\\\"/profile\\\" class=\\\"sidebar-link\\\" >\\n                    <i  class=\\\"align-middle mr-2 far fa-fw fa-user\\\"></i> <span class=\\\"align-middle\\\">Profile</span>\\n                </a>\\n            </li>  \\n        </ul>\\n    </div>\\n    \\n</nav>\"","export default \"<main class=\\\"content\\\">\\n    <div *ngIf=\\\"initialLoder\\\" class=\\\"col-12 text-center mt-2 mb-2 \\\">\\n        <div class=\\\"px-4 d-none d-md-block\\\">\\n            <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\">\\n                <span class=\\\"sr-only\\\">Loading...</span>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"container-fluid p-0\\\">\\n        <button *ngIf=\\\"!showForm && user.role === 'admin'\\\" (click)=\\\"showPanel()\\\" class=\\\"btn btn-primary float-right mt-n1\\\"><i\\n                class=\\\"fas fa-plus\\\"></i> Nouveau pack</button>\\n        <button *ngIf=\\\"showForm && user.role === 'admin'\\\" (click)=\\\"hidePanel()\\\" class=\\\"btn btn-danger float-right mt-n1\\\"><i\\n                class=\\\"fas fa-times\\\"></i> Annuler</button>\\n        <h1 class=\\\"h3 mb-3\\\">Packs</h1>\\n        <div class=\\\"row\\\" *ngIf=\\\"showForm && user.role === 'admin'\\\">\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"card-title\\\">Ajouter un pack</h5>\\n                        <!--    alert message    -->\\n                        <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                <span aria-hidden=\\\"true\\\">×</span>\\n                            </button>\\n                            <div class=\\\"alert-message\\\">\\n                                <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                champs.\\n                            </div>\\n                        </div>\\n                        <!--end alert-->\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form #grForm=\\\"ngForm\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-12 col-lg-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Type de packs</label>\\n                                        <select class=\\\"form-control select2\\\" [(ngModel)]=\\\"packToadd.type_pack\\\"\\n                                            name=\\\"type_pack\\\" required>\\n                                            <option value=\\\"0\\\" disabled selected>Veuillez choisir un type de pack\\n                                            </option>\\n                                            <option value=\\\"panache\\\">Panaché </option>\\n                                            <option value=\\\"normal\\\">Normale</option>\\n                                        </select>\\n                                    </div>\\n                                    <div *ngIf=\\\"packToadd && packToadd.type_pack == 'panache'\\\">\\n                                        <strong>Pack panaché</strong>\\n                                        <form #form1=\\\"ngForm\\\">\\n                                        <div class=\\\"form-row mt-2\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>intitulé du pack</label>\\n                                                <input #name=\\\"ngModel\\\" minlength=\\\"5\\\" required [(ngModel)]=\\\"packToadd.nom_pack\\\" class=\\\"form-control\\\"\\n                                                    type=\\\"text\\\" placeholder=\\\"pack panaché 1\\\" name=\\\"nom_pack\\\" />\\n                                                    <span class=\\\"msg font-11\\\" *ngIf=\\\"name.touched && name.errors\\\">nom\\n                                                        invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>prix pack</label>\\n                                                <input #prixp=\\\"ngModel\\\" required [(ngModel)]=\\\"packToadd.prix_total\\\" class=\\\"form-control\\\"\\n                                                    type=\\\"number\\\" placeholder=\\\"TND.\\\" name=\\\"prix_pack\\\" />\\n                                                    <span class=\\\"msg font-11\\\" *ngIf=\\\"prixp.touched && prixp.errors\\\">prix\\n                                                        invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>pourcentage unité gratuite</label>\\n                                                <input (change)=\\\"calculPourcentage()\\\" required [(ngModel)]=\\\"packToadd.pourcentage_unite_gratuites_grossiste\\\"\\n                                                    class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"%\\\" name=\\\"p_vg\\\" />\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>Valeur unité gratuite TTC</label>\\n                                                <input min=\\\"1\\\" required disabled [(ngModel)]=\\\"packToadd.valeur_unite_gratuites_grossiste_ttc\\\"\\n                                                    class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"TND.\\\"\\n                                                    name=\\\"p_v_ttc\\\" />\\n                                                    \\n                                                    \\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>pourcentage unité gratuite (VD)</label>\\n                                                <input #prixvd=\\\"ngModel\\\" (change)=\\\"calculPourcentageVD()\\\" required  [(ngModel)]=\\\"packToadd.pourcentage_unite_gratuites_vd\\\"\\n                                                    class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"%\\\" name=\\\"p_vd\\\" />\\n                                                    <span class=\\\"msg font-11\\\" *ngIf=\\\"prixvd.touched && prixvd.errors\\\">prix\\n                                                        invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>Valeur unité gratuite TTC(VD)</label>\\n                                                <input required disabled [(ngModel)]=\\\"packToadd.valeur_unite_gratuites_vd_ttc\\\"\\n                                                    class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"TND.\\\"\\n                                                    name=\\\"p_vd_ttc\\\" />\\n                                            </div>\\n                                        </div>\\n                                    </form>\\n                                    </div>\\n                                    <div *ngIf=\\\"packToadd && packToadd.type_pack == 'normal'\\\">\\n                                        <strong>pack normal</strong> &nbsp;\\n                                        <button class=\\\"btn btn-primary mt-3\\\" *ngIf=\\\"packToadd.nom_pack\\\" (click)=\\\"addProduct()\\\">Ajouter produit</button>\\n\\n                                        <div class=\\\"form-row mt-2\\\">\\n                                        <div class=\\\"form-group col-md-6\\\">\\n                                            <label>intitulé du pack</label>\\n                                            <input [(ngModel)]=\\\"packToadd.nom_pack\\\" class=\\\"form-control\\\"\\n                                                type=\\\"text\\\" placeholder=\\\"pack hiver\\\" name=\\\"nom_pack\\\" />\\n                                        </div>\\n                                        <div class=\\\"form-group col-md-6\\\">\\n                                            <label>valeur pack TTC </label>\\n                                            <input [(ngModel)]=\\\"packToadd.prix_total\\\" class=\\\"form-control\\\"\\n                                                type=\\\"number\\\" placeholder=\\\"TND.\\\" name=\\\"prix_p_tot\\\" />\\n                                        </div>\\n                                    </div>\\n                                    <form [formGroup]=\\\"packForm\\\" >\\n                                    <div formArrayName=\\\"products\\\">\\n                                    <div class=\\\"row\\\" *ngFor=\\\"let product of products().controls; let i=index\\\" [formGroupName]=\\\"i\\\">                               \\n                                        <div class=\\\"col-6 col-xl-4\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label>produit</label>\\n                                            <select  (change)=\\\"qte.value && selectedp.value? pttc.value = loadPrice(selectedp.value,qte.value,i):pttc.value = 0\\\"\\n                                             formControlName=\\\"produit\\\" #selectedp class=\\\"form-control select2\\\" name=\\\"product\\\">\\n                                                <option *ngFor=\\\"let p of produits\\\" [ngValue]=\\\"p.id\\\"> {{p.libelle}} BTE {{p.nb_gellules}} PU : {{p.prix}} TND</option>\\n                                            </select>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-6 col-xl-3\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label class=\\\"form-label\\\">prix total TTC</label>\\n                                                <input  #pttc class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"prixUnitaire\\\" />\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-6 col-xl-2\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label class=\\\"form-label\\\">quantité</label>\\n                                                <input (change)=\\\"qte.value && selectedp.value ? pttc.value = loadPrice(selectedp.value,qte.value,i):pttc.value = 0\\\"\\n                                                 formControlName=\\\"quantite\\\" #qte  class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"qte\\\" />\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-6 col-xl-1\\\">\\n                                            <div class=\\\"form-group\\\">                              \\n                                                Gratuit          \\n                                            <input type=\\\"checkbox\\\" formControlName=\\\"gratuit\\\" name=\\\"grat\\\" #gr (click)=\\\"selectedp.value && qte.value? setProductValue(i,selectedp.value,$event):'0'\\\">\\n                                            </div> \\n                                        </div>\\n                                        <div class=\\\"col-6 col-xl-1\\\">\\n                                            <div class=\\\"form-group\\\">                                        \\n                                            <button (click)=\\\"removeProduct(i)\\\" class=\\\"btn btn-white mt-4\\\">X</button>\\n                                            </div>\\n                                        </div>\\n                                        <hr>\\n                                    </div>\\n                                    </div>\\n                                </form>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Valeur bon d'achat</label>\\n                                        <input type=\\\"number\\\" #bachat=\\\"ngModel\\\"  placeholder=\\\"TND.\\\" [(ngModel)]=\\\"packToadd.valeur_bon_achat\\\" name=\\\"bon_achat\\\" class=\\\"form-control\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"bachat.touched && bachat.errors\\\">bon d'achat\\n                                            invalide*</span>  \\n                                    </div>\\n                                    <div class=\\\"form-group\\\" *ngIf=\\\"packToadd.nom_pack\\\">\\n                                        <label>Autres Remarques</label>\\n                                        <textarea [(ngModel)]=\\\"packToadd.description\\\"  name=\\\"remarques\\\" class=\\\"form-control\\\" rows=\\\"2\\\"></textarea>\\n                                    </div>\\n                                    <div class=\\\"form-row mt-3 float-right \\\">\\n                                        <div>\\n                                            <button type=\\\"submit\\\" [disabled]=\\\"grForm.invalid || packForm.invalid\\\" (click)=\\\"submit(grForm)\\\"\\n                                                class=\\\"btn btn-primary btn-lg \\\">Enregistrer</button>\\n                                            <button type=\\\"reset\\\"\\n                                                class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div [ngClass]=\\\"!selectedPack?'col-xl-12' :'col-xl-8' \\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"card-title mb-0\\\">liste des packs</h5>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <table id=\\\"datatables-clients\\\" datatable [dtOptions]=\\\"options\\\" [dtTrigger]=\\\"trigger\\\"\\n                            class=\\\"table table-striped\\\" style=\\\"width:100%\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th>Nom pack</th>\\n                                    <th>Type</th>\\n                                    <th>Prix</th>\\n                                    <th *ngIf=\\\"user.role === 'admin'\\\">Unités vendues</th>\\n                                    <th class=\\\"text-center\\\">Actions</th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor=\\\"let p of listPacks\\\">\\n                                    <td>{{p.nom_pack}}</td>\\n                                    <td><span class=\\\"badge badge-pill badge-danger\\\" *ngIf=\\\"p.type_pack == 'panache'\\\">{{p.type_pack}}</span> <span class=\\\"badge badge-pill badge-info\\\" *ngIf=\\\"p.type_pack == 'normal'\\\">{{p.type_pack}}</span></td>\\n                                    <td>{{p.prix_total ? p.prix_total.toFixed(2) : 0}} TND.</td>\\n                                    <td *ngIf=\\\"user.role === 'admin'\\\">{{p.times_sold}} unités</td>\\n                                    <td class=\\\"text-center\\\"><button (click)=\\\"showPackDetails(p)\\\" class=\\\"btn btn-success btn-sm\\\">Details</button>\\n                                    <button *ngIf=\\\"user.role === 'admin'\\\" (click)=\\\"setPack(p)\\\" data-target=\\\"#sizedModalSm\\\" class=\\\"btn btn-danger btn-sm ml-2\\\" data-toggle=\\\"modal\\\">X</button></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-xl-4\\\" *ngIf=\\\"selectedPack\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h3>{{selectedPack.nom_pack}}</h3>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"row no-gutters\\\">\\n                            <div class=\\\"col-sm-9 col-xl-12 col-xxl-9\\\">\\n                                <strong>A propos</strong>\\n                                <p>{{selectedPack.description}}</p>\\n                            </div>\\n                        </div>\\n\\n                        <table class=\\\"table table-sm my-2\\\">\\n                            <tbody>\\n                                <tr>\\n                                    <th>Intitule</th>\\n                                    <td>{{selectedPack.nom_pack}}</td>\\n                                </tr>\\n                                <tr>\\n                                    <th>Type</th>\\n                                    <td><span class=\\\"badge badge-pill badge-danger\\\" *ngIf=\\\"selectedPack.type_pack == 'panache'\\\">{{selectedPack.type_pack}}</span>\\n                                        <span class=\\\"badge badge-pill badge-info\\\" *ngIf=\\\"selectedPack.type_pack == 'normal'\\\">{{selectedPack.type_pack}}</span></td>\\n                                </tr>\\n                                <tr>\\n                                    <th>Prix total TTC</th>\\n                                    <td><strong>{{selectedPack.prix_total ? selectedPack.prix_total.toFixed(3) : '0'}} TND </strong></td>\\n                                </tr>\\n                            </tbody>\\n                        </table>\\n\\n                        <hr />\\n                        <div *ngIf=\\\"selectedPack.type_pack == 'normal'\\\">\\n                        <strong>Produits associés</strong>\\n\\n                        <ul *ngIf=\\\"PPOfselectedPack\\\" class=\\\"timeline mt-2 mb-0\\\">\\n                            <li *ngFor=\\\"let p of PPOfselectedPack\\\"  class=\\\"timeline-item\\\">\\n                                <div *ngIf=\\\"p.isfree == false\\\">\\n                                    <strong>{{p.produits_packs[0].libelle}} BTE {{p.produits_packs[0].nb_gellules}}</strong>\\n                                    <span class=\\\"float-right text-muted text-sm\\\">prix : {{ (p.quantite * p.produits_packs[0].prix).toFixed(3) }} TND.</span>\\n                                    <p>Qté : {{p.quantite}}</p>\\n                                </div>\\n                                <div *ngIf=\\\"p.isfree == true\\\">\\n                                    <strong>{{p.produits_packs[0].libelle}} BTE {{p.produits_packs[0].nb_gellules}}</strong>\\n                                    <span class=\\\"float-right text-muted text-sm\\\">GRATUIT</span>\\n                                    <p>Qté : {{p.quantite}}</p>\\n                                </div>\\n                            </li>\\n                        </ul>\\n                        \\n                    </div>\\n                    <ul *ngIf=\\\"selectedPack.type_pack == 'panache'\\\" class=\\\"timeline mt-2 mb-0\\\">\\n                        <li class=\\\"timeline-item\\\">\\n                            <div>\\n                                <strong>{{selectedPack.pourcentage_unite_gratuites_grossiste}} % unités gratuites</strong>\\n                                <span class=\\\"float-right text-muted text-sm\\\">OU</span>\\n                                <p>{{selectedPack.valeur_unite_gratuites_grossiste_ttc }} TND Unités gratuites au choix </p>\\n                            </div>\\n                        </li>\\n                        <li class=\\\"timeline-item\\\">\\n                            <div>\\n                                <strong>{{selectedPack.pourcentage_unite_gratuites_vd}} % unités gratuites (VD)</strong>\\n                                <span class=\\\"float-right text-muted text-sm\\\">OU</span>\\n                                <p>{{selectedPack.valeur_unite_gratuites_vd_ttc }} TND Unités gratuites au choix</p>\\n                            </div>\\n                        </li>\\n                        <li class=\\\"timeline-item\\\">\\n                            <div>\\n                                <strong>{{selectedPack.valeur_bon_achat}} TND BONS D'ACHAT</strong>\\n                                <span class=\\\"float-right text-muted text-sm\\\">OU</span>\\n                            </div>\\n                        </li>\\n                    </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</main>\\n\\n<div class=\\\"modal fade\\\" id=\\\"sizedModalSm\\\" *ngIf=\\\"selectedPackForDelete && user.role === 'admin'\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer un pack</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer le pack {{selectedPackForDelete.nom_pack}} au prix de {{selectedPackForDelete.prix_total}} TND.</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deletePack()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<!-- BEGIN primary modal -->\\n<button type=\\\"button\\\" class=\\\"btn btn-primary ml-2\\\" (click)=\\\"showModal()\\\">\\n    <i class=\\\"align-middle fas fa-fw fa-calendar-plus\\\"></i>  Planning\\n</button>\\n<div class=\\\"modal fade\\\" id=\\\"centeredModalPrimary\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\"> {{edit == true && planning ? 'Modifier le planning de '+planning.user.nom +' '+planning.user.prenom : 'Ajouter un planning'}}</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"hideModal()\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                \\n                <div class=\\\"left\\\">\\n                        <div class=\\\"card-body\\\">\\n                            <h6>Vous pouvez spécifier votre disponibilité ou ajouter une tache pour un jour choisit, ou une période bien déterminée.</h6>\\n                            <form #form=\\\"ngForm\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"form-label\\\">Intitule</label>\\n                                    <input required type=\\\"text\\\" [(ngModel)]=\\\"planning.intitule\\\" \\n                                    name=\\\"intitule\\\" #intit=\\\"ngModel\\\" class=\\\"form-control\\\" placeholder=\\\"Titre\\\">\\n                                    <span class=\\\"msg font-11\\\" *ngIf=\\\"intit.touched && intit.errors\\\">titre\\n                                        invalide*</span>\\n                                </div>\\n                                <div class=\\\"row\\\">\\n                                <div class=\\\"form-group col-md-6\\\">\\n                                    <label class=\\\"form-label\\\">Début</label>\\n                                    <input required type=\\\"date\\\"  [(ngModel)]=\\\"planning.date_debut\\\" \\n                                     #date_e=\\\"ngModel\\\"  name=\\\"debut\\\" class=\\\"form-control\\\" >\\n                                     <span class=\\\"msg font-11\\\" *ngIf=\\\"date_e.touched && date_e.errors || (date_r.touched && date_e.touched && date_e.value > date_r.value)\\\">date\\n                                        invalide*</span>\\n                                </div>\\n                                <div class=\\\"form-group col-md-6\\\">\\n                                    <label class=\\\"form-label\\\">Fin</label>\\n                                    <input required [(ngModel)]=\\\"planning.date_fin\\\" \\n                                    #date_r=\\\"ngModel\\\"  type=\\\"date\\\" name=\\\"fin\\\" class=\\\"form-control\\\">\\n                                    <span class=\\\"msg font-11\\\" *ngIf=\\\"date_r.touched && date_r.errors || (date_r.touched && date_e.touched && date_r.value < date_e.value)\\\">date\\n                                        invalide*</span>\\n                                </div>\\n                            </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"form-label\\\">Remarques</label>\\n                                    <textarea class=\\\"form-control\\\"\\n                                    [(ngModel)]=\\\"planning.remarques\\\" \\n                                    name=\\\"remarques\\\" #remarques=\\\"ngModel\\\"  placeholder=\\\"vos remarques içi...\\\"></textarea>\\n                                </div>\\n                            </form>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" *ngIf=\\\"edit == true\\\" (click)=\\\"deletePlan()\\\" class=\\\"btn btn-danger\\\">Supprimer</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"hideModal()\\\">Annuler</button>\\n                <button type=\\\"button\\\" [disabled]=\\\"form.invalid\\\" (click)=\\\"addPlan()\\\" class=\\\"btn btn-primary\\\">Sauvegarder</button>\\n                \\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- END primary modal -->\"","export default \"<main class=\\\"content\\\">\\n    <div class=\\\"container-fluid p-0\\\">\\n      <ng-template #loading>\\n        <div class=\\\"text-center\\\">\\n          <i class=\\\"fas fa-spin fa-spinner fa-5x\\\"></i> <br />\\n        </div>\\n      </ng-template>\\n      <div class=\\\"row text-center\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"btn-group\\\">\\n            <div class=\\\"btn btn-primary\\\" mwlCalendarPreviousView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n              (viewDateChange)=\\\"closeOpenMonthViewDay()\\\">\\n              Précedant\\n            </div>\\n            <div class=\\\"btn btn-outline-secondary\\\" mwlCalendarToday [(viewDate)]=\\\"viewDate\\\">\\n              Aujourd'hui\\n            </div>\\n            <div class=\\\"btn btn-primary\\\" mwlCalendarNextView [view]=\\\"view\\\" [(viewDate)]=\\\"viewDate\\\"\\n              (viewDateChange)=\\\"closeOpenMonthViewDay()\\\">\\n              Suivant\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'Fr' }}</h3>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"btn-group\\\">\\n            <div class=\\\"btn btn-primary\\\" (click)=\\\"setView(CalendarView.Month)\\\"\\n              [class.active]=\\\"view === CalendarView.Month\\\">\\n              Mois\\n            </div>\\n            <div class=\\\"btn btn-primary\\\" (click)=\\\"setView(CalendarView.Week)\\\"\\n              [class.active]=\\\"view === CalendarView.Week\\\">\\n              Semaine\\n            </div>\\n            <div class=\\\"btn btn-primary\\\" (click)=\\\"setView(CalendarView.Day)\\\" [class.active]=\\\"view === CalendarView.Day\\\">\\n              Jour\\n            </div>\\n            <div>\\n              <app-planning-popup (source)=\\\"interceptEmit($event)\\\" [edit]=\\\"edit\\\" [planning]=\\\"selectedPlanning\\\" [user]=\\\"user\\\"></app-planning-popup>\\n            </div>\\n           \\n          </div>\\n        </div>\\n      </div>\\n      <br />\\n      <div *ngIf=\\\"events$ | async; else loading; let events\\\">\\n        <div [ngSwitch]=\\\"view\\\">\\n          <mwl-calendar-month-view\\n            *ngSwitchCase=\\\"'month'\\\"\\n            [viewDate]=\\\"viewDate\\\"\\n            [events]=\\\"events\\\"\\n            [locale]=\\\"'fr'\\\"\\n            [activeDayIsOpen]=\\\"activeDayIsOpen\\\"\\n            (dayClicked)=\\\"dayClicked($event.day)\\\"\\n            (eventClicked)=\\\"eventClicked($event.event)\\\"\\n          >\\n          </mwl-calendar-month-view>\\n          <mwl-calendar-week-view\\n            *ngSwitchCase=\\\"'week'\\\"\\n            [viewDate]=\\\"viewDate\\\"\\n            [events]=\\\"events\\\"\\n            [locale]=\\\"'fr'\\\"\\n            (eventClicked)=\\\"eventClicked($event.event)\\\"\\n          >\\n          </mwl-calendar-week-view>\\n          <mwl-calendar-day-view\\n            *ngSwitchCase=\\\"'day'\\\"\\n            [viewDate]=\\\"viewDate\\\"\\n            [events]=\\\"events\\\"\\n            [locale]=\\\"'fr'\\\"\\n            (eventClicked)=\\\"eventClicked($event.event)\\\"\\n          >\\n          </mwl-calendar-day-view>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n\"","export default \"<div  [ngClass]=\\\"isSelected == true ? 'card selected' : 'card'\\\">\\n    <div class=\\\"card-header px-4 pt-4\\\">\\n        <div class=\\\"float-right\\\">\\n            <a (click)=\\\"editProduct()\\\"> <i class=\\\"far fa-fw fa-edit\\\"></i></a>\\n\\n        </div>\\n        <div class=\\\"float-left\\\">\\n            <a data-target=\\\"#sizedModalSm\\\"  data-toggle=\\\"modal\\\" (click)=\\\"deleteProduct()\\\"><i class=\\\"fas fa-times-circle\\\"></i></a>\\n        </div>\\n    </div>\\n    <img class=\\\"card-img-top\\\" [src]=\\\"product.image_url ? product.image_url : 'assets/img/F.png'\\\">\\n\\n    <div class=\\\"card-header px-4 pt-4\\\">\\n        <h5 class=\\\"card-title mb-0\\\">{{product.libelle}}</h5>\\n        <div class=\\\"badge badge-warning my-2\\\">boite de {{product.nb_gellules}}</div>\\n    </div>\\n    <div class=\\\"card-body px-4 pt-2\\\">\\n        <p>{{product.description}}</p>\\n        <a *ngIf=\\\"product.composition\\\" [href]=\\\"product.composition\\\" target=\\\"_blank\\\"><i class=\\\"fas fa-wrench\\\"></i> composition </a><br />\\n        <a *ngIf=\\\"product.fiche_poso\\\" [href]=\\\"product.fiche_poso\\\" target=\\\"_blank\\\"><i class=\\\"fas fa-file-alt\\\"></i> posologie </a> <br />\\n        <a *ngIf=\\\"product.etude_cliniques\\\" [href]=\\\"product.etude_cliniques\\\" target=\\\"_blank\\\"><i class=\\\"fas fa-file-medical-alt\\\"></i> etudes cliniques</a>\\n    </div>\\n    <div class=\\\"card-body px-4 pt-2\\\" *ngIf=\\\"product.times_sold\\\">\\n        <h6 class=\\\"card-title mb-0\\\"> {{product.times_sold}} unités Vendues.</h6>\\n    </div>\\n    <hr class=\\\"mb-2\\\">\\n    <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item px-4 pb-4\\\">\\n            <p class=\\\"mb-2 font-weight-bold\\\"><span class=\\\"float-right\\\">PRIX : {{product.prix.toFixed(3)}} TND</span></p>\\n        </li>\\n    </ul>\\n</div>\"","export default \"\\n<main class=\\\"content\\\">\\n    <div class=\\\"container-fluid p-0\\\">\\n\\n        <h1 class=\\\"h3 mb-3\\\">Comparateur de produits</h1>\\n    <div class=\\\"row\\\">\\n<div class=\\\"col-12\\\">\\n    <div class=\\\"card flex-fill\\\">\\n        <div class=\\\"card-header\\\">\\n            <h5 class=\\\"card-title\\\">Comparaison entre les produits farmavans et la concurrence</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-12 col-xl-12 mb-3\\\">\\n                    <label>Nom du produit</label>\\n            <input type=\\\"text\\\"         \\n            (ngModelChange)=\\\"filterItem($event)\\\" \\n            [(ngModel)]=\\\"targetMedic\\\" class=\\\"form-control\\\" placeholder=\\\"recherche\\\">\\n                </div>\\n                <div class=\\\"col-12 col-xl-12\\\">\\n        <select \\n             #selectList\\n             [(ngModel)]=\\\"myProduct\\\" \\n            (ngModelChange)=\\\"onChangeofOptions($event)\\\" class=\\\"custom-select mb-3\\\">\\n            <option value=\\\"empty\\\" selected disabled>Veuillez selectionner un produit</option>\\n            <option *ngFor=\\\"let item of items\\\" [ngValue]=\\\"item\\\">         \\n                {{item.libelle}}\\n            </option>    \\n        </select>\\n        </div>\\n    </div>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"col-12 col-lg-12 col-xxl-6 d-flex\\\">\\n    \\n<div class=\\\"row ml-1\\\" *ngIf=\\\"myProduct\\\">\\n    <div [ngClass]=\\\"veilles.length > 0 ? 'col-md-4' : 'col-md-12'\\\" >\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n            <div class=\\\"media float-right\\\">\\n                <img class=\\\"rounded-circle mr-2\\\" width=\\\"80\\\" height=\\\"80\\\" [src]=\\\"myProduct.image_url\\\" >\\n            </div>\\n            <h5 class=\\\"card-title\\\">{{myProduct.libelle}}</h5>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <p>{{myProduct.description}}</p>\\n                <table class=\\\"table table-sm my-2\\\">\\n                    <tbody>\\n                        <tr>\\n                            <th>Nom complet</th>\\n                            <td>{{myProduct.libelle}} BTE {{myProduct.nb_gellules}}</td>\\n                        </tr>\\n                        <tr>\\n                            <th>Prix</th>\\n                            <td>{{myProduct.prix}} TND.</td>\\n                        </tr>\\n                        <tr *ngIf=\\\"myProduct.fiche_poso\\\">\\n                            <th>Posologie</th>\\n                            <td  class=\\\"text-center\\\"><a  [href]=\\\"myProduct.fiche_poso\\\" \\n                                target=\\\"_blank\\\">\\n                                <i class=\\\"fas fa-file-alt\\\"></i> </a> <br />\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"myProduct.composition\\\">\\n                            <th>Composition</th>\\n                            <td  class=\\\"text-center\\\"><a  [href]=\\\"myProduct.composition\\\"\\n                                target=\\\"_blank\\\">\\n                                <i class=\\\"fas fa-wrench\\\"></i> </a> <br />\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"myProduct.etude_cliniques\\\">\\n                            <th>Etudes cliniques</th>\\n                            <td class=\\\"text-center\\\"><a  [href]=\\\"myProduct.etude_cliniques\\\"\\n                                target=\\\"_blank\\\">\\n                                <i class=\\\"fas fa-file-medical-alt\\\"></i> </a> <br />\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-4\\\" *ngFor=\\\"let selectedVeille of veilles\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h5 class=\\\"card-title\\\">{{selectedVeille.lib_prod}}</h5>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <p>{{selectedVeille.presentation}}</p>\\n                <table class=\\\"table table-sm my-2\\\">\\n                    <tbody>\\n                        <tr>\\n                            <th>Nom complet</th>\\n                            <td>{{selectedVeille.lib_prod}}</td>\\n                        </tr>\\n                        <tr>\\n                            <th>Laboratoire concurrent</th>\\n                            <td>{{selectedVeille.labo}}</td>\\n                        </tr>\\n                        <tr>\\n                            <th>Prix</th>\\n                            <td>{{selectedVeille.prix}} TND.</td>\\n                        </tr>\\n                        <tr *ngIf=\\\"selectedVeille.posologie\\\">\\n                            <th>Posologie</th>\\n                            <td>{{selectedVeille.posologie}}\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"selectedVeille.composition\\\">\\n                            <th>Composition</th>\\n                            <td >{{selectedVeille.composition}}\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"selectedVeille.nb_boites_vendues\\\">\\n                            <th>Boites totales vendues</th>\\n                            <td>{{selectedVeille.nb_boites_vendues}}</td>\\n                        </tr>\\n                        <tr *ngIf=\\\"selectedVeille.actions\\\">\\n                            <th>Actions</th>\\n                            <td>{{selectedVeille.actions}}</td>\\n                        </tr>\\n                        <tr *ngIf=\\\"selectedVeille.partenaires\\\">\\n                            <th>partenaires</th>\\n                            <td>{{selectedVeille.partenaires}}</td>\\n                        </tr>\\n                        <tr *ngIf=\\\"selectedVeille.commentaires\\\">\\n                            <th>commentaires</th>\\n                            <td>{{selectedVeille.commentaires}}</td>\\n                        </tr>\\n                        <tr *ngIf=\\\"selectedVeille.analyseur\\\">\\n                            <th>Analysé par</th>\\n                            <td>{{selectedVeille.analyseur.nom}} {{selectedVeille.analyseur.prenom}}</td>\\n                        </tr>\\n                        <tr *ngIf=\\\"selectedVeille.createdAt\\\">\\n                            <th>Date analyse</th>\\n                            <td>{{selectedVeille.createdAt | date: 'dd/MM/yyyy hh:mm'}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n</div>\\n</div>\\n</main>\"","export default \"    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n            <h1 class=\\\"h3 mb-3\\\">Veilles concurentielles</h1>\\n            <div class=\\\"row\\\" *ngIf=\\\"selectedVeille\\\">\\n                <div class=\\\"col-6\\\" >\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                        <div class=\\\"media float-right\\\">\\n                            <img class=\\\"rounded-circle mr-2\\\" width=\\\"80\\\" height=\\\"80\\\" [src]=\\\"selectedVeille.produitCible.image_url\\\" >\\n                        </div>\\n                        <h5 class=\\\"card-title\\\">{{selectedVeille.produitCible.libelle}}</h5>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <p>{{selectedVeille.produitCible.description}}</p>\\n                            <table class=\\\"table table-sm my-2\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th>Nom complet</th>\\n                                        <td>{{selectedVeille.produitCible.libelle}} BTE {{selectedVeille.produitCible.nb_gellules}}</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <th>Prix</th>\\n                                        <td>{{selectedVeille.produitCible.prix}} TND.</td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.produitCible.fiche_poso\\\">\\n                                        <th>Posologie</th>\\n                                        <td  class=\\\"text-center\\\"><a  [href]=\\\"selectedVeille.produitCible.fiche_poso\\\" \\n                                            target=\\\"_blank\\\">\\n                                            <i class=\\\"fas fa-file-alt\\\"></i> </a> <br />\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.produitCible.composition\\\">\\n                                        <th>Composition</th>\\n                                        <td  class=\\\"text-center\\\"><a  [href]=\\\"selectedVeille.produitCible.composition\\\"\\n                                            target=\\\"_blank\\\">\\n                                            <i class=\\\"fas fa-wrench\\\"></i> </a> <br />\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.produitCible.etude_cliniques\\\">\\n                                        <th>Etudes cliniques</th>\\n                                        <td class=\\\"text-center\\\"><a  [href]=\\\"selectedVeille.produitCible.etude_cliniques\\\"\\n                                            target=\\\"_blank\\\">\\n                                            <i class=\\\"fas fa-file-medical-alt\\\"></i> </a> <br />\\n                                        </td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-6\\\" >\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">{{selectedVeille.lib_prod}}</h5>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <p>{{selectedVeille.presentation}}</p>\\n                            <table class=\\\"table table-sm my-2\\\">\\n                                <tbody>\\n                                    <tr>\\n                                        <th>Nom complet</th>\\n                                        <td>{{selectedVeille.lib_prod}}</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <th>Laboratoire concurrent</th>\\n                                        <td>{{selectedVeille.labo}}</td>\\n                                    </tr>\\n                                    <tr>\\n                                        <th>Prix</th>\\n                                        <td>{{selectedVeille.prix}} TND.</td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.posologie\\\">\\n                                        <th>Posologie</th>\\n                                        <td>{{selectedVeille.posologie}}\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.composition\\\">\\n                                        <th>Composition</th>\\n                                        <td >{{selectedVeille.composition}}\\n                                        </td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.nb_boites_vendues\\\">\\n                                        <th>Boites totales vendues</th>\\n                                        <td>{{selectedVeille.nb_boites_vendues}}</td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.actions\\\">\\n                                        <th>Actions</th>\\n                                        <td>{{selectedVeille.actions}}</td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.partenaires\\\">\\n                                        <th>partenaires</th>\\n                                        <td>{{selectedVeille.partenaires}}</td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.commentaires\\\">\\n                                        <th>commentaires</th>\\n                                        <td>{{selectedVeille.commentaires}}</td>\\n                                    </tr>\\n                                    <tr *ngIf=\\\"selectedVeille.createdAt\\\">\\n                                        <th>Date analyse</th>\\n                                        <td>{{selectedVeille.createdAt | date:'medium'}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n<div class=\\\"row\\\">\\n    <div *ngIf=\\\"veilles.length == 0\\\" class=\\\"col-md-12\\\">\\n    <div class=\\\"alert alert-primary alert-outline alert-dismissible\\\" role=\\\"alert\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">×</span>\\n        </button>\\n        <div class=\\\"alert-icon\\\">\\n            <i class=\\\"far fa-fw fa-bell\\\"></i>\\n        </div>\\n        <div class=\\\"alert-message\\\">\\n            <strong>Pas de veilles enregistrés</strong>\\n        </div>\\n    </div>\\n</div>\\n    <div class=\\\"col-12\\\" >\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h5 class=\\\"card-title\\\">Liste des pharmacies</h5>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <table class=\\\"table table-striped table-bordered \\\" [dtTrigger]=\\\"trigger\\\" datatable\\n                    [dtOptions]=\\\"dtOptions\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Produit farmavans</th>\\n                            <th>Concurrent</th>\\n                            <th>Laboratoire</th>\\n                            <th>Date</th>\\n                            <th *ngIf=\\\"user.role =='admin'\\\">Délégué</th>\\n                            <th></th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let g of veilles\\\">\\n                            <td>\\n                                <img [src]=\\\"g.produitCible.image_url\\\" width=\\\"24\\\" height=\\\"24\\\" class=\\\"rounded-circle mr-2\\\" >  \\n                            {{g.produitCible.libelle}}</td>\\n                            <td>{{g.lib_prod}}</td>\\n                            <td>{{g.labo}}</td>\\n                            <td>{{g.createdAt | date : 'dd/MM/yyyy hh:mm'}}</td>\\n                            <td *ngIf=\\\"user.role =='admin'\\\">{{g.analyseur? g.analyseur.nom+' '+g.analyseur.prenom : ''}}</td>\\n                        <td class=\\\"text-center\\\"><button (click)=\\\"showDetails(g)\\\" class=\\\"btn btn-pill btn-primary btn-sm\\\">details</button>\\n                                    <button class=\\\"btn btn-pill btn-danger btn-sm ml-2 \\\" data-toggle=\\\"modal\\\" (click)=\\\"selectedReview = g\\\"\\n                                data-target=\\\"#sizedModalSm\\\"><i class=\\\"fas fa-times\\\"></i></button>\\n\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n</div>\\n</main>\\n\\n<!--modal-->\\n<div class=\\\"modal fade\\\" *ngIf=\\\"selectedReview\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer l'analyse </h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer l'analyse de {{selectedReview.lib_prod}}?</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteReview()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"\\r\\n<main class=\\\"content\\\">\\r\\n    <div class=\\\"container-fluid p-0 mb-5\\\">\\r\\n\\r\\n        <h1 class=\\\"h3 mb-3\\\">Analyse concurentielle</h1>\\r\\n    <div class=\\\"row\\\">\\r\\n<div class=\\\"col-12 col-lg-12 col-xxl-6 d-flex\\\">\\r\\n    <div class=\\\"card flex-fill\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <h5 class=\\\"card-title\\\">Produit concerné</h5>\\r\\n            <h6 class=\\\"card-subtitle text-muted\\\"> analyse concurentielle des produits farmavans</h6>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-12 col-xl-12 mb-3\\\">\\r\\n                    <label>Nom du produit</label>\\r\\n            <input type=\\\"text\\\"         \\r\\n            (ngModelChange)=\\\"filterItem($event)\\\" \\r\\n            [(ngModel)]=\\\"targetMedic\\\" class=\\\"form-control\\\" placeholder=\\\"recherche\\\">\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-xl-12\\\">\\r\\n        <select \\r\\n             #selectList\\r\\n             [(ngModel)]=\\\"myProduct\\\" \\r\\n            (ngModelChange)=\\\"onChangeofOptions($event)\\\" class=\\\"custom-select mb-3\\\">\\r\\n            <option value=\\\"empty\\\" selected disabled>Veuillez selectionner un produit</option>\\r\\n            <option *ngFor=\\\"let item of items\\\" [ngValue]=\\\"item\\\">         \\r\\n                {{item.libelle}}\\r\\n            </option>    \\r\\n        </select>\\r\\n        </div>\\r\\n    </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"col-12 col-lg-12\\\" *ngIf=\\\"myProduct\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <div class=\\\"media float-right\\\">\\r\\n                <img [src]=\\\"myProduct.image_url\\\" width=\\\"80\\\" height=\\\"80\\\" class=\\\"rounded-circle mr-2\\\" >  \\r\\n            </div>\\r\\n            <h1>{{myProduct.libelle}} BTE {{myProduct.nb_gellules}}</h1>\\r\\n            \\r\\n        </div>\\r\\n    \\r\\n    <div class=\\\"card-body\\\">\\r\\n    <form #productForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12 col-lg-6\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label>Nom du produit concurrent</label>\\r\\n                        <input #libelle=\\\"ngModel\\\" [(ngModel)]=\\\"veille.lib_prod\\\" minlength=\\\"3\\\" required\\r\\n                            name=\\\"libelle\\\" type=\\\"text\\\"\\r\\n                            class=\\\"form-control\\\" placeholder=\\\"nom...\\\">\\r\\n                        <span class=\\\"msg font-11\\\"\\r\\n                            *ngIf=\\\"libelle.touched && libelle.errors\\\">libelle\\r\\n                            invalide*</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label>Laboratoire</label>\\r\\n                        <input #labo=\\\"ngModel\\\" [(ngModel)]=\\\"veille.labo\\\" required minlength=\\\"3\\\"\\r\\n                             name=\\\"labo\\\" type=\\\"text\\\"\\r\\n                            class=\\\"form-control\\\" placeholder=\\\"laboratoire d'origine...\\\">\\r\\n                        <span class=\\\"msg font-11\\\" *ngIf=\\\"labo.touched && labo.errors\\\">laboratoire\\r\\n                            invalide*</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>presentation </label>\\r\\n                    <textarea [(ngModel)]=\\\"veille.presentation\\\"  name=\\\"desc\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        placeholder=\\\"description du produit...\\\"\\r\\n                        rows=\\\"4\\\"></textarea>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Composition </label>\\r\\n                    <textarea [(ngModel)]=\\\"veille.composition\\\"  name=\\\"comp\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        placeholder=\\\"compoisition du produit...\\\"\\r\\n                        rows=\\\"4\\\"></textarea>\\r\\n                </div>\\r\\n               \\r\\n               \\r\\n\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-12 col-lg-6\\\">\\r\\n                <div class=\\\"form-row\\\">\\r\\n\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label>prix</label>\\r\\n                        <input #prix=\\\"ngModel\\\" required [(ngModel)]=\\\"veille.prix\\\"\\r\\n                            name=\\\"prix\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"TND.\\\">\\r\\n                        <span class=\\\"msg font-11\\\" *ngIf=\\\"prix.touched && prix.errors\\\">prix\\r\\n                            invalide*</span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group col-md-6\\\">\\r\\n                        <label>Nombre boites vendues</label>\\r\\n                        <input type=\\\"number\\\" [(ngModel)]=\\\"veille.nb_boites_vendues\\\"\\r\\n                            name=\\\"nbb_boites\\\" class=\\\"form-control\\\" placeholder=\\\"total grossiste et VD...\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>partenaires</label>\\r\\n                    <input type=\\\"text\\\"  name=\\\"partenaires\\\" [(ngModel)]=\\\"veille.partenaires\\\"\\r\\n                        class=\\\"form-control\\\" placeholder=\\\"partenaires potentiels du produit...\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Actions</label>\\r\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"veille.actions\\\" name=\\\"actions\\\"\\r\\n                        class=\\\"form-control\\\" placeholder=\\\"medecins,pharmacies...\\\">\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Posologie </label>\\r\\n                    <textarea  name=\\\"pos\\\" [(ngModel)]=\\\"veille.posologie\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n                        placeholder=\\\"mode d'administration...\\\"\\r\\n                        rows=\\\"4\\\"></textarea>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label>Commentaires </label>\\r\\n                    <textarea  name=\\\"comments\\\"\\r\\n                        class=\\\"form-control\\\" [(ngModel)]=\\\"veille.commentaires\\\"\\r\\n                        placeholder=\\\"Vos remarques, ou autres informations içi...\\\"\\r\\n                        rows=\\\"4\\\"></textarea>\\r\\n                </div>\\r\\n                <div class=\\\"form-row mt-3 float-right \\\">\\r\\n                    <div class=\\\"\\\">\\r\\n                        <button type=\\\"submit\\\" [disabled]=\\\"productForm.invalid\\\"\\r\\n                            (click)=\\\"submit(productForm)\\\"\\r\\n                            class=\\\"btn btn-primary btn-lg \\\">Enregistrer</button>\\r\\n                        <button type=\\\"reset\\\"\\r\\n                            class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</div>\\r\\n</main>\"","export default \"\\n    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <button *ngIf=\\\"!showForm\\\" (click)=\\\"showPanel()\\\" class=\\\"btn btn-primary float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-plus\\\"></i> Nouveau produit</button>\\n            <button *ngIf=\\\"showForm\\\" (click)=\\\"hidePanel()\\\" class=\\\"btn btn-danger float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-times\\\"></i> Annuler</button>\\n            <h1 class=\\\"h3 mb-3\\\">Produits</h1>\\n            <!--form-->\\n            <div class=\\\"row\\\" *ngIf=\\\"showForm\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Ajouter un produit</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">informations générales</h6>\\n                            <!--    alert message    -->\\n                            <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                    <span aria-hidden=\\\"true\\\">×</span>\\n                                </button>\\n                                <div class=\\\"alert-message\\\">\\n                                    <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                    champs.\\n                                </div>\\n                            </div>\\n                            <!--end alert-->\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form #productForm=\\\"ngForm\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-12 col-lg-6\\\">\\n                                        <div class=\\\"form-row\\\">\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>libelle</label>\\n                                                <input #libelle=\\\"ngModel\\\" minlength=\\\"3\\\" required\\n                                                    [(ngModel)]=\\\"productToAdd.libelle\\\" name=\\\"libelle\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"vitavans, vitafor...\\\">\\n                                                <span class=\\\"msg font-11\\\"\\n                                                    *ngIf=\\\"libelle.touched && libelle.errors\\\">libelle\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>image</label>\\n                                                <input #image=\\\"ngModel\\\" required minlength=\\\"3\\\"\\n                                                    [(ngModel)]=\\\"productToAdd.image_url\\\" name=\\\"image\\\" type=\\\"text\\\"\\n                                                    class=\\\"form-control\\\" placeholder=\\\"http://vitafor.png\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"image.touched && image.errors\\\">image\\n                                                    invalide*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>description </label>\\n                                            <textarea [(ngModel)]=\\\"productToAdd.description\\\" name=\\\"desc\\\"\\n                                                class=\\\"form-control\\\"\\n                                                placeholder=\\\"Vos remarques, ou autres informations içi...\\\"\\n                                                rows=\\\"4\\\"></textarea>\\n                                        </div>\\n                                        <div class=\\\"form-row\\\">\\n\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>prix</label>\\n                                                <input #prix=\\\"ngModel\\\" required [(ngModel)]=\\\"productToAdd.prix\\\"\\n                                                    name=\\\"prix\\\" type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"TND.\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"prix.touched && prix.errors\\\">prix\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>Nombre gellules</label>\\n                                                <input type=\\\"number\\\" [(ngModel)]=\\\"productToAdd.nb_gellules\\\"\\n                                                    name=\\\"nb_gellules\\\" class=\\\"form-control\\\" placeholder=\\\"10,20...\\\">\\n                                            </div>\\n                                        </div>\\n\\n\\n                                    </div>\\n                                    <div class=\\\"col-12 col-lg-6\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>lien guide gamme</label>\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"productToAdd.guide_gamme\\\" name=\\\"guide_gamme\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"http://farmavans.onedrive/guide.pdf\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>lien fiche poso (onedrive)</label>\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"productToAdd.fiche_poso\\\" name=\\\"fiche_poso\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"http://farmavans.onedrive/file.pdf\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>composition</label>\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"productToAdd.composition\\\" name=\\\"composition\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"lien ou composition...\\\">\\n                                        </div>\\n                                        <div class=\\\"form-row\\\">\\n                                            <label>etudes cliniques</label>\\n                                            <input #etude=\\\"ngModel\\\" minlength=\\\"3\\\" required\\n                                                [(ngModel)]=\\\"productToAdd.etude_cliniques\\\" name=\\\"banque\\\" type=\\\"text\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"etudes cliniques...\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"etude.touched && etude.errors\\\">banque\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"form-row mt-3 float-right \\\">\\n                                            <div class=\\\"\\\">\\n                                                <button type=\\\"submit\\\" *ngIf=\\\"ajout\\\" [disabled]=\\\"productForm.invalid\\\"\\n                                                    (click)=\\\"submit(productForm)\\\"\\n                                                    class=\\\"btn btn-primary btn-lg \\\">Enregistrer</button>\\n                                                    <button type=\\\"submit\\\" *ngIf=\\\"modification\\\" [disabled]=\\\"productForm.invalid\\\"\\n                                                    (click)=\\\"submitModif(productForm)\\\"\\n                                                    class=\\\"btn btn-warning btn-lg \\\">Enregistrer</button>\\n                                                <button type=\\\"reset\\\"\\n                                                    class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                            </div>\\n                                        </div>\\n\\n                                    </div>\\n\\n                                </div>\\n\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--endform-->\\n            <div class=\\\"row\\\">\\n            <div class=\\\"input-group mb-3 col-md-6\\\" *ngIf=\\\"products\\\">\\n                <input type=\\\"text\\\" #content (keyup)=\\\"filterProducts(content.value)\\\" class=\\\"form-control\\\" placeholder=\\\"Recherche\\\" aria-label=\\\"Search\\\">\\n            </div>\\n        </div>\\n            <div class=\\\"row\\\">\\n                <div *ngIf=\\\"products.length == 0\\\" class=\\\"col-md-12\\\">\\n                <div class=\\\"alert alert-primary alert-outline alert-dismissible\\\" role=\\\"alert\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n                    <div class=\\\"alert-icon\\\">\\n                        <i class=\\\"far fa-fw fa-bell\\\"></i>\\n                    </div>\\n                    <div class=\\\"alert-message\\\">\\n                        <strong>Pas de produits</strong> pas de produits dans la liste\\n                    </div>\\n                </div>\\n            </div>\\n            \\n                <div class=\\\"col-12 col-md-6 col-lg-3\\\" *ngFor=\\\"let p of products | paginate: { itemsPerPage: 8, currentPage: p }\\\">\\n                <app-product-item (productOperation)=\\\"handleProductOp($event)\\\" [product]=\\\"p\\\" *ngIf=\\\"p\\\"></app-product-item>\\n                </div>\\n                \\n            </div>\\n            <div class=\\\"row text-center\\\">\\n                <div class=\\\"col-12\\\">\\n                <pagination-controls nextLabel=\\\"Suivant\\\" previousLabel=\\\"Précedant\\\"  (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n            </div>\\n            </div>\\n           \\n        </div>\\n    </main>\\n\\n<!--modal-->\\n<div class=\\\"modal fade\\\" *ngIf=\\\"selectedProduct\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer l'utilisateur</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer {{selectedProduct.libelle}}.</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteProduct()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<main class=\\\"content\\\">\\n    <div class=\\\"container-fluid p-0\\\">\\n\\n        <h1 class=\\\"h3 mb-3\\\">Paramètres</h1>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3 col-xl-2\\\">\\n\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"card-title mb-0\\\">Paramètres du profil</h5>\\n                    </div>\\n\\n                    <div class=\\\"list-group list-group-flush\\\" role=\\\"tablist\\\">\\n                        <a class=\\\"list-group-item list-group-item-action active\\\" data-toggle=\\\"list\\\" href=\\\"#account\\\" role=\\\"tab\\\">\\n                            Compte\\n                        </a>\\n                        <a class=\\\"list-group-item list-group-item-action\\\" data-toggle=\\\"list\\\" href=\\\"#password\\\" role=\\\"tab\\\">\\n                            Mot de passe\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"col-md-9 col-xl-10\\\">\\n                <div class=\\\"tab-content\\\">\\n                    <div class=\\\"tab-pane fade show active\\\" id=\\\"account\\\" role=\\\"tabpanel\\\">\\n\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <h5 class=\\\"card-title mb-0\\\">Informations publiques</h5>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div *ngIf=\\\"updateInfoError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                        <span aria-hidden=\\\"true\\\">×</span>\\n                                    </button>\\n                                    <div class=\\\"alert-message\\\">\\n                                        <strong>Modification echouée</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                        champs.\\n                                    </div>\\n                                </div>\\n                                <form #pubForm=\\\"ngForm\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-md-8\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"inputUsername\\\">Email de connexion</label>\\n                                                <input #email=\\\"ngModel\\\" required pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\"\\n                                                 type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"email@farmavans.tn\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"email.touched && email.errors\\\">email\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"inputUsername\\\">A propos</label>\\n                                                <textarea rows=\\\"2\\\" #bio=\\\"ngModel\\\" [(ngModel)]=\\\"user.about\\\" name=\\\"about\\\" class=\\\"form-control\\\" id=\\\"inputBio\\\"\\n                                                    placeholder=\\\"Tell something about yourself\\\"></textarea>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-md-4\\\">\\n                                            <div class=\\\"text-center\\\">\\n                                                <img [src]=\\\"user.imageUrl\\\" (error)=\\\"user.imageUrl = 'assets/img/default.png'\\\" class=\\\"rounded-circle img-responsive mt-2\\\"\\n                                                    width=\\\"128\\\" height=\\\"128\\\" />\\n                                                <div class=\\\"mt-2\\\">\\n                                                   <input type=\\\"text\\\" name=\\\"imgUrl\\\" [(ngModel)]=\\\"user.imageUrl\\\" class=\\\"form-control\\\" placeholder=\\\"url de l'image...\\\"/>\\n                                                </div>\\n                                                <small>128x128 : meilleur format</small>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <button (click)=\\\"updateInfoPublique()\\\" [disabled]=\\\"pubForm.disabled\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sauvegarder</button>\\n                                </form>\\n\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-header\\\">\\n                                <h5 class=\\\"card-title mb-0\\\">Informations personelles</h5>\\n                            </div>\\n                            <div class=\\\"card-body\\\">\\n                                <div *ngIf=\\\"updateInfoPError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                        <span aria-hidden=\\\"true\\\">×</span>\\n                                    </button>\\n                                    <div class=\\\"alert-message\\\">\\n                                        <strong>Modification echouée</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                        champs.\\n                                    </div>\\n                                </div>\\n                                <form #persForm=\\\"ngForm\\\">\\n                                    <div class=\\\"form-row\\\">\\n                                        <div class=\\\"form-group col-md-6\\\">\\n                                            <label for=\\\"inputFirstName\\\">Nom</label>\\n                                            <input type=\\\"text\\\" #nom=\\\"ngModel\\\"  minlength=\\\"3\\\"  [(ngModel)]=\\\"user.nom\\\" name=\\\"nom\\\" class=\\\"form-control\\\" id=\\\"inputFirstName\\\" placeholder=\\\"First name\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"nom.touched && nom.errors\\\">nom\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"form-group col-md-6\\\">\\n                                            <label for=\\\"inputLastName\\\">Prenom</label>\\n                                            <input type=\\\"text\\\" #prenom=\\\"ngModel\\\" minlength=\\\"3\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"user.prenom\\\" name=\\\"prenom\\\" id=\\\"inputLastName\\\" placeholder=\\\"Last name\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"prenom.touched && prenom.errors\\\">prenom\\n                                                invalide*</span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"inputEmail4\\\">Email attribué</label>\\n                                        <input type=\\\"text\\\" #emailp=\\\"ngModel\\\" pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@([a-zA-Z0-9_\\\\-\\\\.]+)\\\\.([a-zA-Z]{2,5})$\\\"\\n                                         [(ngModel)]=\\\"user.emailPerso\\\" name=\\\"emailp\\\" class=\\\"form-control\\\" id=\\\"inputEmail4\\\" placeholder=\\\"Email\\\">\\n                                         <span class=\\\"msg font-11\\\" *ngIf=\\\"emailp.touched && emailp.errors\\\">email\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"inputAddress\\\">Addresse</label>\\n                                        <input type=\\\"text\\\" #adr1=\\\"ngModel\\\" [(ngModel)]=\\\"user.adresse\\\" name=\\\"adr\\\" class=\\\"form-control\\\" id=\\\"inputAddress\\\" placeholder=\\\"1234 Main St\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"adr1.touched && adr1.errors\\\">addresse\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"inputAddress2\\\">Address actuelle</label>\\n                                        <input type=\\\"text\\\" #adr2=\\\"ngModel\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.adresse_actuelle\\\" name=\\\"adra\\\"  id=\\\"inputAddress2\\\" placeholder=\\\"Apartment, studio, or floor\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"adr2.touched && adr2.errors\\\">addresse\\n                                            invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-row\\\">\\n                                        <div class=\\\"form-group col-md-4\\\">\\n                                            <label for=\\\"inputZip\\\">Date naissance</label>\\n                                            <input type=\\\"date\\\" #date_naiss [(ngModel)]=\\\"user.date_naissance\\\" name=\\\"date_naissance\\\" class=\\\"form-control\\\" id=\\\"inputZip\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"date_naiss.touched && date_naiss.errors\\\">Date\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"form-group col-md-4\\\">\\n                                            <label for=\\\"inputCity\\\">telephone</label>\\n                                            <input type=\\\"text\\\" #tel1=\\\"ngModel\\\"  [(ngModel)]=\\\"user.telephone\\\" name=\\\"telephone\\\" class=\\\"form-control\\\" id=\\\"inputCity\\\">\\n                                            <span class=\\\"msg font-11\\\" *ngIf=\\\"tel1.touched && tel1.errors\\\">N°Tel\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"form-group col-md-4\\\">\\n                                            <label for=\\\"inputCity22\\\">telephone attribué</label>\\n                                            <input type=\\\"text\\\" [(ngModel)]=\\\"user.telephone_perso\\\" name=\\\"telephone_perso\\\" class=\\\"form-control\\\" id=\\\"inputCity22\\\">\\n                                        </div>\\n                                        \\n                                    </div>\\n                                    <button (click)=\\\"updateInfoPublique()\\\" [disabled]=\\\"persForm.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n                                </form>\\n\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"tab-pane fade\\\" id=\\\"password\\\" role=\\\"tabpanel\\\">\\n                        <div class=\\\"card\\\">\\n                            <div class=\\\"card-body\\\">\\n                                <div *ngIf=\\\"updatePwError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                        <span aria-hidden=\\\"true\\\">×</span>\\n                                    </button>\\n                                    <div class=\\\"alert-message\\\">\\n                                        <strong>Modification echouée</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                        champs.\\n                                    </div>\\n                                </div>\\n                                <h5 class=\\\"card-title\\\">Mot de passe</h5>\\n\\n                                <form #mdpForm=\\\"ngForm\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"inputPasswordCurrent\\\">Mot de passe actuel</label>\\n                                        <input required pattern=\\\"^[A-Z]+[a-zA-Z0-9]*\\\" type=\\\"password\\\" #old=\\\"ngModel\\\" [(ngModel)]=\\\"oldMdp\\\" name=\\\"mdp1\\\" class=\\\"form-control\\\" id=\\\"inputPasswordCurrent\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"old.touched && old.errors\\\">Mot de passe invalide*</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"inputPasswordNew\\\">Nouveau mot de passe</label>\\n                                        <input required pattern=\\\"^[A-Z]+[a-zA-Z0-9]*\\\" type=\\\"password\\\" #new=\\\"ngModel\\\" [(ngModel)]=\\\"newMdp\\\" name=\\\"mdp2\\\" class=\\\"form-control\\\" id=\\\"inputPasswordNew\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"new.touched && new.errors \\n                                         || (confirm.touched && confirm.errors && confirm != new) || \\n                                        (new.touched && new.errors && confirm != new) ||\\n                                         (confirm.touched && confirm.errors)\\\">Mot de passes incompatibles *</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label for=\\\"inputPasswordNew2\\\">Confirmer le mot de passe</label>\\n                                        <input required pattern=\\\"^[A-Z]+[a-zA-Z0-9]*\\\" type=\\\"password\\\" #confirm=\\\"ngModel\\\" [(ngModel)]=\\\"confirmMdp\\\" name=\\\"mdp3\\\" class=\\\"form-control\\\" id=\\\"inputPasswordNew2\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"(confirm.touched && confirm.errors)\\n                                         || (new.touched && new.errors) || (confirm.touched && confirm.value != new.value)\\\">\\n                                         Mot de passes incompatibles *</span>\\n                                    </div>\\n                                    <button [disabled]=\\\"mdpForm.invalid\\\" (click)=\\\"updatePw()\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Sauvegarder</button>\\n                                </form>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</main>\"","export default \"<div class=\\\"col-xl-12\\\">\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <h5 class=\\\"card-title mb-0\\\">Synthése des rapports</h5>\\n        </div>\\n         <!--    alert message    -->\\n         <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">×</span>\\n            </button>\\n            <div class=\\\"alert-message\\\">\\n                <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                champs.\\n            </div>\\n        </div>\\n        <!--end alert-->\\n        <div class=\\\"card-body\\\">\\n            <form #grForm=\\\"ngForm\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-12 col-lg-12\\\">  \\n                        <div class=\\\"form-row mb-2\\\">\\n                            <div class=\\\"col-md-3\\\">\\n                            <label>Du</label>\\n                            <input #date_debut_rapport=\\\"ngModel\\\" required \\n                                [(ngModel)]=\\\"rapportToAdd.date_debut_rapport\\\" name=\\\"date_debut_rapport\\\" type=\\\"date\\\"\\n                                class=\\\"form-control\\\" placeholder=\\\"sortie 1,sortie 2...\\\">\\n                            <span class=\\\"msg font-11\\\" *ngIf=\\\"date_debut_rapport.touched && date_debut_rapport.errors\\\">Date\\n                                invalide*</span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <label>Au</label>\\n                                <input #date_fin_rapport=\\\"ngModel\\\" required \\n                                    [(ngModel)]=\\\"rapportToAdd.date_fin_rapport\\\" name=\\\"date_fin_rapport\\\" type=\\\"date\\\"\\n                                    class=\\\"form-control\\\" >\\n                                <span class=\\\"msg font-11\\\" *ngIf=\\\"date_fin_rapport.touched && date_fin_rapport.errors\\\">Date\\n                                    invalide*</span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <label>Semaine</label>\\n                                <input #semaine_rapport=\\\"ngModel\\\" required min=\\\"0\\\"\\n                                [(ngModel)]=\\\"rapportToAdd.semaine_rapport\\\" name=\\\"semaine_rapport\\\" type=\\\"number\\\"\\n                                class=\\\"form-control\\\" placeholder=\\\"nord, centre...\\\">\\n                            <span class=\\\"msg font-11\\\" *ngIf=\\\"semaine_rapport.touched && semaine_rapport.errors\\\">secteur\\n                                invalide*</span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <label>Type rapport</label> \\n                                <select #type_rapport=\\\"ngModel\\\" [(ngModel)]=\\\"rapportToAdd.type_rapport\\\" name=\\\"tp_r\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"null\\\" selected disabled>Type</option>\\n                                    <option value=\\\"VM\\\">VM</option>\\n                                    <option value=\\\"VP\\\">VP</option>\\n                                    <option value=\\\"A\\\">Animation</option>\\n                                </select>\\n                            <span class=\\\"msg font-11\\\" *ngIf=\\\"type_rapport.touched && type_rapport.errors\\\">Type\\n                                requis*</span>\\n                            </div>\\n                        </div> \\n                        <div class=\\\"form-row mb-2\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <label>Jour ferie</label> \\n                                <select #jf=\\\"ngModel\\\" [(ngModel)]=\\\"rapportToAdd.jour_ferie\\\" name=\\\"j_fr\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"true\\\">oui</option>\\n                                    <option value=\\\"false\\\">non</option>\\n                                </select>\\n                            <span class=\\\"msg font-11\\\" *ngIf=\\\"jf.touched && jf.errors\\\">requis *</span>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <label>Reunion</label> \\n                                <select #reun=\\\"ngModel\\\" [(ngModel)]=\\\"rapportToAdd.reunion\\\" name=\\\"reun\\\" class=\\\"form-control\\\">\\n                                    <option value=\\\"true\\\">oui</option>\\n                                    <option value=\\\"false\\\">non</option>\\n                                </select>\\n                            <span class=\\\"msg font-11\\\" *ngIf=\\\"reun.touched && reun.errors\\\">requis *</span>\\n                            </div>\\n                        </div>   \\n                        <div class=\\\"form-row\\\" *ngIf=\\\"type_rapport && (type_rapport.value === 'VP' || type_rapport.value === 'VM')\\\">\\n                            <div class=\\\"col-md-3\\\">\\n                            <label *ngIf=\\\"type_rapport.value === 'VM'\\\">Objectif spécialité P</label>\\n                            <label *ngIf=\\\"type_rapport.value === 'VP'\\\">Pharmacies jour</label>\\n                            <input #objectif_1=\\\"ngModel\\\" required min=\\\"0\\\" (change)=\\\"calculTotalObj()\\\"\\n                                [(ngModel)]=\\\"rapportToAdd.objectif_1\\\" name=\\\"objectif_1\\\" type=\\\"number\\\"\\n                                class=\\\"form-control\\\">\\n                            <span class=\\\"msg font-11\\\" *ngIf=\\\"objectif_1.touched && objectif_1.errors\\\">objectif\\n                                invalide*</span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <label *ngIf=\\\"type_rapport.value === 'VM'\\\">Objectif spécialité H</label>\\n                                <label *ngIf=\\\"type_rapport.value === 'VP'\\\">Pharmacies nuit</label>\\n                                <input #objectif_2=\\\"ngModel\\\" required min=\\\"0\\\" (change)=\\\"calculTotalObj()\\\"\\n                                    [(ngModel)]=\\\"rapportToAdd.objectif_2\\\" name=\\\"objectif_2\\\" type=\\\"number\\\"\\n                                    class=\\\"form-control\\\">\\n                                <span class=\\\"msg font-11\\\" *ngIf=\\\"objectif_2.touched && objectif_2.errors\\\">Objectif\\n                                    invalide*</span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <label>Total</label>\\n                                <input #objectif_total=\\\"ngModel\\\" required min=\\\"0\\\" disabled\\n                                    [(ngModel)]=\\\"rapportToAdd.objectif_total\\\" name=\\\"objectif_total\\\" type=\\\"number\\\"\\n                                    class=\\\"form-control\\\" >\\n                                <span class=\\\"msg font-11\\\" *ngIf=\\\"objectif_total.touched && objectif_total.errors\\\">total\\n                                    invalide*</span>\\n                            </div>\\n                            <div class=\\\"col-md-3\\\">\\n                                <label *ngIf=\\\"type_rapport.value === 'VM'\\\">Objectif pharmacies</label>\\n                                <label *ngIf=\\\"type_rapport.value === 'VP'\\\">Objectif Grossistes</label>\\n                                <input #objectif_pharmacies_grossiste=\\\"ngModel\\\" required min=\\\"0\\\"\\n                                    [(ngModel)]=\\\"rapportToAdd.objectif_pharmacies_grossiste\\\" name=\\\"objectif_pharmacies_grossiste\\\" type=\\\"number\\\"\\n                                    class=\\\"form-control\\\">\\n                                <span class=\\\"msg font-11\\\" *ngIf=\\\"objectif_pharmacies_grossiste.touched && objectif_pharmacies_grossiste.errors\\\">objectif\\n                                    invalide*</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-row\\\" *ngIf=\\\"type_rapport && type_rapport.value === 'A'\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                            <label>Pharmacies (cachets)</label>\\n                            <input #objectif_1=\\\"ngModel\\\" required min=\\\"0\\\" (change)=\\\"calculTotalObj()\\\"\\n                                [(ngModel)]=\\\"rapportToAdd.objectif_1\\\" name=\\\"objectif_1\\\" type=\\\"number\\\"\\n                                class=\\\"form-control\\\">\\n                            <span class=\\\"msg font-11\\\" *ngIf=\\\"objectif_1.touched && objectif_1.errors\\\">objectif\\n                                invalide*</span>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <label>Ventes </label>\\n                                <input #objectif_2=\\\"ngModel\\\" required min=\\\"0\\\" (change)=\\\"calculTotalObj()\\\"\\n                                    [(ngModel)]=\\\"rapportToAdd.objectif_2\\\" name=\\\"objectif_2\\\" type=\\\"number\\\"\\n                                    class=\\\"form-control\\\">\\n                                <span class=\\\"msg font-11\\\" *ngIf=\\\"objectif_2.touched && objectif_2.errors\\\">objectif\\n                                    invalide*</span>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <label>Total</label>\\n                                <input #objectif_total=\\\"ngModel\\\" required min=\\\"0\\\" disabled\\n                                    [(ngModel)]=\\\"rapportToAdd.objectif_total\\\" name=\\\"objectif_total\\\" type=\\\"number\\\"\\n                                    class=\\\"form-control\\\" >\\n                                <span class=\\\"msg font-11\\\" *ngIf=\\\"objectif_total.touched && objectif_total.errors\\\">total\\n                                    invalide*</span>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\\"type_rapport.value\\\">\\n                            <div class=\\\"form-row mt-4 mb-2\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <h5><i class=\\\"fas fa-fw fa-university\\\"></i>Qualité du rapport</h5>               \\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <button (click)=\\\"addRow()\\\" *ngIf=\\\"rapportToAdd.objectif_total > 0\\\" class=\\\"btn btn-primary btn-sm ml-2 float-right\\\">+ Délégué</button>\\n                                </div>\\n                            </div>\\n                            \\n                            <form [formGroup]=\\\"reviewForm\\\">\\n                            <div formArrayName=\\\"row\\\">\\n                                <div *ngFor=\\\"let p of report().controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"col-md-6\\\">\\n                                        <h2>Délégué / animatrice n°{{i+1}}</h2>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-row\\\">\\n                                    <div class=\\\"col-md-5\\\">\\n                                        <label>Délégué / animatrice</label>\\n                                        <select formControlName=\\\"idDelegue\\\" name=\\\"delegue\\\" class=\\\"form-control\\\"> \\n                                            <option *ngFor=\\\"let d of delegues\\\" [ngValue]=\\\"d.id\\\">{{d.nom}} {{d.prenom}}</option>                                                                       \\n                                        </select>\\n                                    </div>\\n                                    <div class=\\\"col-md-3\\\">\\n                                        <label>Manifestation</label>\\n                                        <select formControlName=\\\"manifestation\\\" name=\\\"manif\\\" class=\\\"form-control\\\">\\n                                            <option value=\\\"AUCUNE\\\" selected>Aucune</option>\\n                                            <option value=\\\"STAFF\\\" >Staff</option>\\n                                            <option value=\\\"FORMATION\\\" >Formation</option>\\n                                            <option value=\\\"EPU\\\">Epu</option>    \\n                                            <option value=\\\"CONGRES\\\">Congrés</option>                                      \\n                                        </select>\\n                                    </div>\\n                                    <div class=\\\"col-md-2 text-center\\\">\\n                                        <label class=\\\"custom-control custom-checkbox mt-4\\\">\\n                                            <input formControlName=\\\"conges\\\" #cong name=\\\"conges\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Congés</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2\\\">\\n                                        <label>Nb jour congés</label>\\n                                        <input formControlName=\\\"nb_jours_conges\\\" name=\\\"conges_val\\\" [disabled]=\\\"cong.value == false\\\" min=\\\"0\\\" type=\\\"number\\\" class=\\\"form-control\\\">\\n                                    </div>\\n                                </div> \\n                                <div class=\\\"form-row mt-3\\\">\\n                                    <div class=\\\"form-row\\\" *ngIf=\\\"type_rapport && (type_rapport.value === 'VM' || type_rapport.value === 'VP')\\\"> \\n                                    <div class=\\\"col-md-2\\\">\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VM'\\\" >Réalisé SP</label>\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VP'\\\" >Réalisé P Jour</label>\\n                                        <input formControlName=\\\"realise_obj_1\\\" required\\n                                        (change)=\\\"rapportToAdd.objectif_1 && obj1_r.value? p_rsp1.value = ((obj1_r.value / rapportToAdd.objectif_1 )* 100):0\\\" \\n                                        #obj1_r name=\\\"realise_obj_1\\\" type=\\\"number\\\" class=\\\"form-control\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"obj1_r.touched && obj1_r.value > rapportToAdd.objectif_1\\\">dépasse l'objectif</span>\\n                                    </div>\\n                                    \\n                                    <div class=\\\"col-md-2\\\" >\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VM'\\\" >% Réalisé SP</label>\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VP'\\\" >% Réalisé P Jour</label>\\n                                        <input #p_rsp1 disabled name=\\\"p_obj_1_val\\\" type=\\\"number\\\" class=\\\"form-control\\\">\\n                                    </div>\\n                                    <div class=\\\"col-md-2\\\" >\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VM'\\\">Réalisé SH</label>\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VP'\\\">Réalisé P Nuit</label>\\n                                        <input #obj2_r formControlName=\\\"realise_obj_2\\\" \\n                                        (change)=\\\"rapportToAdd.objectif_2 && obj2_r.value? p_rsp2.value = ((obj2_r.value / rapportToAdd.objectif_2 )* 100):0\\\" \\n                                        name=\\\"realise_obj_2\\\" type=\\\"number\\\" class=\\\"form-control\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"obj2_r.touched && obj2_r.value > rapportToAdd.objectif_2\\\">dépasse l'objectif</span>\\n                                    </div>\\n                                    <div class=\\\"col-md-2\\\" >\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VM'\\\">% Réalisé SH</label>\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VP'\\\">% Réalisé P Nuit</label>\\n                                        <input #p_rsp2 disabled name=\\\"p_obj_2_val\\\" type=\\\"number\\\" class=\\\"form-control\\\">\\n                                    </div>\\n                                    <div class=\\\"col-md-4\\\" >\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VM'\\\">Pharmacies</label>\\n                                        <label *ngIf=\\\"type_rapport && type_rapport.value === 'VP'\\\">Grossiste</label>\\n                                        <input formControlName=\\\"pharma_gro_realisees\\\" name=\\\"pharma_gro_realisees\\\" type=\\\"number\\\" class=\\\"form-control\\\">\\n                                    </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-4\\\" *ngIf=\\\"type_rapport && type_rapport.value === 'A'\\\">\\n                                        <label>Ventes realisees</label>\\n                                        <input #rv formControlName=\\\"realise_ventes\\\" name=\\\"realise_ventes\\\" type=\\\"number\\\" class=\\\"form-control\\\">\\n                                        <span class=\\\"msg font-11\\\" *ngIf=\\\"rv.touched && rv.value > rapportToAdd.realise_ventes\\\">dépasse l'objectif</span>\\n                                    </div>                                   \\n                                </div>\\n                                <div class=\\\"form-row mb-2\\\">\\n                                    <div class=\\\"col-md-2\\\">\\n                                        <label class=\\\"custom-control custom-checkbox  mt-3\\\">\\n                                            <input formControlName=\\\"rapport_envoye\\\" name=\\\"rapport_temps\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Rapport envoyé à temps</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2\\\">\\n                                        <label class=\\\"custom-control custom-checkbox  mt-3\\\">\\n                                            <input formControlName=\\\"respect_plan_tournee\\\" name=\\\"respect_plan\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Respect du plan de tournée</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2\\\">\\n                                        <label class=\\\"custom-control custom-checkbox  mt-3\\\">\\n                                            <input formControlName=\\\"visite_detail\\\" name=\\\"visites_detail\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Visites détaillées</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2  mt-3\\\"  *ngIf=\\\"type_rapport && type_rapport.value === 'VM'\\\">\\n                                        <label class=\\\"custom-control custom-checkbox\\\">\\n                                            <input formControlName=\\\"respect_plan_charge\\\" name=\\\"respect_plan_charge\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Respect du plan de charge</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2  mt-3\\\"  *ngIf=\\\"type_rapport && type_rapport.value === 'A'\\\">\\n                                        <label class=\\\"custom-control custom-checkbox\\\">\\n                                            <input formControlName=\\\"promesse_packs\\\" name=\\\"promesse_pack\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Promesse de packs</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2  mt-3\\\">\\n                                        <label class=\\\"custom-control custom-checkbox\\\">\\n                                            <input  formControlName=\\\"remarques_pertinentes\\\" name=\\\"remarques_per\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Remarques pertinentes</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2  mt-3\\\">\\n                                        <label class=\\\"custom-control custom-checkbox\\\">\\n                                            <input formControlName=\\\"veille_c\\\" name=\\\"veille_concur\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Veille concurrencielle</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2  mt-3\\\" *ngIf=\\\"type_rapport && type_rapport.value === 'A'\\\">\\n                                        <label class=\\\"custom-control custom-checkbox\\\">\\n                                            <input formControlName=\\\"capture_ecran\\\" name=\\\"stat_jour\\\"  type=\\\"checkbox\\\" class=\\\"custom-control-input\\\">\\n                                            <span class=\\\"custom-control-label\\\">Capture d'écran statistique du jour</span>\\n                                        </label>\\n                                    </div>\\n                                    <div class=\\\"col-md-2\\\">\\n                                        <label>% satisfaction</label>\\n                                        <input formControlName=\\\"pourcentage_satisfaction\\\"  name=\\\"satisfaction\\\" placeholder=\\\"%\\\" type=\\\"number\\\" class=\\\"form-control\\\">\\n                                    </div>\\n                                    <button (click)=\\\"removeRow(i)\\\" class=\\\"btn btn-white btn-sm mt-2\\\">X</button>\\n                                   \\n                                </div>\\n                                <hr class=\\\"my-4\\\">\\n                            </div>\\n                            </div>\\n                        </form>\\n                        </div>     \\n                        <div class=\\\"form-row\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                            <label><i class=\\\"fas fa-fw fa-thumbtack\\\"></i>Remarques et suggestions</label>\\n                            <textarea [(ngModel)]=\\\"rapportToAdd.remarques\\\" name=\\\"objectifs\\\" class=\\\"form-control\\\" rows=\\\"5\\\"></textarea>\\n                            </div>\\n                        </div>                           \\n                    </div>                                                                                                             \\n                    \\n                </div> \\n                <div class=\\\"form-row mt-4 float-right\\\">\\n                    <div class=\\\"\\\">\\n                        <button type=\\\"submit\\\" *ngIf=\\\"ajout\\\" [disabled]=\\\"grForm.invalid || !rapportToAdd || report().value.length === 0\\\"\\n                            (click)=\\\"addReport(grForm)\\\"\\n                            class=\\\"btn btn-primary btn-lg \\\">Ajouter</button>\\n                            <button type=\\\"submit\\\" *ngIf=\\\"modif\\\" [disabled]=\\\"grForm.invalid || !rapportToAdd || report().value.length === 0\\\"\\n                            (click)=\\\"editReport(grForm)\\\"\\n                            class=\\\"btn btn-warning btn-lg \\\">Enregistrer</button>\\n                        <button type=\\\"reset\\\"\\n                            class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                    </div>\\n                </div>                       \\n            </form>\\n        </div>\\n    </div>\\n</div>\"","export default \"\\n    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <button *ngIf=\\\"!showForm\\\" (click)=\\\"showPanel()\\\" class=\\\"btn btn-primary float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-plus\\\"></i> Nouveau rapport</button>\\n            <button *ngIf=\\\"showForm\\\" (click)=\\\"hidePanel()\\\" class=\\\"btn btn-danger float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-times\\\"></i> Annuler</button>\\n            <h1 class=\\\"h3 mb-3\\\">Rapports</h1>\\n            <!--form-->\\n            <div class=\\\"row\\\" *ngIf=\\\"showForm\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Nouveau rapport</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">informations générales</h6>\\n                            <!--    alert message    -->\\n                            <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                    <span aria-hidden=\\\"true\\\">×</span>\\n                                </button>\\n                                <div class=\\\"alert-message\\\">\\n                                    <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                    champs.\\n                                </div>\\n                            </div>\\n                            <!--end alert-->\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <app-rapport-form [inputData]=\\\"input\\\"></app-rapport-form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\" >\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Liste des Rapports</h5>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <table class=\\\"table table-striped table-bordered \\\" [dtTrigger]=\\\"trigger\\\" datatable\\n                                [dtOptions]=\\\"dtOptions\\\">\\n                                <thead>\\n                                    <tr>\\n                                        <th>Semaine</th>\\n                                        <th>Type</th>\\n                                        <th>Dates</th>\\n                                        <th>Crée le</th>\\n                                        <th></th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor=\\\"let g of rapports\\\">\\n                                        <td>{{g.semaine_rapport}}</td>\\n                                        <td>{{g.type_rapport}}</td>\\n                                        <td>{{g.date_debut_rapport}} au {{g.date_fin_rapport}}</td>\\n                                        <td>{{g.createdAt | date : 'short'}}</td>\\n                                    <td class=\\\"text-center\\\"><button (click)=\\\"editReport(g)\\\" class=\\\"btn btn-primary btn-sm\\\">details</button>\\n                                                <button class=\\\"btn  btn-danger btn-sm ml-2\\\" data-toggle=\\\"modal\\\" (click)=\\\"selectedRapportToDelete = g\\\"\\n                                            data-target=\\\"#sizedModalSm\\\">X</button>\\n\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </main>\\n\\n\\n<!--modal-->\\n<div class=\\\"modal fade\\\" *ngIf=\\\"selectedRapportToDelete\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer le rapport</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer le rapport {{selectedRapportToDelete.type_rapport}} de la semaine {{selectedRapportToDelete.semaine_rapport}}.</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteReport()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<main class=\\\"content\\\">\\n    <div class=\\\"container-fluid p-0\\\" >\\n\\n        <h1 class=\\\"h3 mb-3\\\">Ajouter un PV de réunion</h1>\\n        <button class=\\\"btn btn-primary float-right\\\" *ngIf=\\\"!showForm\\\" (click)=\\\"showForm = true\\\">Ajouter un PV</button>\\n        <div class=\\\"row\\\" *ngIf=\\\"showForm\\\">\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\">\\n                        <h5 class=\\\"card-title\\\">Le {{date | date:'medium'}}</h5>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                        <form #rform=\\\"ngForm\\\">\\n                            <div class=\\\"form-row\\\">\\n                            <label>Objet</label>\\n                            <input minlength=\\\"6\\\"  #obj=\\\"ngModel\\\" [(ngModel)]=\\\"reunion.objet\\\" class=\\\"form-control mb-2\\\" type=\\\"text\\\" name=\\\"obj\\\"/>\\n                            </div>\\n                            <div class=\\\"form-row\\\">\\n                            <label >Membres presents</label>\\n                            <textarea [(ngModel)]=\\\"reunion.membres\\\" class=\\\"form-control\\\" name=\\\"membres\\\" rows=\\\"5\\\"></textarea>\\n                            </div>\\n                            <div class=\\\"form-row\\\">\\n                            <label class=\\\"mt-2\\\">Volet medical</label>\\n                            <textarea [(ngModel)]=\\\"reunion.volet_medical\\\"  class=\\\"form-control\\\" name=\\\"medic\\\" rows=\\\"16\\\"></textarea>\\n                            </div>\\n                            <div class=\\\"form-row\\\">\\n                            <label class=\\\"mt-2\\\">Volet commercial</label>\\n                            <textarea [(ngModel)]=\\\"reunion.volet_commercial\\\" class=\\\"form-control\\\" name=\\\"comm\\\"  rows=\\\"16\\\"></textarea> \\n                            </div>     \\n                            <div class=\\\"form-row\\\"> \\n                            <label class=\\\"mt-2\\\">Conclusion generale</label>\\n                            <textarea [(ngModel)]=\\\"reunion.conclusion_generale\\\" class=\\\"form-control\\\" name=\\\"comm\\\"  rows=\\\"5\\\"></textarea>    \\n                        </div>                                           \\n                            <div class=\\\"row mt-2\\\" >\\n                                <div class=\\\"col-12 float-right\\\">\\n                                    <button *ngIf=\\\"edition\\\" [disabled]=\\\"rform.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-warning float-right ml-2\\\" (click)=\\\"edit()\\\">Modifier</button>\\n                                    <button *ngIf=\\\"!edition\\\" [disabled]=\\\"rform.invalid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary float-right ml-2\\\" (click)=\\\"submit()\\\">Valider</button>\\n                                    <button type=\\\"reset\\\" (click)=\\\"cancelEdition()\\\" class=\\\"btn btn-danger float-right\\\">Réinitialiser</button>                          \\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>           \\n</div>\\n<h1 class=\\\"h3 mb-3\\\">Réunions précédantes</h1>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\">\\n                <h5 class=\\\"card-title\\\">Le {{date | date:'medium'}}</h5>\\n            </div>\\n                <div class=\\\"card-body\\\">\\n                    <table class=\\\"table table-striped \\\" [dtTrigger]=\\\"dtTrigger\\\" datatable\\n                    [dtOptions]=\\\"dtOptions\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Date</th>\\n                            <th>Objet</th>\\n                            <th>Emetteur</th>\\n                            <th></th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let r of reunions\\\">\\n                            <td>\\n                               {{r.createdAt | date : 'medium'}}\\n                            </td>\\n                            <td class=\\\"text-center\\\">{{r.objet}}</td>\\n                            <td> {{r.added_by}}</td>\\n                            <td class=\\\"text-center\\\"><button (click)=\\\"setEditable(r)\\\" class=\\\"btn btn-pill btn-primary\\\">modifier</button>\\n                                        <button  class=\\\"btn btn-pill btn-danger ml-2\\\" data-toggle=\\\"modal\\\" (click)=\\\"selectedReu = r\\\"\\n                                    data-target=\\\"#sizedModalSm\\\"><i class=\\\"fas fa-times\\\"></i></button>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                </div>\\n            </div>\\n</div>\\n\\n</div>\\n</div>\\n</main>\\n\\n<div class=\\\"modal fade\\\" *ngIf=\\\"selectedReu\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer le PV de réunion </h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer le PV de réunion portant sur {{selectedReu.objet}} enregistré le {{selectedReu.createdAt | date :'short'}}.</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteReunion()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- END  modal -->\\n\"","export default \"<div class=\\\"main\\\">\\n\\n    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <h1 class=\\\"h3 mb-3\\\">Advanced Inputs</h1>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-lg-5 col-xxl-6 d-flex\\\">\\n                    <div class=\\\"card flex-fill\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Select2</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">The jQuery replacement for select boxes.</h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"mb-3\\\">\\n                                <select class=\\\"form-control select2\\\" data-toggle=\\\"select2\\\">\\n                                    <optgroup label=\\\"Alaskan/Hawaiian Time Zone\\\">\\n                                        <option value=\\\"AK\\\">Alaska</option>\\n                                        <option value=\\\"HI\\\">Hawaii</option>\\n                                    </optgroup>\\n                                    <optgroup label=\\\"Pacific Time Zone\\\">\\n                                        <option value=\\\"CA\\\">California</option>\\n                                        <option value=\\\"NV\\\">Nevada</option>\\n                                        <option value=\\\"OR\\\">Oregon</option>\\n                                        <option value=\\\"WA\\\">Washington</option>\\n                                    </optgroup>\\n                                    <optgroup label=\\\"Mountain Time Zone\\\">\\n                                        <option value=\\\"AZ\\\">Arizona</option>\\n                                        <option value=\\\"CO\\\">Colorado</option>\\n                                        <option value=\\\"ID\\\">Idaho</option>\\n                                        <option value=\\\"MT\\\">Montana</option>\\n                                        <option value=\\\"NE\\\">Nebraska</option>\\n                                        <option value=\\\"NM\\\">New Mexico</option>\\n                                        <option value=\\\"ND\\\">North Dakota</option>\\n                                        <option value=\\\"UT\\\">Utah</option>\\n                                        <option value=\\\"WY\\\">Wyoming</option>\\n                                    </optgroup>\\n                                    <optgroup label=\\\"Central Time Zone\\\">\\n                                        <option value=\\\"AL\\\">Alabama</option>\\n                                        <option value=\\\"AR\\\">Arkansas</option>\\n                                        <option value=\\\"IL\\\">Illinois</option>\\n                                        <option value=\\\"IA\\\">Iowa</option>\\n                                        <option value=\\\"KS\\\">Kansas</option>\\n                                        <option value=\\\"KY\\\">Kentucky</option>\\n                                        <option value=\\\"LA\\\">Louisiana</option>\\n                                        <option value=\\\"MN\\\">Minnesota</option>\\n                                        <option value=\\\"MS\\\">Mississippi</option>\\n                                        <option value=\\\"MO\\\">Missouri</option>\\n                                        <option value=\\\"OK\\\">Oklahoma</option>\\n                                        <option value=\\\"SD\\\">South Dakota</option>\\n                                        <option value=\\\"TX\\\">Texas</option>\\n                                        <option value=\\\"TN\\\">Tennessee</option>\\n                                        <option value=\\\"WI\\\">Wisconsin</option>\\n                                    </optgroup>\\n                                    <optgroup label=\\\"Eastern Time Zone\\\">\\n                                        <option value=\\\"CT\\\">Connecticut</option>\\n                                        <option value=\\\"DE\\\">Delaware</option>\\n                                        <option value=\\\"FL\\\">Florida</option>\\n                                        <option value=\\\"GA\\\">Georgia</option>\\n                                        <option value=\\\"IN\\\">Indiana</option>\\n                                        <option value=\\\"ME\\\">Maine</option>\\n                                        <option value=\\\"MD\\\">Maryland</option>\\n                                        <option value=\\\"MA\\\">Massachusetts</option>\\n                                        <option value=\\\"MI\\\">Michigan</option>\\n                                        <option value=\\\"NH\\\">New Hampshire</option>\\n                                        <option value=\\\"NJ\\\">New Jersey</option>\\n                                        <option value=\\\"NY\\\">New York</option>\\n                                        <option value=\\\"NC\\\">North Carolina</option>\\n                                        <option value=\\\"OH\\\">Ohio</option>\\n                                        <option value=\\\"PA\\\">Pennsylvania</option>\\n                                        <option value=\\\"RI\\\">Rhode Island</option>\\n                                        <option value=\\\"SC\\\">South Carolina</option>\\n                                        <option value=\\\"VT\\\">Vermont</option>\\n                                        <option value=\\\"VA\\\">Virginia</option>\\n                                        <option value=\\\"WV\\\">West Virginia</option>\\n                                    </optgroup>\\n                                </select>\\n                            </div>\\n\\n                            <div class=\\\"mb-3\\\">\\n                                <select class=\\\"form-control select2\\\" data-toggle=\\\"select2\\\" multiple>\\n                                    <optgroup label=\\\"Alaskan/Hawaiian Time Zone\\\">\\n                                        <option value=\\\"AK\\\">Alaska</option>\\n                                        <option value=\\\"HI\\\">Hawaii</option>\\n                                    </optgroup>\\n                                    <optgroup label=\\\"Pacific Time Zone\\\">\\n                                        <option value=\\\"CA\\\">California</option>\\n                                        <option value=\\\"NV\\\">Nevada</option>\\n                                        <option value=\\\"OR\\\">Oregon</option>\\n                                        <option value=\\\"WA\\\">Washington</option>\\n                                    </optgroup>\\n                                    <optgroup label=\\\"Mountain Time Zone\\\">\\n                                        <option value=\\\"AZ\\\">Arizona</option>\\n                                        <option value=\\\"CO\\\">Colorado</option>\\n                                        <option value=\\\"ID\\\">Idaho</option>\\n                                        <option value=\\\"MT\\\">Montana</option>\\n                                        <option value=\\\"NE\\\">Nebraska</option>\\n                                        <option value=\\\"NM\\\">New Mexico</option>\\n                                        <option value=\\\"ND\\\">North Dakota</option>\\n                                        <option value=\\\"UT\\\">Utah</option>\\n                                        <option value=\\\"WY\\\">Wyoming</option>\\n                                    </optgroup>\\n                                    <optgroup label=\\\"Central Time Zone\\\">\\n                                        <option value=\\\"AL\\\">Alabama</option>\\n                                        <option value=\\\"AR\\\">Arkansas</option>\\n                                        <option value=\\\"IL\\\">Illinois</option>\\n                                        <option value=\\\"IA\\\">Iowa</option>\\n                                        <option value=\\\"KS\\\">Kansas</option>\\n                                        <option value=\\\"KY\\\">Kentucky</option>\\n                                        <option value=\\\"LA\\\">Louisiana</option>\\n                                        <option value=\\\"MN\\\">Minnesota</option>\\n                                        <option value=\\\"MS\\\">Mississippi</option>\\n                                        <option value=\\\"MO\\\">Missouri</option>\\n                                        <option value=\\\"OK\\\">Oklahoma</option>\\n                                        <option value=\\\"SD\\\">South Dakota</option>\\n                                        <option value=\\\"TX\\\">Texas</option>\\n                                        <option value=\\\"TN\\\">Tennessee</option>\\n                                        <option value=\\\"WI\\\">Wisconsin</option>\\n                                    </optgroup>\\n                                    <optgroup label=\\\"Eastern Time Zone\\\">\\n                                        <option value=\\\"CT\\\">Connecticut</option>\\n                                        <option value=\\\"DE\\\">Delaware</option>\\n                                        <option value=\\\"FL\\\">Florida</option>\\n                                        <option value=\\\"GA\\\">Georgia</option>\\n                                        <option value=\\\"IN\\\">Indiana</option>\\n                                        <option value=\\\"ME\\\">Maine</option>\\n                                        <option value=\\\"MD\\\">Maryland</option>\\n                                        <option value=\\\"MA\\\">Massachusetts</option>\\n                                        <option value=\\\"MI\\\">Michigan</option>\\n                                        <option value=\\\"NH\\\">New Hampshire</option>\\n                                        <option value=\\\"NJ\\\">New Jersey</option>\\n                                        <option value=\\\"NY\\\">New York</option>\\n                                        <option value=\\\"NC\\\">North Carolina</option>\\n                                        <option value=\\\"OH\\\">Ohio</option>\\n                                        <option value=\\\"PA\\\">Pennsylvania</option>\\n                                        <option value=\\\"RI\\\">Rhode Island</option>\\n                                        <option value=\\\"SC\\\">South Carolina</option>\\n                                        <option value=\\\"VT\\\">Vermont</option>\\n                                        <option value=\\\"VA\\\">Virginia</option>\\n                                        <option value=\\\"WV\\\">West Virginia</option>\\n                                    </optgroup>\\n                                </select>\\n                            </div>\\n\\n                            <div>\\n                                <select class=\\\"form-control select2\\\" data-toggle=\\\"select2\\\" multiple>\\n                                    <option value=\\\"one\\\">First</option>\\n                                    <option value=\\\"two\\\" disabled=\\\"disabled\\\">Second (disabled)</option>\\n                                    <option value=\\\"three\\\">Third</option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"col-12 col-lg-7 col-xxl-6 d-flex\\\">\\n                    <div class=\\\"card flex-fill\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Date Range Picker</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">Component for choosing date ranges, dates and times.</h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-12 col-xl-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">Date Range</label>\\n                                        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"daterange\\\" value=\\\"01/01/2018 - 01/15/2018\\\" />\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-12 col-xl-8\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">Date Range with Times</label>\\n                                        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"datetimes\\\" />\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-12 col-xl-4\\\">\\n                                    <div class=\\\"form-group mb-xl-0\\\">\\n                                        <label class=\\\"form-label\\\">Single Date Picker</label>\\n                                        <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"datesingle\\\" />\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"col-12 col-xl-8\\\">\\n                                    <div class=\\\"form-group mb-xl-0\\\">\\n                                        <label class=\\\"form-label\\\">Predefined Date Ranges</label>\\n                                        <div id=\\\"reportrange\\\" class=\\\"overflow-hidden form-control\\\">\\n                                            <i class=\\\"far fa-calendar\\\"></i>&nbsp;\\n                                            <span></span> <i class=\\\"fas fa-caret-down\\\"></i>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Date Time Picker</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">Date and time picker designed to integrate into your Bootstrap project.</h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-12 col-xl-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">Minimum Setup</label>\\n                                        <div class=\\\"input-group date\\\" id=\\\"datetimepicker-minimum\\\" data-target-input=\\\"nearest\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control datetimepicker-input\\\" data-target=\\\"#datetimepicker-minimum\\\" />\\n                                            <div class=\\\"input-group-append\\\" data-target=\\\"#datetimepicker-minimum\\\" data-toggle=\\\"datetimepicker\\\">\\n                                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">Time Only</label>\\n                                        <div class=\\\"input-group date\\\" id=\\\"datetimepicker-time\\\" data-target-input=\\\"nearest\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control datetimepicker-input\\\" data-target=\\\"#datetimepicker-time\\\" />\\n                                            <div class=\\\"input-group-append\\\" data-target=\\\"#datetimepicker-time\\\" data-toggle=\\\"datetimepicker\\\">\\n                                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-12 col-xl-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">Date Only</label>\\n                                        <div class=\\\"input-group date\\\" id=\\\"datetimepicker-date\\\" data-target-input=\\\"nearest\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control datetimepicker-input\\\" data-target=\\\"#datetimepicker-date\\\" />\\n                                            <div class=\\\"input-group-append\\\" data-target=\\\"#datetimepicker-date\\\" data-toggle=\\\"datetimepicker\\\">\\n                                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"form-label\\\">View Mode</label>\\n                                        <div class=\\\"input-group date\\\" id=\\\"datetimepicker-view-mode\\\" data-target-input=\\\"nearest\\\">\\n                                            <input type=\\\"text\\\" class=\\\"form-control datetimepicker-input\\\" data-target=\\\"#datetimepicker-view-mode\\\" />\\n                                            <div class=\\\"input-group-append\\\" data-target=\\\"#datetimepicker-view-mode\\\" data-toggle=\\\"datetimepicker\\\">\\n                                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar\\\"></i></div>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Input Masks</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">jQuery Plugin to make masks on form fields.</h6>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-12 col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Date</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"00/00/0000\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"DD/MM/YYYY\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Hour</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"00:00:00\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"HH:MM:SS\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Date & Hour</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"00/00/0000 00:00:00\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"DD/MM/YYYY HH:MM:SS\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>ZIP Code</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"00000-000\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"xxxxx-xxx\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Crazy Zip Code</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"0-00-00-00\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"x-xx-xx-xx\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Money</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"000.000.000.000.000,00\\\" data-reverse=\\\"true\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"Your money\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Money 2</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"#.##0,00\\\" data-reverse=\\\"true\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"#.##0,00\\\"</span>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-12 col-lg-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Telephone</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"0000-0000\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"xxxx-xxxx\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>Telephone with Code Area</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"(00) 0000-0000\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"(xx) xxxx-xxxx\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>US Telephone</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"(000) 000-0000\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"(xxx) xxx-xxxx\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>São Paulo Celphones</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"(00) 00000-0000\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"(xx) xxxxx-xxxx\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>CPF</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"000.000.000-00\\\" data-reverse=\\\"true\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"xxx.xxx.xxxx-xx\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>CNPJ</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"00.000.000/0000-00\\\" data-reverse=\\\"true\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"xx.xxx.xxx/xxxx-xx\\\"</span>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label>IP Address</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" data-mask=\\\"099.099.099.099\\\" data-reverse=\\\"true\\\">\\n                                        <span class=\\\"font-13 text-muted\\\">e.g \\\"xxx.xxx.xxx.xxx\\\"</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n        </div>\\n    </main>\\n\\n    <footer class=\\\"footer\\\">\\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"row text-muted\\\">\\n                <div class=\\\"col-6 text-left\\\">\\n                    <p class=\\\"mb-0\\\">\\n                        <a href=\\\"index-2.html\\\" class=\\\"text-muted\\\"><strong>AdminKit Demo</strong></a> &copy;\\n                    </p>\\n                </div>\\n                <div class=\\\"col-6 text-right\\\">\\n                    <ul class=\\\"list-inline\\\">\\n                        <li class=\\\"list-inline-item\\\">\\n                            <a class=\\\"text-muted\\\" href=\\\"#\\\">Support</a>\\n                        </li>\\n                        <li class=\\\"list-inline-item\\\">\\n                            <a class=\\\"text-muted\\\" href=\\\"#\\\">Help Center</a>\\n                        </li>\\n                        <li class=\\\"list-inline-item\\\">\\n                            <a class=\\\"text-muted\\\" href=\\\"#\\\">Privacy</a>\\n                        </li>\\n                        <li class=\\\"list-inline-item\\\">\\n                            <a class=\\\"text-muted\\\" href=\\\"#\\\">Terms</a>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    </footer>\\n</div>\"","export default \"<div class=\\\"modal fade\\\" id=\\\"sizedModalSm2\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">{{titre}}</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">{{contenu}}</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\">Ok</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<main class=\\\"content\\\">\\n    <div class=\\\"container-fluid p-0\\\">\\n        <a routerLink=\\\"/taches\\\" class=\\\"text-muted mb-2\\\"><i class=\\\"fas fa-fw fa-chevron-left\\\"></i>retour</a>\\n        <h1 class=\\\"h3 mb-3\\\"> Discussion</h1>\\n\\n        <div class=\\\"card\\\">\\n            <div *ngIf=\\\"!targetTask\\\" class=\\\"col-12 text-center mt-5 mb-5 \\\">\\n                <div class=\\\"px-4 d-none d-md-block\\\">\\n            <div  class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\">\\n                <span class=\\\"sr-only\\\">Loading...</span>\\n            </div>\\n            </div>\\n            </div>\\n            <div *ngIf=\\\"targetTask\\\" class=\\\"row no-gutters\\\">\\n               \\n                <div class=\\\"col-12 col-lg-5 col-xl-3 border-right\\\">\\n\\n                    <div class=\\\"px-4 d-none d-md-block mb-3 mt-5\\\">\\n                        <div class=\\\"media align-items-center\\\">\\n                            <div class=\\\"media-body\\\">\\n                               Tache : <strong>{{targetTask.nom_tache}}</strong> <br/>\\n                               Echéance : {{targetTask.date_echance}} <br/>\\n                               Rappel : {{targetTask.date_rappel}} <br/>\\n                              <span *ngIf=\\\"targetTask && targetTask.contenu\\\">Remarques : {{targetTask.contenu}}</span> \\n                            </div>\\n                        </div>\\n                    </div>\\n                    <a *ngFor=\\\"let todo of todos\\\" class=\\\"list-group-item list-group-item-action border-0\\\">\\n                        <div class=\\\"badge badge-success float-right\\\">{{todo.task_users[0].role}}</div>\\n                        <div class=\\\"media\\\">\\n                            <img [src]=\\\"todo.task_users[0].imageUrl ? todo.task_users[0].imageUrl : 'assets/img/default.png'\\\" (error)=\\\"todo.task_users[0].imageUrl = 'assets/img/default.png'\\\" class=\\\"rounded-circle mr-1\\\" alt=\\\"Vanessa Tucker\\\" width=\\\"40\\\" height=\\\"40\\\">\\n                            <div class=\\\"media-body ml-3\\\">\\n                                 {{todo.task_users[0].nom}} {{todo.task_users[0].prenom}}\\n                                <div class=\\\"small\\\"><span [ngClass]=\\\"todo.task_users[0].status === 'active' ? 'fas fa-circle chat-online' : 'fas fa-circle chat-offline' \\\"></span> {{todo.task_users[0].status}}</div>\\n                            </div>\\n                        </div>\\n                    </a>\\n                    <hr class=\\\"d-block d-lg-none mt-1 mb-0\\\" />\\n                </div>\\n                <div class=\\\"col-12 col-lg-7 col-xl-9\\\">\\n                    <div class=\\\"py-2 px-4 border-bottom d-none d-lg-block\\\">\\n                        <div class=\\\"media align-items-center py-1\\\">\\n                            <div class=\\\"media-body pl-3\\\">\\n                                <strong>Tache : {{targetTask.nom_tache}}</strong>\\n                                <div class=\\\"text-muted small\\\"><em>{{targetTask.isdone ? 'terminée' : 'en cours...'}}</em></div>\\n                            </div>\\n                            <div>\\n                                <button (click)=\\\"load()\\\" class=\\\"btn btn-primary border btn-sm px-3 mr-2\\\"><i class=\\\"fa fa-fw fa-redo\\\"></i></button>\\n                            </div>\\n                            <div>\\n                                <button (click)=\\\"updateTaskStatus()\\\" class=\\\"btn btn-light border btn-sm px-3\\\">Marquer comme terminé</button>\\n                                \\n                            </div>  \\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"position-relative\\\">\\n                        <div class=\\\"chat-messages p-4\\\">\\n                            <div *ngFor=\\\"let c of commentsList\\\">\\n                            <div *ngIf=\\\"c.emitter.email === connectedUser.email\\\" class=\\\"chat-message-right pb-4\\\" >\\n                                <div>\\n                                    <img [src]=\\\"c.emitter.imageUrl ? c.emitter.imageUrl : 'assets/img/default.png'\\\" (error)=\\\"c.emitter.imageUrl = 'assets/img/default.png'\\\" class=\\\"rounded-circle mr-1\\\" width=\\\"40\\\" height=\\\"40\\\">\\n                                    <div class=\\\"text-muted small text-nowrap mt-2\\\">{{c.createdAt | date :'short'}}</div>\\n                                </div>\\n                                <div class=\\\"flex-shrink-1 bg-light rounded py-2 px-3 mr-3\\\">\\n                                    <div class=\\\"font-weight-bold mb-1\\\">Vous</div>\\n                                    {{c.content}}\\n                                </div>\\n                                <button (click)=\\\"deleteMessage(c)\\\" class=\\\"btn btn-round btn-sm\\\">x</button>\\n                            </div>\\n\\n                            <div *ngIf=\\\"c.emitter.email !== connectedUser.email\\\" class=\\\"chat-message-left pb-4\\\">\\n                                <div>\\n                                    <img [src]=\\\"c.emitter.imageUrl ? c.emitter.imageUrl : 'assets/img/default.png'\\\" (error)=\\\"c.emitter.imageUrl = 'assets/img/default.png'\\\" class=\\\"rounded-circle mr-1\\\" width=\\\"40\\\" height=\\\"40\\\">\\n                                    <div class=\\\"text-muted small text-nowrap mt-2\\\">{{c.createdAt | date :'short'}}</div>\\n                                </div>\\n                                <div class=\\\"flex-shrink-1 bg-light rounded py-2 px-3 ml-3\\\">\\n                                    <div class=\\\"font-weight-bold mb-1\\\">{{c.emitter.nom}} {{c.emitter.prenom}}</div>\\n                                    {{c.content}}\\n                                </div>\\n                            </div> \\n                        </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"flex-grow-0 py-3 px-4 border-top\\\">\\n                        <div *ngIf=\\\"loading\\\" class=\\\"col-12 text-center mt-2 mb-2 \\\">\\n                            <div class=\\\"px-4 d-none d-md-block\\\">\\n                                <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\">\\n                                    <span class=\\\"sr-only\\\">Loading...</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <form *ngIf=\\\"!loading\\\" (submit)=\\\"tap()\\\">\\n                            <div class=\\\"input-group\\\">\\n                                <input [(ngModel)]=\\\"text\\\" name=\\\"txt\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Votre commentaire....\\\">\\n                                <div class=\\\"input-group-append\\\">\\n                                    <button type=\\\"submit\\\" (keydown.enter)=\\\"sendComment()\\\"\\n                                        [disabled]=\\\"text === '' || !text || text === null || text === undefined\\\" (click)=\\\"sendComment()\\\"\\n                                        class=\\\"btn btn-primary\\\">Envoyer</button>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</main>\"","export default \"\\n      <div class=\\\"card mr-3 ml-3\\\">\\n            <div class=\\\"card-header\\\">\\n                <div class=\\\"card-actions float-right\\\">\\n                    <div class=\\\"float-right mr-n2\\\">\\n                        <label class=\\\"custom-control custom-checkbox\\\">\\n                            <input (change)=\\\"updateTaskStatus()\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" [checked]=\\\"task.isdone\\\">\\n                            <span class=\\\"custom-control-label text-hide\\\">Checkbox</span>\\n                        </label>\\n                    </div>\\n                </div>\\n                <h5 class=\\\"card-title\\\">{{task.nom_tache}}</h5>\\n                <h6 class=\\\"card-subtitle badge badge-white\\\">date d'échéance : {{task.date_echance | date : 'dd/MM/yyyy'}} <br/> rappel : {{task.date_rappel | date : 'dd/MM/yyyy'}} <br>\\n               </h6> <br/>\\n               \\n            </div>\\n            <div class=\\\"card-body p-3\\\">\\n                <div id=\\\"tasks-upcoming\\\" *ngFor=\\\"let ut of UToftask\\\">\\n                    <div class=\\\"card mb-3 bg-light cursor-grab border\\\">\\n                        <div class=\\\"card-body p-3\\\">       \\n                            <p>{{ut.task_users[0].nom}} {{ut.task_users[0].prenom}}</p>\\n                            <div class=\\\"float-right mt-n1\\\">\\n                                <img [src]=\\\"ut.task_users[0].imageUrl ? ut.task_users[0].imageUrl: 'assets/img/default.png'\\\" (error)=\\\"ut.task_users[0].imageUrl = 'assets/img/default.png'\\\" width=\\\"32\\\" height=\\\"32\\\" class=\\\"rounded-circle\\\" alt=\\\"Avatar\\\">\\n                            </div>\\n                           <span [ngClass]=\\\"task.isdone == false ? 'btn btn-danger btn-sm' :'btn btn-success btn-sm' \\\">{{task.isdone ==true ? 'terminé' : 'en cours'}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                <div [ngClass]=\\\"connectedUser.role === 'admin'||connectedUser.role === 'superviseur' ? 'col-md-8' : 'col-md-12'\\\">\\n                    <button (click)=\\\"disscuss()\\\" class=\\\"btn btn-primary btn-block\\\">Discussion</button>\\n                </div>\\n                <div *ngIf=\\\"connectedUser.role === 'admin'||connectedUser.role === 'superviseur'\\\" class=\\\"col-md-4 text-center\\\">\\n                    <button (click)=\\\"deleteTask()\\\" data-target=\\\"#sizedModalSm\\\"  data-toggle=\\\"modal\\\"  class=\\\"btn btn-danger btn-block text-center\\\">X</button>\\n                </div>\\n        </div>\\n            </div>\\n        </div>\\n\"","export default \"    <main class=\\\"content\\\">\\n        <div class=\\\"container-fluid p-0\\\">\\n\\n            <button *ngIf=\\\"!showForm && (connectedUser.role === 'admin' || connectedUser.role === 'superviseur')\\\" (click)=\\\"showPanel()\\\" class=\\\"btn btn-primary float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-plus\\\"></i> Nouvelle tache</button>\\n            <button *ngIf=\\\"showForm && (connectedUser.role === 'admin' || connectedUser.role === 'superviseur')\\\" (click)=\\\"hidePanel()\\\" class=\\\"btn btn-danger float-right mt-n1\\\"><i\\n                    class=\\\"fas fa-times\\\"></i> Annuler</button>\\n            <h1 class=\\\"h3 mb-3\\\">Taches</h1>\\n            <!--form-->\\n            <div class=\\\"row\\\" *ngIf=\\\"showForm\\\">\\n                <div class=\\\"col-12\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header\\\">\\n                            <h5 class=\\\"card-title\\\">Ajouter une tache</h5>\\n                            <h6 class=\\\"card-subtitle text-muted\\\">informations générales</h6>\\n                            <!--    alert message    -->\\n                            <div *ngIf=\\\"addError\\\" class=\\\"alert alert-danger alert-dismissible\\\" role=\\\"alert\\\">\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                                    <span aria-hidden=\\\"true\\\">×</span>\\n                                </button>\\n                                <div class=\\\"alert-message\\\">\\n                                    <strong>Ajout echoué</strong> Veuillez réessayer ultérieurement, ou vérifiez vos\\n                                    champs.\\n                                </div>\\n                            </div>\\n                            <!--end alert-->\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <form #taskForm=\\\"ngForm\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-12 col-lg-12\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Titre</label>\\n                                            <input #title=\\\"ngModel\\\" minlength=\\\"3\\\" required\\n                                                [(ngModel)]=\\\"taskToAdd.nom_tache\\\" name=\\\"nom_tache\\\" type=\\\"text\\\"\\n                                                class=\\\"form-control\\\" placeholder=\\\"Nom de la tache...\\\">\\n                                            <span class=\\\"msg font-11\\\"\\n                                                *ngIf=\\\"title.touched && title.errors\\\">nom\\n                                                invalide*</span>\\n                                        </div>\\n                                        <div class=\\\"form-row\\\">\\n                                            \\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>date echéance</label>\\n                                                <input #date_e=\\\"ngModel\\\" required\\n                                                    [(ngModel)]=\\\"taskToAdd.date_echance\\\" name=\\\"date_e\\\"\\n                                                     type=\\\"date\\\"\\n                                                    class=\\\"form-control\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"date_e.touched && date_e.errors || (date_r.touched && date_e.touched && date_r.value > date_e.value)\\\">date\\n                                                    invalide*</span>\\n                                            </div>\\n                                            <div class=\\\"form-group col-md-6\\\">\\n                                                <label>date rappel</label>\\n                                                <input #date_r=\\\"ngModel\\\" required\\n                                                    [(ngModel)]=\\\"taskToAdd.date_rappel\\\" name=\\\"date_rappel\\\"\\n                                                     type=\\\"date\\\"\\n                                                    class=\\\"form-control\\\">\\n                                                <span class=\\\"msg font-11\\\" *ngIf=\\\"date_r.touched && date_r.errors || (date_r.touched && date_e.touched && date_r.value > date_e.value)\\\">date\\n                                                    invalide*</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-12 col-xl-12\\\" *ngIf=\\\"users().length === 0\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <button (click)=\\\"addUser()\\\" class=\\\"btn btn-pill btn-primary\\\"><i class=\\\"fas fa-fw fa-plus\\\"></i> Ajouter un délégué</button>\\n                                            </div>\\n                                        </div>\\n                                        <form [formGroup]=\\\"usersForm\\\">\\n                                            <div formArrayName=\\\"users\\\">\\n                                                <div class=\\\"row\\\" *ngFor=\\\"let d of users().controls; let i=index \\\" [formGroupName]=\\\"i\\\">\\n                                                    <div class=\\\"col-10 col-xl-10\\\">\\n                                                        <div class=\\\"form-group\\\">\\n                                                            <label>Délégué / animatrice </label>\\n                                                            <select (change)=\\\"updateList(data.value,i)\\\" #data formControlName=\\\"delege\\\" class=\\\"form-control select2\\\" name=\\\"deleg\\\">\\n                                                                <option value=\\\"null\\\" selected disabled> Veuillez choisir un délégué</option>\\n                                                                <option *ngFor=\\\"let p of deleges\\\" [ngValue]=\\\"p.id\\\"> {{p.nom}} {{p.prenom}}</option>\\n                                                            </select>\\n                                                        </div>\\n                                                    </div>\\n                                                    <div class=\\\"col-2 col-xl-2 mt-4\\\">\\n                                                        <button (click)=\\\"addUser()\\\" class=\\\"btn btn-pill btn-primary btn-sm\\\"><i class=\\\"fas fa-fw fa-plus\\\"></i></button>\\n                                                        <button (click)=\\\"deleteUser(i)\\\" class=\\\"btn btn-pill btn-danger btn-sm ml-2\\\"><i class=\\\"fas fa-fw fa-minus\\\"></i></button>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </form>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Fichier attaché </label>\\n                                            <input [(ngModel)]=\\\"taskToAdd.attached_file\\\" name=\\\"file\\\"\\n                                                class=\\\"form-control\\\"\\n                                                placeholder=\\\"lien du fichier à joindre...\\\"\\n                                                type=\\\"text\\\">\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label>Notes </label>\\n                                            <textarea [(ngModel)]=\\\"taskToAdd.contenu\\\" name=\\\"contenu\\\"\\n                                                class=\\\"form-control\\\"\\n                                                placeholder=\\\"Vos remarques, ou autres informations içi...\\\"\\n                                                rows=\\\"4\\\"></textarea>\\n                                        </div>\\n                                        <div class=\\\"form-row mt-3 float-right \\\">\\n                                            <div class=\\\"\\\">\\n                                                <button type=\\\"submit\\\" [disabled]=\\\"taskForm.invalid || users().length === 0 || (date_r.value > date_e.value) \\\"\\n                                                    (click)=\\\"submit(taskForm)\\\"\\n                                                    class=\\\"btn btn-primary btn-lg \\\">Enregistrer</button>\\n                                                <button type=\\\"reset\\\"\\n                                                    class=\\\"btn btn-danger btn-lg ml-2\\\">Réinitialiser</button>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    \\n\\n                                </div>\\n\\n                            </form>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--endform-->\\n            <div class=\\\"row\\\">\\n            <div class=\\\"input-group mb-3 col-md-4\\\" *ngIf=\\\"tasks\\\">\\n                <input type=\\\"text\\\" #content (keyup)=\\\"filterTasks(content.value)\\\" class=\\\"form-control\\\"\\n                 placeholder=\\\"Recherche\\\" aria-label=\\\"Search\\\">\\n            </div>\\n            <div class=\\\"input-group mt-2 col-md-4\\\" *ngIf=\\\"tasks\\\">\\n                <div class=\\\"form-group custom-control custom-switch\\\">\\n                    <input #vehicule=\\\"ngModel\\\" [(ngModel)]=\\\"done\\\"\\n                        name=\\\"vehicule\\\" type=\\\"checkbox\\\" class=\\\"custom-control-input\\\"\\n                        id=\\\"customSwitch2\\\" (change)=\\\"filterDoneTasks()\\\">\\n                    <label for=\\\"customSwitch2\\\" class=\\\"custom-control-label\\\">{{vehicule.value == true ? 'terminées' : 'tous'}}\\n                    </label>\\n                </div>\\n            </div>\\n        </div>\\n            <div class=\\\"row\\\">\\n                <div *ngIf=\\\"loading\\\" class=\\\"col-12 text-center mt-2 mb-2 \\\">\\n                    <div class=\\\"px-4 d-none d-md-block\\\">\\n                        <div class=\\\"spinner-border text-primary mr-2\\\" role=\\\"status\\\">\\n                            <span class=\\\"sr-only\\\">Chargement...</span>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"tasks.length == 0 && loading == false\\\" class=\\\"col-md-12\\\">\\n                <div class=\\\"alert alert-primary alert-outline alert-dismissible\\\" role=\\\"alert\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">×</span>\\n                    </button>\\n                    <div class=\\\"alert-icon\\\">\\n                        <i class=\\\"far fa-fw fa-bell\\\"></i>\\n                    </div>\\n                    <div class=\\\"alert-message\\\">\\n                        <strong>Pas de taches</strong>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n                <div *ngFor=\\\"let t of tasks | paginate: { itemsPerPage: 8, currentPage: p }\\\">\\n                    <div class=\\\"row\\\" *ngIf=\\\"connectedUser.role === 'admin' || connectedUser.role === 'superviseur'\\\">\\n                        <app-task-element (handleDeletion)=\\\"deleteIncomingTask($event)\\\" [task]=\\\"t\\\"></app-task-element>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"connectedUser.role === 'delege'\\\">\\n                        <app-task-element [task]=\\\"t.ut_tasks[0]\\\"></app-task-element>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row text-center\\\">\\n                <div class=\\\"col-12\\\">\\n                <pagination-controls nextLabel=\\\"Suivant\\\" previousLabel=\\\"Précedant\\\" (pageChange)=\\\"p = $event\\\"></pagination-controls>\\n            </div>\\n            </div>\\n        </div>\\n    </main>\\n<!--modal-->\\n<div class=\\\"modal fade\\\" *ngIf=\\\"selectedTask\\\" id=\\\"sizedModalSm\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\">Supprimer la tache </h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                    <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body m-3\\\">\\n                <p class=\\\"mb-0\\\">Etes vous sûr(e) de vouloir supprimer {{selectedTask.nom_tache}}.</p>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">annuler</button>\\n                <button type=\\\"button\\\"  (click)=\\\"deleteTask()\\\" class=\\\"btn btn-danger\\\">supprimer</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<nav class=\\\"navbar navbar-expand navbar-light navbar-bg\\\">\\n    <a class=\\\"sidebar-toggle d-flex\\\">\\n        <i class=\\\"hamburger align-self-center\\\"></i>\\n    </a>\\n\\n\\n    <div class=\\\"navbar-collapse collapse\\\">\\n        <ul class=\\\"navbar-nav navbar-align\\\">\\n            <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"nav-icon dropdown-toggle\\\" id=\\\"messagesDropdown\\\" (click)=\\\"loadMessages()\\\" data-toggle=\\\"dropdown\\\">\\n                    <div class=\\\"position-relative\\\">\\n                        <i class=\\\"align-middle far fa-fw fa-comments\\\"></i>\\n                        <span class=\\\"indicator\\\" *ngIf=\\\"messages.length > 0\\\">{{messages.length}}</span>\\n                    </div>\\n                </a>\\n                <div class=\\\"dropdown-menu dropdown-menu-lg dropdown-menu-right py-0\\\" aria-labelledby=\\\"messagesDropdown\\\">\\n                    <div class=\\\"dropdown-menu-header\\\">\\n                        <div class=\\\"position-relative\\\" *ngIf=\\\"messages.length > 1\\\">\\n                            {{messages.length}} Nouveaux Messages\\n                        </div>\\n                        <div class=\\\"position-relative\\\" *ngIf=\\\"messages.length == 0\\\">\\n                            rien à l'horizon\\n                        </div>\\n                        <div class=\\\"position-relative\\\" *ngIf=\\\"messages.length == 1\\\">\\n                            Un Nouveau Message\\n                        </div>\\n                    </div>\\n                    <div class=\\\"list-group\\\">\\n                        <a (click)=\\\"redirectToChat(m)\\\" class=\\\"list-group-item\\\" *ngFor=\\\"let m of messages\\\">\\n                            <div class=\\\"row no-gutters align-items-center\\\">\\n                                <div class=\\\"col-2\\\">\\n                                    <img [src]=\\\"m.sender.imageUrl ? m.sender.imageUrl : 'assets/img/default.png'\\\" (error)=\\\"m.sender.imageUrl = 'assets/img/default.png'\\\"  class=\\\"avatar img-fluid rounded-circle\\\" alt=\\\"Vanessa Tucker\\\">\\n                                </div>\\n                                <div class=\\\"col-10 pl-2\\\">\\n                                    <div class=\\\"text-dark\\\">{{m.sender.nom}} {{m.sender.prenom}}</div>\\n                                    <div class=\\\"text-muted small mt-1\\\"><span class=\\\"badge badge-primary\\\">{{m.subject.nom_tache}}</span></div>\\n                                    <div class=\\\"text-muted small mt-1\\\">{{m.contenu}}</div>\\n                                    <div class=\\\"text-muted small mt-1\\\">{{m.createdAt | date : 'short'}}</div>\\n                                </div>\\n                            </div>\\n                        </a>       \\n                    </div>\\n                    <div class=\\\"dropdown-menu-footer\\\">\\n                        <a routerLink=\\\"/tasks\\\" class=\\\"text-muted\\\">Voir toutes les tâches</a>\\n                    </div>\\n                </div>\\n            </li>\\n            <li class=\\\"nav-item dropdown\\\">\\n                <a class=\\\"nav-icon dropdown-toggle d-inline-block d-sm-none\\\" href=\\\"#\\\" data-toggle=\\\"dropdown\\\">\\n                    <i class=\\\"align-middle\\\" data-feather=\\\"settings\\\"></i>\\n                </a>\\n\\n                <a  *ngIf=\\\"user\\\" class=\\\"nav-link dropdown-toggle d-none d-sm-inline-block\\\" href=\\\"#\\\" data-toggle=\\\"dropdown\\\">\\n                    <img [src]=\\\"user.imageUrl ? user.imageUrl : 'assets/img/default.png'\\\" (error)=\\\"user.imageUrl = 'assets/img/default.png'\\\" class=\\\"avatar img-fluid rounded mr-1\\\" /> <span class=\\\"text-dark\\\" >{{user.prenom}} {{user.nom}}</span>\\n                </a>\\n                <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n                    <a class=\\\"dropdown-item\\\" routerLink=\\\"profile\\\"><i class=\\\"align-middle far fa-fw fa-user\\\"></i> Profile</a>\\n                    <a *ngIf=\\\"user.role == 'admin'\\\" class=\\\"dropdown-item\\\" routerLink=\\\"dashboard\\\"><i class=\\\"align-middle far fa-fw fa-chart-bar\\\"></i> Dashboard</a>\\n                    <div class=\\\"dropdown-divider\\\"></div>\\n                    <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">Se deconnecter</a>\\n                </div>\\n            </li>\\n        </ul>\\n    </div>\\n</nav>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \".msg{\\r\\n    color:rgb(220, 53, 69)\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tdXNlcnMtZWRpdC9hZG1pbi11c2Vycy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvYWRtaW4tdXNlcnMtZWRpdC9hZG1pbi11c2Vycy1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXNne1xyXG4gICAgY29sb3I6cmdiKDIyMCwgNTMsIDY5KVxyXG59Il19 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { Vehicule } from '../models/vehicule.model';\nimport { UserService } from '../services/user.service';\nimport { VehiculeService } from '../services/vehicule.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-admin-users-edit',\n  templateUrl: './admin-users-edit.component.html',\n  styleUrls: ['./admin-users-edit.component.css']\n})\nexport class AdminUsersEditComponent implements OnInit {\n  @Input() targetUser : User \n  cartToEdit : Vehicule \n  showSection : boolean = false\n  error : boolean  = false\n  isVisible : boolean = false\n  constructor(private userservice:UserService, private vehicleService : VehiculeService) { }\n\n  ngOnInit() {\n    if(this.targetUser){        \n      this.isVisible = true\n      this.vehicleService.getUserVehicle(this.targetUser.email).subscribe((res:Vehicule)=>{\n        if (res) this.cartToEdit = res\n        else this.cartToEdit = {} as Vehicule \n        setTimeout(()=>this.showSection = true , 2500)\n      },err => {\n        this.cartToEdit = {} as Vehicule \n      })\n    }\n  }\n  checkGender(s){\n    this.targetUser.sexe = s\n  }\n  updateUser(f:NgForm) {\n    if(this.targetUser && f.valid){\n      this.targetUser.vehicule = this.cartToEdit\n      this.userservice.updateUser(this.targetUser).subscribe((res)=>{\n        if(res) window.location.reload()\n      },err=>{\n        this.error = true\n      })\n    }\n  }\n  dismiss(){\n    setTimeout(\n    this.targetUser = null , 2000)\n  }\n}\n","export default \".msg{\\r\\n    color:rgb(220, 53, 69)\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4tdXNlcnMvYWRtaW4tdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi11c2Vycy9hZG1pbi11c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1zZ3tcclxuICAgIGNvbG9yOnJnYigyMjAsIDUzLCA2OSlcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { UserService } from '../services/user.service';\nimport { NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { Vehicule } from '../models/vehicule.model';\n\n@Component({\n  selector: 'app-admin-users',\n  templateUrl: './admin-users.component.html',\n  styleUrls: ['./admin-users.component.css']\n})\nexport class AdminUsersComponent implements OnInit {\n  error : boolean = false\n  deletionError : boolean = false\n\n  public data:User [] = [];\n  userToAdd : User = {} as User // form submission\n  carToAdd : Vehicule = {} as Vehicule\n  selectedUser : User = {} as User // for deletion\n  editableUser : User // for edition\n  connectedUser : User = {} as User\n  constructor(private userservice:UserService) {\n    userservice.getCurrentUser().subscribe((x:User)=>{\n      this.connectedUser = x\n    })\n   }\n\n  dtOptions: DataTables.Settings = {};\n  usersTrigger: Subject<User> = new Subject();\n  ngOnInit() {\n    this.userToAdd.type_contrat = 'type'\n    this.userToAdd.role='Role'\n    this.userToAdd.sexe = 'homme'\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive : true\n    };\n    this.userservice.getAllUsers().subscribe((data:User[])=>{\n      this.data = data\n      this.usersTrigger.next()\n    },err=>{\n      this.error = true\n    })\n    \n}\n  submit(f:NgForm){\n    if(f.valid && this.userToAdd){\n      this.userservice.addUser(this.userToAdd,this.carToAdd).subscribe(res=>{\n        window.location.reload()\n      },err=>{\n        this.error = true\n      })\n    }\n    else this.error = true\n  }\n  online(str){\n    return str == 'active' ? 'badge badge-success text-center ml-2' : 'badge badge-danger text-center ml-2'\n  }\n  roleClass(role){\n    return role == 'admin' ? 'badge badge-danger' : 'badge badge-warning'\n  }\n  etatCompte(input){\n    return input == false ? 'badge badge-danger text-center' : 'badge badge-success text-center'\n  }\n checkGender(s){\n   this.userToAdd.sexe = s\n }\n deleteUser(){\n   if(this.selectedUser){\n    this.userservice.deleteUser(this.selectedUser.id).subscribe(res=>{\n      window.location.reload()\n    },err=>{\n      this.deletionError = true\n    })\n   }\n }\n setEditableUser(user:User){\n   this.editableUser = null \n  this.editableUser = user\n }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SaisieFichesComponent } from './saisie-fiches/saisie-fiches.component';\nimport { HistoriqueFichesComponent } from './historique-fiches/historique-fiches.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AdminUsersComponent } from './admin-users/admin-users.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuardService } from './services/authguard.service';\nimport { ProductsComponent } from './products/products.component';\nimport { PacksComponent } from './packs/packs.component';\nimport { ClientPharmaciesComponent } from './client-pharmacies/client-pharmacies.component';\nimport { ClientGrossistesComponent } from './client-grossistes/client-grossistes.component';\nimport { CommandesComponent } from './commandes/commandes.component';\nimport { CommandesHistoriqueComponent } from './commandes-historique/commandes-historique.component';\nimport { ProductsVeillecComponent } from './products-veillec/products-veillec.component';\nimport { ProductsVeillecAdminComponent } from './products-veillec-admin/products-veillec-admin.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TaskDiscussionComponent } from './task-discussion/task-discussion.component';\nimport { ReunionsComponent } from './reunions/reunions.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { EvaluationsComponent } from './evaluations/evaluations.component';\nimport { RapportsComponent } from './rapports/rapports.component';\nimport { ProductsComparatorComponent } from './products-comparator/products-comparator.component';\nimport { RoleGuardService } from './services/roleguard.service';\nimport { PlanningComponent } from './planning/planning.component';\n\n\nconst routes: Routes = [\n  {path : 'dashboard' , component : DashboardComponent , canActivate : [RoleGuardService],data : {role : ['admin','superviseur']}},\n  {path : 'saisie-commandes', component : CommandesComponent, canActivate : [RoleGuardService],data : {role : ['admin','delege']}},\n  {path : 'historique-commandes', component : CommandesHistoriqueComponent, canActivate : [RoleGuardService],data : {role : ['admin','delege']}},\n  {path : 'profile', component : ProfileComponent, canActivate : [AuthGuardService]},\n  {path : 'users', component : AdminUsersComponent, canActivate : [RoleGuardService],data : {role : ['admin']}},\n  {path : 'products', component : ProductsComponent, canActivate : [RoleGuardService],data : {role : ['admin']}},\n  {path : 'packs', component : PacksComponent, canActivate : [RoleGuardService],data : {role : ['admin','delege']}},\n  {path : 'pharmacie-clients', component : ClientPharmaciesComponent, canActivate : [RoleGuardService],data : {role : ['admin','delege']}},\n  {path : 'grossiste-clients', component : ClientGrossistesComponent, canActivate :[RoleGuardService],data : {role : ['admin','delege']}},\n  {path : 'veille-concurentielle', component : ProductsVeillecComponent, canActivate : [RoleGuardService],data : {role : ['admin','delege']}},\n  {path : 'veille-concurentielle-admin', component : ProductsVeillecAdminComponent, canActivate :[RoleGuardService],data : {role : ['admin','delege']}},\n  {path : 'taches', component : TasksComponent, canActivate : [AuthGuardService]},\n  {path : 'discussion/:id', component : TaskDiscussionComponent, canActivate : [AuthGuardService]},\n  {path : 'reunions', component : ReunionsComponent, canActivate : [RoleGuardService],data : {role : ['admin']}},\n  {path : 'contacts', component : ContactsComponent, canActivate : [AuthGuardService]},\n  {path : 'evaluations', component : EvaluationsComponent, canActivate : [RoleGuardService],data : {role : ['admin','superviseur']}},\n  {path : 'rapports', component : RapportsComponent, canActivate : [RoleGuardService],data : {role : ['admin','superviseur']}},\n  {path : 'comparateur', component : ProductsComparatorComponent, canActivate : [RoleGuardService],data : {role : ['admin']}},\n  {path : 'planning' , component : PlanningComponent},\n  {path : 'login' , component : LoginComponent},\n  { path: '', component: DashboardComponent, canActivate : [RoleGuardService],data : {role : ['admin','superviseur']} },\n  {path : '**', redirectTo : ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".msg{\\r\\n    color:rgb(220, 53, 69)\\r\\n}\\r\\n.foot {\\r\\n    margin-top: 150px;\\r\\n    bottom: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtBQUNKO0FBQ0E7SUFDSSxpQkFBaUI7SUFDakIsU0FBUztBQUNiIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXNne1xyXG4gICAgY29sb3I6cmdiKDIyMCwgNTMsIDY5KVxyXG59XHJcbi5mb290IHtcclxuICAgIG1hcmdpbi10b3A6IDE1MHB4O1xyXG4gICAgYm90dG9tOiAwO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(public router : Router){\n  }\n  ngOnInit(): void {\n\n\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SaisieFichesComponent } from './saisie-fiches/saisie-fiches.component';\nimport { HistoriqueFichesComponent } from './historique-fiches/historique-fiches.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AdminUsersComponent } from './admin-users/admin-users.component';\nimport { TopbarComponent } from './topbar/topbar.component';\nimport {DataTablesModule} from 'angular-datatables';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuardService } from './services/authguard.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { SmallModalComponent } from './small-modal/small-modal.component';\nimport { AdminUsersEditComponent } from './admin-users-edit/admin-users-edit.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductItemComponent } from './product-item/product-item.component';\nimport { PacksComponent } from './packs/packs.component';\nimport { ClientPharmaciesComponent } from './client-pharmacies/client-pharmacies.component';\nimport { ClientGrossistesComponent } from './client-grossistes/client-grossistes.component';\nimport { CommandesComponent } from './commandes/commandes.component';\nimport { CommandesHistoriqueComponent } from './commandes-historique/commandes-historique.component';\nimport { CommandeProduitItemComponent } from './commande-produit-item/commande-produit-item.component';\nimport { ProductsVeillecComponent } from './products-veillec/products-veillec.component';\nimport { ProductsVeillecAdminComponent } from './products-veillec-admin/products-veillec-admin.component';\nimport { registerLocaleData, CommonModule } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { TaskElementComponent } from './task-element/task-element.component';\nimport { TaskDiscussionComponent } from './task-discussion/task-discussion.component';\nimport { LoadingBarRouterModule } from '@ngx-loading-bar/router';\nimport { LoadingBarModule } from '@ngx-loading-bar/core';\nimport { LoadingBarHttpClientModule } from '@ngx-loading-bar/http-client';\nimport { ReunionsComponent } from './reunions/reunions.component';\nimport {NgxPaginationModule} from 'ngx-pagination';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { EvaluationsComponent } from './evaluations/evaluations.component'; \nimport { ChartsModule } from 'ng2-charts';\nimport { RapportsComponent } from './rapports/rapports.component';\nimport { RapportFormComponent } from './rapport-form/rapport-form.component';\nimport { ProductsComparatorComponent } from './products-comparator/products-comparator.component';\nimport { RoleGuardService } from './services/roleguard.service';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PlanningComponent } from './planning/planning.component';\nimport { LOCALE_ID } from '@angular/core';\nimport { PlanningPopupComponent } from './planning-popup/planning-popup.component';\ndeclare var $ : any;\n\nregisterLocaleData(localeFr);\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    SaisieFichesComponent,\n    HistoriqueFichesComponent,\n    ProfileComponent,\n    AdminUsersComponent,\n    TopbarComponent,\n    LoginComponent,\n    FooterComponent,\n    SmallModalComponent,\n    AdminUsersEditComponent,\n    ProductsComponent,\n    ProductItemComponent,\n    PacksComponent,\n    ClientPharmaciesComponent,\n    ClientGrossistesComponent,\n    CommandesComponent,\n    CommandesHistoriqueComponent,\n    CommandeProduitItemComponent,\n    ProductsVeillecComponent,\n    ProductsVeillecAdminComponent,\n    TasksComponent,\n    TaskElementComponent,\n    TaskDiscussionComponent,\n    ReunionsComponent,\n    ContactsComponent,\n    EvaluationsComponent,\n    RapportsComponent,\n    RapportFormComponent,\n    ProductsComparatorComponent,\n    PlanningComponent,\n    PlanningPopupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataTablesModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LoadingBarRouterModule,\n    LoadingBarModule,\n    LoadingBarHttpClientModule,\n    NgxPaginationModule,\n    ChartsModule,\n    NgbModalModule,\n    CommonModule,\n    BrowserAnimationsModule,\n    CalendarModule.forRoot({ provide: DateAdapter, useFactory: adapterFactory })\n  ],\n  providers: [AuthGuardService,RoleGuardService,  { provide: LOCALE_ID, useValue: \"fr-FR\" }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudC1ncm9zc2lzdGVzL2NsaWVudC1ncm9zc2lzdGVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Client } from '../models/client.model';\nimport { ClientService } from '../services/client.service';\nimport { Subject } from 'rxjs';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-client-grossistes',\n  templateUrl: './client-grossistes.component.html',\n  styleUrls: ['./client-grossistes.component.css']\n})\nexport class ClientGrossistesComponent implements OnInit {\n  grossisteToAdd : Client = {} as Client\n  showForm : boolean = false\n  ajout : boolean = false\n  modification : boolean =false\n  listgr : Client [] = []\n  addError : boolean = false\n  selectedGrossiste : Client = {} as Client\n  // dt\n  dtOptions: DataTables.Settings = {};\n  trigger: Subject<Client> = new Subject();\n  deleges : User[] = []\n  constructor(private cliService : ClientService, private userv:UserService) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive : true\n    };\n    this.cliService.getAll('grossiste').subscribe((res : Client[])=>{\n      if(res){\n        this.listgr = res\n        this.trigger.next()\n      } \n    },err=>this.listgr = [])\n    this.userv.getAllDeleges().subscribe((res:User[])=>{\n      this.deleges = res\n    })\n  }\n  showPanel(){\n    this.modification = false\n    this.ajout = true\n    this.showForm = true\n    if(this.grossisteToAdd) this.grossisteToAdd = {} as Client\n  }\n  hidePanel(){\n    this.modification = false\n    this.ajout = true\n    this.showForm = false\n  }\n  submit(form){\n    if(form.valid && this.grossisteToAdd){\n      this.grossisteToAdd.type_client =\"grossiste\"\n      this.cliService.add(this.grossisteToAdd).subscribe(res=>{\n        if(res) {\n          window.location.reload()\n        }\n      },err => this.addError = true)\n    } \n  }\n  editGrossiste(grossite:Client){\n    this.grossisteToAdd = grossite\n    if(grossite.delegue) this.grossisteToAdd.delegue = grossite.delegue\n    this.ajout = false\n    this.modification = true\n    this.showForm = true\n  }\n  submitModif(form){\n    if(form.valid && this.grossisteToAdd){\n      this.cliService.edit(this.grossisteToAdd).subscribe(res=>{\n        if(res) {\n          window.location.reload()\n        }\n      },err => this.addError = true)\n    } \n  }\n  deleteSeller(){\n    if(this.selectedGrossiste){\n      this.cliService.delete(this.selectedGrossiste.id).subscribe((res)=>{\n        window.location.reload()\n      },err=>window.location.reload())\n    } \n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudC1waGFybWFjaWVzL2NsaWVudC1waGFybWFjaWVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Client } from '../models/client.model';\nimport { Subject } from 'rxjs';\nimport { ClientService } from '../services/client.service';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-client-pharmacies',\n  templateUrl: './client-pharmacies.component.html',\n  styleUrls: ['./client-pharmacies.component.css']\n})\nexport class ClientPharmaciesComponent implements OnInit {\n\n  pharmacieToAdd : Client = {} as Client\n  showForm : boolean = false\n  ajout : boolean = false\n  modification : boolean =false\n  addError:boolean = false\n  listgr : Client [] = []\n  error : boolean = false\n  selectedpharmacie : Client = {} as Client\n  // dt\n  dtOptions: DataTables.Settings = {};\n  trigger: Subject<Client> = new Subject();\n  deleges : User [] = []\n  constructor(private cliService : ClientService,private userv:UserService) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive : true\n    };\n    this.cliService.getAll('pharmacie').subscribe((res : Client[])=>{\n      if(res){\n        this.listgr = res\n        this.trigger.next()\n      } \n    },err=>this.listgr = [])\n    this.userv.getAllDeleges().subscribe((res:User[])=>{\n      this.deleges = res\n    })\n  }\n  showPanel(){\n    this.modification = false\n    this.ajout = true\n    this.showForm = true\n    if(this.pharmacieToAdd) this.pharmacieToAdd = {} as Client\n  }\n  hidePanel(){\n    this.modification = false\n    this.ajout = true\n    this.showForm = false\n  }\n  submit(form){\n    if(form.valid && this.pharmacieToAdd){\n      this.pharmacieToAdd.type_client =\"pharmacie\"\n      this.cliService.add(this.pharmacieToAdd).subscribe(res=>{\n        if(res) {\n          window.location.reload()\n        }\n      },err => this.addError = true)\n    } \n  }\n  editpharmacie(ph:Client){\n    this.pharmacieToAdd = ph\n    if(ph.delegue) this.pharmacieToAdd.delegue = ph.delegue\n    this.ajout = false\n    this.modification = true\n    this.showForm = true\n  }\n  submitModif(form){\n    if(form.valid && this.pharmacieToAdd){\n      this.cliService.edit(this.pharmacieToAdd).subscribe(res=>{\n        if(res) {\n          window.location.reload()\n        }\n      },err => this.error = true)\n    } \n  }\n  deleteSeller(){\n    if(this.selectedpharmacie){\n      this.cliService.delete(this.selectedpharmacie.id).subscribe((res)=>{\n        window.location.reload()\n      },err=>window.location.reload())\n    } \n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1hbmRlLXByb2R1aXQtaXRlbS9jb21tYW5kZS1wcm9kdWl0LWl0ZW0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-commande-produit-item',\n  templateUrl: './commande-produit-item.component.html',\n  styleUrls: ['./commande-produit-item.component.css']\n})\nexport class CommandeProduitItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1hbmRlcy1oaXN0b3JpcXVlL2NvbW1hbmRlcy1oaXN0b3JpcXVlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommandeService } from '../services/commande.service';\nimport { Commande } from '../models/commande.model';\nimport { Subject } from 'rxjs';\nimport { CommandeProduit } from '../models/commandeproduit.model';\nimport { Produit } from '../models/produit.model';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-commandes-historique',\n  templateUrl: './commandes-historique.component.html',\n  styleUrls: ['./commandes-historique.component.css']\n})\nexport class CommandesHistoriqueComponent implements OnInit {\n  commandes :Commande [] = []\n  constructor(private comserv:CommandeService, private userv:UserService) { }\n  dtOptions: DataTables.Settings = {};\n  trigger: Subject<Commande> = new Subject();\n  detailsCommande : CommandeProduit [] = []\n  selectedCommande : Commande\n  isPrinting : boolean = false\n  deletableInvoice : Commande\n  user:User = {} as User\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,  \n      processing: true,\n      responsive : true\n    };\n    this.userv.getCurrentUser().subscribe((user:any)=>{\n      if(user){\n        this.user = user\n        this.comserv.getAll().subscribe((res : Commande[])=>{\n          if(user.role === \"admin\"){\n            this.commandes = res\n          }\n          else{\n            this.commandes = res.filter(x=>x.emetteur.email === user.email)\n          }  \n            this.trigger.next()\n        })\n      }\n      \n    })\n    \n  }\n  loadInvoice(c:Commande){\n    this.selectedCommande = c\n    this.comserv.getProduitsOfCommande(c.id).subscribe((lignec:CommandeProduit[])=>{\n        this.detailsCommande = lignec\n    })\n  }\n  deleteInvoice(){\n    if(this.deletableInvoice){\n      this.comserv.delete(this.deletableInvoice.id).subscribe((r)=>{\n        window.location.reload()\n      })\n    }\n    \n  }\n  printPage(){\n    this.isPrinting = true\n    document.getElementById('x').style.display = \"none\"\n    document.getElementById('imp').style.display = \"none\"\n    let printContents = document.getElementById('print').innerHTML;\n     let originalContents = document.body.innerHTML;\n     document.body.innerHTML = printContents;\n     window.print();\n     document.body.innerHTML = originalContents;\n     window.location.reload()\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1hbmRlcy9jb21tYW5kZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../services/client.service';\nimport { Client } from '../models/client.model';\nimport { FormGroup, FormBuilder, FormArray, FormControl, Validators } from '@angular/forms';\nimport { ProductService } from '../services/product.service';\nimport { Produit } from '../models/produit.model';\nimport { Commande } from '../models/commande.model';\nimport { CommandeService } from '../services/commande.service';\nimport { Pack } from '../models/pack.model';\nimport { PackService } from '../services/pack.service';\nimport { PackProduit } from '../models/packproduit.model';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-commandes',\n  templateUrl: './commandes.component.html',\n  styleUrls: ['./commandes.component.css']\n})\nexport class CommandesComponent implements OnInit {\n\n  clients: Client[]\n  targetClient: any\n  commandeForm: FormGroup;\n  produits: Produit[] \n  totalTTC: number \n  totalReduction: number \n  totalQte: number \n  estimations: boolean\n  selectedPack: Pack\n  packs: Pack[] = []\n  isPanache : boolean\n  commandeToAdd: Commande = {} as Commande\n  prixpanacheActuel:number = 0\n  today:Date = new Date()\n  targetGrossiste : any\n  grossistes : Client []\n  constructor(private cliserv: ClientService,\n    private fb: FormBuilder, private prodserv: ProductService,\n    private comserv: CommandeService, private packserv: PackService,\n    private userservice: UserService) {\n    \n  }\n  ngOnInit() {\n    this.getTodayDate()\n    this.grossistes = []\n    this.targetClient = 0\n    this.targetGrossiste = 0\n    this.totalQte = 0\n    this.estimations = false\n    this.selectedPack = null\n    this.totalReduction = 0\n    this.totalQte = 0\n    this.totalTTC = 0\n    this.produits = []\n    this.packs= []\n    this.clients = []\n    this.commandeToAdd = {} as Commande\n    this.commandeForm = this.fb.group({\n      products: this.fb.array([]),\n    });\n    if (this.userservice.getLoggedOn()) {\n      this.userservice.getCurrentUser().subscribe((user: any) => {\n        this.cliserv.getAll('pharmacie').subscribe((ph: Client[]) => {\n          this.cliserv.getAll('grossiste').subscribe((g: Client[]) => {\n            this.prodserv.getAll().subscribe((p:Produit[])=>{\n              this.produits = p\n              this.grossistes = g\n               this.packserv.getAll().subscribe((packs: Pack[]) => {\n              this.packs = packs\n              if (user) {\n                if (user.role == 'admin') {\n                  this.clients = ph.concat(g)                 \n                }\n                else {\n                  let pharmacie, grossistes = null\n                  pharmacie = ph.filter(x => x.delegue.email === this.userservice.getLoggedOn().email)\n                  if (pharmacie) {\n                    this.clients = this.clients.concat(pharmacie)\n                  }\n                  grossistes = g.filter(x => x.delegue.email === this.userservice.getLoggedOn().email)\n                  if (grossistes) {\n                    this.clients = this.clients.concat(grossistes)\n                  }\n                }\n              }\n            })\n            })\n           \n          })\n        })\n      })\n    }\n  }\n  products(): FormArray {\n    return this.commandeForm.get(\"products\") as FormArray\n  }\n  getTodayDate(){\n    setInterval(()=>{\n      this.today = new Date()\n    },1000)\n  }\n  newProduct(): FormGroup {\n    return this.fb.group({\n      produit: new FormControl({}, Validators.required),\n      quantite: new FormControl(0, Validators.required),\n      reduction: new FormControl(0, Validators.required),\n      prixTTC: new FormControl({ value: 0, disabled: true }, Validators.required)\n    })\n  }\n\n  addProduct() {\n    if(this.isPanache && this.selectedPack){\n      if(this.selectedPack.prix_total > this.commandeToAdd.prix_total){\n        alert('vous avez dépassé la limite du pack')\n        return;\n      }else this.products().push(this.newProduct());\n    }else this.products().push(this.newProduct());\n  }\n\n  addProductWithValue(prod, qte, red, prix) {\n    this.products().push(this.fb.group({\n      produit: new FormControl(prod.id, Validators.required),\n      quantite: new FormControl(qte, Validators.required),\n      reduction: new FormControl(red, Validators.required),\n      prixTTC: new FormControl({ value: prix, disabled: true }, Validators.required)\n    }));\n  }\n  removeProduct(i: number) {\n    this.products().removeAt(i);\n    this.estimationTotal()\n  }\n  reset(){\n    this.ngOnInit()\n  }\n  submit() {\n    if (this.products() && this.commandeForm.valid) {\n      this.commandeToAdd.prix_total = this.totalTTC\n      this.commandeToAdd.total_remise = this.totalReduction\n      this.commandeToAdd.nb_produits = this.totalQte\n      this.commandeToAdd.client = this.targetClient\n      if (this.selectedPack) this.commandeToAdd.selectedPackId = this.selectedPack.id\n      this.comserv.add(this.commandeToAdd, this.products().value).subscribe((res) => {\n        if (this.selectedPack) {\n          this.packserv.updatePackSoldCount(this.selectedPack.id).subscribe((res) => {\n            window.location.reload()\n          })\n        } else window.location.reload()\n      })\n    }\n\n  }\n  calculRed(i,pttc) {\n    let line = this.products().at(i).value\n    let prod = line.produit\n    if(prod && line && line.reduction>=0 && line.quantite >=0){\n        let id = prod\n        let produit: Produit = this.produits.filter(x => x.id === id)[0]\n        const nprix = Number((produit.prix) - (produit.prix * (line.reduction / 100)))\n        this.products().at(i).value.prixTTC = nprix * line.quantite\n        pttc.value = nprix * line.quantite\n        this.estimationTotal()     \n    }  \n  }\n  estimationTotal() {\n    this.totalQte = 0\n    this.totalReduction = 0\n    this.totalTTC = 0\n    if(this.isPanache && this.selectedPack.type_pack === 'panache'){\n      let cumulp = 0\n      this.commandeForm.value.products.forEach(element => {\n        this.totalQte += element.quantite ? Number(element.quantite) : 0\n        let produitu: Produit = this.produits.filter(x => x.id === element.produit)[0]\n        const nprixu = Number(produitu.prix - (produitu.prix * (element.reduction / 100)))\n        cumulp += Number(nprixu * element.quantite)\n      });\n      this.prixpanacheActuel = cumulp\n      if(cumulp > this.selectedPack.prix_total){\n        alert('vous avez dépassé la limite du montant prescrit par le pack choisit.')\n        this.selectedPack = null\n        this.isPanache = false\n        this.estimationTotal()\n      }else{\n        this.estimations = true\n        this.totalQte = 0\n        this.totalReduction = 0\n        this.totalTTC = this.selectedPack.prix_total\n      }\n    }else {\n      this.isPanache = false\n      this.estimations = true\n      this.totalQte = 0\n      this.totalReduction = 0\n      this.totalTTC = 0\n      let nbprod = 0\n      this.commandeForm.value.products.forEach(element => {\n        this.totalQte += element.quantite ? Number(element.quantite) : 0\n        this.totalReduction += element.reduction ? Number(element.reduction) : 0\n        nbprod++\n        let produitu: Produit = this.produits.filter(x => x.id === element.produit)[0]\n        const nprixu = Number(produitu.prix - (produitu.prix * (element.reduction / 100)))\n        this.totalTTC += Number(nprixu * element.quantite)\n        \n      });\n      if(this.commandeToAdd.remise_total_grossite >=0 && this.targetClient.type_client === 'grossiste'){\n        this.totalTTC = this.totalTTC - (this.totalTTC * (this.commandeToAdd.remise_total_grossite / 100))\n      } \n      this.totalReduction = (Number(this.totalReduction) / nbprod)\n    }\n\n  }\n  loadPackage() {\n    if (this.targetClient.type_client == 'pharmacie') {\n      this.packserv.getProdPacks(this.selectedPack.id).subscribe((data: PackProduit[]) => {\n        if (data && this.selectedPack.type_pack == \"normal\") {\n          this.isPanache = false\n          this.products().controls = []\n          data.forEach(p => {\n            this.addProductWithValue(p.produits_packs[0], p.quantite, 0, Number(p.produits_packs[0].prix * p.quantite))\n          })\n        }else if (this.selectedPack.type_pack === 'panache'){\n          this.isPanache = true\n          this.products().controls = []\n          this.commandeForm.value.products = []\n        }  \n        this.estimationTotal()    \n        //this.totalTTC = this.selectedPack.prix_total\n      })\n    }\n  }\n  verifyPack() {\n    if (this.targetClient.type_client == 'grossiste') {\n      this.products().controls = []\n      this.isPanache = false\n      this.estimations = false\n      this.totalQte = 0\n      this.totalReduction = 0\n      this.totalTTC = 0\n      this.commandeToAdd.remise_total_grossite = 0\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3RzL2NvbnRhY3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Contact } from '../models/contact.model';\nimport { ContactService } from '../services/contact.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css']\n})\nexport class ContactsComponent implements OnInit {\n  options: DataTables.Settings = {};\n  trigger: Subject<Contact> = new Subject();\n  contacts:Contact [] =[]\n  contactToAdd:Contact = {} as Contact\n  contactForDetails : Contact\n  contactToDelete : Contact\n  ajout:boolean = false\n  modification : boolean = false\n  addError : boolean = false\n  loading:boolean = true\n  constructor(private contserv:ContactService) { }\n\n  ngOnInit() {\n    this.options = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive : true\n    };\n    setTimeout(()=>{\n      this.contserv.getAll().subscribe((c:Contact[])=>{\n        this.contacts = c\n        if(c.length > 0){\n          this.contactForDetails = c [0]\n          this.loading = false\n        }\n        if(c.length == 0){\n          this.ajout = true\n        }\n        this.trigger.next()       \n    })\n    },3000)\n    \n  }\n  addContact(f:NgForm){\n    if(f.valid && this.contactToAdd){\n        this.contserv.add(this.contactToAdd).subscribe((r)=>{\n          window.location.reload()\n    },err=>this.addError = true)\n    }  \n  }\n  updateContact(f:NgForm){\n    if(f.valid && this.contactToAdd){\n        this.contserv.update(this.contactToAdd).subscribe((r)=>{\n        window.location.reload()\n    })\n    }  \n  }\n  showDetails(c:Contact){\n    this.loading = true\n    setTimeout(()=>{\n      this.contactForDetails = c\n      this.loading = false\n    },2000)\n    \n  }\n  setContactForEdit(c:Contact){\n    this.contactToAdd = c\n    this.modification = true\n    if(this.ajout) this.ajout = false\n  }\n  setContact(c:Contact){\n    this.contactToDelete = c\n  }\n  deleteContact(){\n    if(this.contactToDelete){\n        this.contserv.delete(this.contactToDelete.id).subscribe((res)=>{\n        window.location.reload()\n    })\n    }  \n  }\n  cancelEditionOrAdd(){\n    this.ajout = false\n    this.modification = false\n    this.contactToAdd = {} as Contact\n  }\n  addNewContact(){\n    this.ajout = true\n    if(this.modification){\n      this.contactToAdd = {} as Contact\n      this.modification = false\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { StatService } from '../services/stats.service';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  public stats:any = {}\n  year : Date = new Date()\n   // chart\n   public lineChartData: ChartDataSets[] = [\n    {},\n  ];\n  public barChartData: ChartDataSets[] = [\n    {},\n  ];\n  public lineChartColors: Color[] = [\n    {   \n      borderColor: '#1269cb\"',\n      pointBackgroundColor: '#1269cb',\n      pointBorderColor: '#1269cb',\n      backgroundColor : 'white',\n      pointHoverBackgroundColor: '#1269cb',\n      pointHoverBorderColor: '#1269cb'\n    },\n  ];\n  public barChartColors: Color[] = [\n    {   \n      borderColor: '#1269cb\"',\n      pointBackgroundColor: '#1269cb',\n      pointBorderColor: '#1269cb',\n      backgroundColor : '#1269cb',\n      pointHoverBackgroundColor: '#1269cb',\n      pointHoverBorderColor: '#1269cb'\n    },\n  ];\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    maintainAspectRatio : false,  \n    scales: {\n      xAxes: [{}],\n      yAxes: [ {gridLines : {color : \"transparent\"}}]\n    },\n    legend: {\n      display: false\n    },\n    tooltips: {\n      intersect: false\n    },\n    hover: {\n      intersect: true\n    },\n    plugins: {\n      filler: {\n        propagate: false\n      }\n    },\n    annotation: {\n      annotations: [\n        {\n          type: 'line',\n          mode: 'vertical',\n          scaleID: 'x-axis-0',\n          value: 'March',\n          borderColor: 'orange',\n          borderWidth: 2,\n          label: {\n            enabled: true,\n            fontColor: 'orange',\n            content: 'LineAnno'\n          }\n        },\n      ],\n    },\n  };\n  public lineChartLabels: Label[] = [];\n  barChartLabels : Label[] = []\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\n  constructor(private uservice: UserService,private statserv:StatService) { }\n  \n  ngOnInit() {\n\n    this.statserv.getAll().subscribe((res:any)=>{\n      this.stats = res\n      let lineTab:any = []\n      if(res.bymonth.length > 0){\n        for (let index = 0; index < res.bymonth.length; index++) {\n          this.lineChartLabels.push(res.bymonth[index].month)\n          lineTab.push({ data: res.bymonth[index].sum, label: 'Ventes (TND)', fill : true})\n        }\n      }\n      else {\n        this.lineChartLabels.push('mois')\n        lineTab.push({data : 0, label: 'Ventes (TND)', fill : true})\n      }      \n      this.lineChartData = lineTab\n      let tabBar:any = []\n      if (res.bydeleg.length > 0) {\n        for (let index = 0; index < res.bydeleg.length; index++) {\n          this.barChartLabels.push(res.bydeleg[index].user)\n          tabBar.push({ data: res.bydeleg[index].nbc, label: 'Nombre commandes', fill: true })\n        }\n      } else {\n        this.barChartLabels.push('délégué')\n        tabBar.push({ data: 0, label: 'Ventes (TND)', fill: true })\n      }\n      this.barChartData = tabBar\n    })\n  \n}\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2YWx1YXRpb25zL2V2YWx1YXRpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Evaluation } from '../models/evaluation.model';\nimport { Subject } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { UserService } from '../services/user.service';\nimport { EvalService } from '../services/eval.service';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, BaseChartDirective, Label } from 'ng2-charts';\n@Component({\n  selector: 'app-evaluations',\n  templateUrl: './evaluations.component.html',\n  styleUrls: ['./evaluations.component.css']\n})\nexport class EvaluationsComponent implements OnInit {\n  ajout : boolean\n  modification : boolean\n  addError:boolean \n  loading:boolean\n  options: DataTables.Settings = {};\n  trigger: Subject<User> = new Subject();\n  users : User []\n  selectedDelegue:User\n  evaluations : Evaluation[]\n  evalToDelete : Evaluation\n  evalToAdd : Evaluation\n  loadUsers : boolean\n  noteDelegeTotal : number\n  // chart\n  public lineChartData: ChartDataSets[] = [\n    {},\n  ];\n  public lineChartColors: Color[] = [\n    {   \n      borderColor: '#1269cb\"',\n      pointBackgroundColor: '#1269cb',\n      pointBorderColor: '#1269cb',\n      backgroundColor : 'white',\n      pointHoverBackgroundColor: '#1269cb',\n      pointHoverBorderColor: '#1269cb'\n    },\n  ];\n  public lineChartOptions: (ChartOptions & { annotation: any }) = {\n    responsive: true,\n    maintainAspectRatio : true,  \n    scales: {\n      xAxes: [{}],\n      yAxes: [ {}]\n    },\n    legend: {\n      display: false\n    },\n    tooltips: {\n      intersect: false\n    },\n    hover: {\n      intersect: true\n    },\n    plugins: {\n      filler: {\n        propagate: false\n      }\n    },\n    annotation: {\n      annotations: [\n        {\n          type: 'line',\n          mode: 'vertical',\n          scaleID: 'x-axis-0',\n          value: 'March',\n          borderColor: 'orange',\n          borderWidth: 2,\n          label: {\n            enabled: true,\n            fontColor: 'orange',\n            content: 'LineAnno'\n          }\n        },\n      ],\n    },\n  };\n  public lineChartLabels: Label[] = [];\n  @ViewChild(BaseChartDirective, { static: true }) chart: BaseChartDirective;\n  constructor(private userv:UserService, private evalserv:EvalService) { }\n\n  ngOnInit() {\n    this.users = []\n    this.evaluations =[]\n    this.ajout = false\n    this.modification = false\n    this.addError = false\n    this.loading = true\n    this.loadUsers = true\n    this.noteDelegeTotal = 0\n    this.evalToAdd = {} as Evaluation\n    this.initReviewForm(this.evalToAdd)\n    this.options = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive : true\n    };\n    setTimeout(()=>{\n      this.userv.getAllDeleges().subscribe((res:User[])=>{\n      this.users = res\n      this.trigger.next()\n      this.loading = false\n      this.loadUsers = false\n    })\n    },1000)\n    \n  } \n  cancelEditionOrAdd(){\n    this.ajout = false\n    this.modification = false\n  }\n  initReviewForm(evalt:Evaluation){\n    evalt.administratif = 0\n    evalt.ciblage = 0\n    evalt.conaissance_concurrence = 0\n    evalt.conaissance_produit = 0\n    evalt.conclusion = 0\n    evalt.ecoute = 0\n    evalt.etablir_securite = 0\n    evalt.exp_orale = 0\n    evalt.feedback_prescrip = 0\n    evalt.gestuelle = 0\n    evalt.maitrise_clients = 0\n    evalt.maitrise_terrain = 0\n    evalt.mise_en_place = 0\n    evalt.nego_pack = 0 \n    evalt.note_globale = 0\n    evalt.observation = 0\n    evalt.plan_journee = 0\n    evalt.prop_voiture = 0\n    evalt.questionnement = 0\n    evalt.traitement_objections = 0\n    evalt.utilisation_mp = 0\n    evalt.presentation = 0\n  }\n  addReview(grForm:NgForm){\n    this.evalserv.add(this.evalToAdd,this.selectedDelegue.email).subscribe(res=>{\n      window.location.reload()\n    },err=>this.addError = true)\n  }\n  updateReview(grForm:NgForm){\n    this.evalserv.update(this.evalToAdd).subscribe(res=>{\n      window.location.reload()\n    },err=>this.addError = true)\n  }\n  showDetails(c){\n    this.loading = true\n    this.noteDelegeTotal = 0\n    let marks = []\n    let labels = []\n    this.lineChartData = []\n    this.lineChartLabels = []\n    this.evalserv.getEvalsOfdeleg(c.id).subscribe((res:Evaluation[])=>{\n        this.selectedDelegue = c \n        if(res.length > 0){\n          let n = 0        \n          res.forEach(element => {\n              n += element.note_globale\n              marks.push(element.note_globale)\n              labels.push(element.nom_sortie)\n          });\n          this.lineChartData =  [\n            { data: marks, label: 'Note', fill : true},\n          ];\n          this.lineChartLabels = labels\n          this.noteDelegeTotal = n / res.length\n        }  \n        this.evaluations = res\n        this.loading = false\n      })\n    \n  }\n  evaluer(){\n    this.evalToAdd = {} as Evaluation\n    this.initReviewForm(this.evalToAdd)\n    this.ajout = true\n    this.modification = false\n  }\n  calculMoy(){\n    this.evalToAdd.note_globale = (this.evalToAdd.administratif + this.evalToAdd.ciblage\n     + this.evalToAdd.conaissance_concurrence + this.evalToAdd.conaissance_produit \n     + this.evalToAdd.conclusion + this.evalToAdd.ecoute + this.evalToAdd.etablir_securite \n     + this.evalToAdd.exp_orale + this.evalToAdd.feedback_prescrip + this.evalToAdd.gestuelle \n     + this.evalToAdd.maitrise_clients + this.evalToAdd.maitrise_terrain \n     + this.evalToAdd.mise_en_place + this.evalToAdd.nego_pack + this.evalToAdd.observation\n     + this.evalToAdd.plan_journee + this.evalToAdd.prop_voiture + this.evalToAdd.questionnement\n     + this.evalToAdd.traitement_objections + this.evalToAdd.utilisation_mp + this.evalToAdd.presentation) / 20\n  }\n  editEval(ev){\n    this.evalToAdd = ev\n    this.ajout = false\n    this.modification = true\n  }\n  deleteEval(){\n    this.evalserv.delete(this.evalToDelete.id).subscribe((res)=>window.location.reload())\n  }\n  ngOnDestroy(): void {\n    this.trigger.unsubscribe();\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hpc3RvcmlxdWUtZmljaGVzL2hpc3RvcmlxdWUtZmljaGVzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-historique-fiches',\n  templateUrl: './historique-fiches.component.html',\n  styleUrls: ['./historique-fiches.component.css']\n})\nexport class HistoriqueFichesComponent implements OnInit {\n  public data = [\n    {name: 'therichpost', email: 'therichpost@gmail.com', website:'therichpost.com'},\n    {name: 'therichpost', email: 'therichpost@gmail.com', website:'therichpost.com'},\n    {name: 'therichpost', email: 'therichpost@gmail.com', website:'therichpost.com'},\n    {name: 'therichpost', email: 'therichpost@gmail.com', website:'therichpost.com'},\n];\n\n  constructor() { }\n\n  title = 'angulardatatables';\n  dtOptions: DataTables.Settings = {};\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true\n    };\n}\n\n\n}\n","export default \".msg{\\r\\n    color:rgb(220, 53, 69)\\r\\n}\\r\\n.background{\\r\\n    background-image: url('bg.png');\\r\\n}\\r\\n.white {\\r\\n    color : white;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0o7QUFDQTtJQUNJLCtCQUFnRDtBQUNwRDtBQUNBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXNne1xyXG4gICAgY29sb3I6cmdiKDIyMCwgNTMsIDY5KVxyXG59XHJcbi5iYWNrZ3JvdW5ke1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaW1nL2JnLnBuZycpO1xyXG59XHJcbi53aGl0ZSB7XHJcbiAgICBjb2xvciA6IHdoaXRlO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport {Router} from \"@angular/router\"  \n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email : string = null\n  password : string  = null\n  always : boolean = true\n  errors : boolean = false\n  constructor(private userservice:UserService,private router: Router) { }\n\n  ngOnInit() {\n    if(this.userservice.isAuthenticated()){\n      this.router.navigate(['/dashboard'])\n    }\n  }\n  login(){\n    if(this.email && this.password){\n      try{\n        this.userservice.login(this.email,this.password).subscribe((res:any)=>{\n        if(res && res.auth){\n          let user :any = {\n            token : res.token,\n            email : this.email,\n            role : res.role\n          }\n          if(this.always){     \n            localStorage.setItem('connected',JSON.stringify(user))\n          }\n          else sessionStorage.setItem('connected',JSON.stringify(user))\n          if(user.role === 'admin'){\n            this.router.navigate(['/dashboard'])\n          }else{\n            this.router.navigate(['/planning'])\n          }\n          \n        }else this.errors = true\n      },(err)=>{\n        this.errors = true\n      })}catch(e){\n        this.errors = true\n      }\n    }\n  }\n  check(){\n    this.always = !this.always\n  }\n}\n","export default \".none{\\r\\n    display: none;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ub25le1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user.model';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  user : User = {} as User\n  today : Date = new Date()\n  constructor(private router: Router, private userv:UserService) {\n   \n   }\n  ngOnInit() {\n    this.tick()\n    if(this.userv.getCurrentUser()){\n      this.userv.getCurrentUser().subscribe((res:any)=>{\n      this.user.nom = res.nom\n      this.user.prenom = res.prenom\n      this.user.role = res.role\n    })\n  }\n  }\n  tick(){\n    setInterval(()=>this.today = new Date(),1000)\n  }\n  isActiveTab(input){\n    if(this.router.url === input || this.router.url.endsWith(input)) return 'sidebar-item active'\n    else return 'sidebar-item'\n  }\n  goHome(){\n    if(this.user.role == 'admin'){\n      this.router.navigateByUrl('/dashboard')\n    }else{\n      this.router.navigateByUrl('/planning')\n\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhY2tzL3BhY2tzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NgForm, FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\nimport { Pack } from '../models/pack.model';\nimport { Produit } from '../models/produit.model';\nimport { ProductService } from '../services/product.service';\nimport { PackService } from '../services/pack.service';\nimport { PackProduit } from '../models/packproduit.model';\nimport { User } from '../models/user.model';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-packs',\n  templateUrl: './packs.component.html',\n  styleUrls: ['./packs.component.css']\n})\nexport class PacksComponent implements OnInit {\n  options: DataTables.Settings = {};\n  trigger: Subject<Pack> = new Subject();\n  showForm: boolean = false\n  addError: boolean = false\n  packToadd: Pack = {} as Pack\n  packForm: FormGroup;\n  produits: Produit[] = []\n  listPacks: Pack[] = []\n  selectedPack: Pack\n  PPOfselectedPack: PackProduit[] = []\n  selectedPackForDelete: Pack\n  user: User = {} as User\n  initialLoder: boolean\n  constructor(private fb: FormBuilder, private produitserv: ProductService, private packserv: PackService,\n    private userv: UserService) {\n    this.packForm = this.fb.group({\n      products: this.fb.array([]),\n    });\n\n  }\n\n  ngOnInit() {\n    this.packToadd.prix_total = 0\n    this.initialLoder = true\n    this.options = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive: true\n    };\n    this.userv.getCurrentUser().subscribe((u: User) => {\n      this.produitserv.getAll().subscribe((resl: Produit[]) => {\n        this.packserv.getAll().subscribe((packs: Pack[]) => {\n          this.user = u\n          this.produits = resl\n          this.listPacks = packs\n          this.initialLoder = false\n          this.trigger.next()\n        })\n      })\n    })\n\n  }\n  showPanel() {\n    this.showForm = true\n  }\n  hidePanel() {\n    this.showForm = false\n  }\n  submit(g: NgForm) {\n    if (g.valid && this.packForm.valid && this.packToadd) {\n      this.packserv.add(this.packToadd, this.packForm.value.products).toPromise().then((res) => {\n        window.location.reload()\n      }).catch(err => { this.addError = true })\n\n    }\n    else this.addError = true\n  }\n  products(): FormArray {\n    return this.packForm.get(\"products\") as FormArray\n  }\n\n  newProduct(): FormGroup {\n    return this.fb.group({\n      produit: new FormControl({}, Validators.required),\n      quantite: new FormControl({}, Validators.required),\n      gratuit: new FormControl(false, Validators.required),\n      prixUnitaire: new FormControl({ value: '0', disabled: true }, Validators.required)\n    })\n  }\n  addProduct() {\n    this.products().push(this.newProduct());\n  }\n\n  removeProduct(i: number) {\n    this.products().removeAt(i);\n    if (this.packForm.value.products[i]) this.packForm.value.products.splice(i, 1)\n    this.calculPrixTotal()\n  }\n  loadPrice(prod, qte, i) {\n    if (prod && qte && i >= 0) {\n      let id = Number(prod.substring(prod.indexOf(':') + 1, prod.length))\n      let produit: Produit = this.produits.filter(x => x.id === id)[0]\n      this.products().at(i).value.prixUnitaire = produit.prix\n      this.calculPrixTotal()\n      return Number(produit.prix * qte)\n    }\n    else return 0\n  }\n  calculPrixTotal() {\n    this.packToadd.prix_total = 0\n    for (const element of this.packForm.value.products) {\n      if (element.prixUnitaire == undefined && element.gratuit == false) {\n        element.prixUnitaire = this.produits.filter(x => x.id === element.produit)[0].prix\n      }\n      if (element.prixUnitaire >= 0 && element.quantite >= 0) {\n        this.packToadd.prix_total += Number(element.prixUnitaire) * Number(element.quantite)\n      }\n    }\n  }\n\n  setProductValue(i, prod, event) {\n    if (event.target.checked == true) {\n      this.products().at(i).value.prixUnitaire = 0\n      this.products().at(i).value.gratuit = true\n    }\n    else if (event.target.checked == false) {\n      let id = Number(prod.substring(prod.indexOf(':') + 1, prod.length))\n      let produit: Produit = this.produits.filter(x => x.id === id)[0]\n      this.products().at(i).value.prixUnitaire = produit.prix\n      this.products().at(i).value.gratuit = false\n    }\n    this.calculPrixTotal()\n  }\n  showPackDetails(pack: Pack) {\n    this.packserv.getProdPacks(pack.id).subscribe((res: PackProduit[]) => {\n      this.selectedPack = pack\n      this.PPOfselectedPack = res\n    })\n\n  }\n  deletePack() {\n    this.packserv.delete(this.selectedPackForDelete.id).subscribe(() => {\n      this.selectedPackForDelete = null\n      window.location.reload()\n    })\n  }\n  setPack(p) {\n    this.selectedPackForDelete = p\n  }\n  calculPourcentage() {\n    if (this.packToadd.pourcentage_unite_gratuites_grossiste >= 0 && this.packToadd.prix_total >= 0) {\n      this.packToadd.valeur_unite_gratuites_grossiste_ttc = ((this.packToadd.prix_total * (this.packToadd.pourcentage_unite_gratuites_grossiste / 100)))\n    } else {\n      this.packToadd.pourcentage_unite_gratuites_grossiste = 0\n      alert('pourcentage > 0')\n    }\n  }\n  calculPourcentageVD() {\n    if (this.packToadd.pourcentage_unite_gratuites_vd >= 0 && this.packToadd.prix_total >= 0) {\n      this.packToadd.valeur_unite_gratuites_vd_ttc = ((this.packToadd.prix_total * (this.packToadd.pourcentage_unite_gratuites_vd / 100)))\n    } else {\n      this.packToadd.pourcentage_unite_gratuites_vd = 0\n      alert('pourcentage > 0')\n    }\n  }\n}\n","export default \".left{\\r\\n    text-align: left;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxhbm5pbmctcG9wdXAvcGxhbm5pbmctcG9wdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3BsYW5uaW5nLXBvcHVwL3BsYW5uaW5nLXBvcHVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGVmdHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn0iXX0= */\"","import { Component, OnInit, Input, Output,EventEmitter } from '@angular/core';\nimport { Disponibilite } from '../models/disponibilite.model';\nimport { TaskService } from '../services/task.service';\nimport { User } from '../models/user.model';\ndeclare var $ : any;\n\n@Component({\n  selector: 'app-planning-popup',\n  templateUrl: './planning-popup.component.html',\n  styleUrls: ['./planning-popup.component.css']\n})\nexport class PlanningPopupComponent implements OnInit {\n  @Input() planning : Disponibilite \n  @Input() user : User\n  @Input() edit : boolean\n  @Output() source = new EventEmitter<string>();\n  constructor(private taskServ:TaskService) { }\n\n  ngOnInit() {\n  }\n  showModal(){\n    this.source.emit('new');\n    $('#centeredModalPrimary').modal('show')\n  }\n  hideModal(){    \n    $('#centeredModalPrimary').modal('hide')\n  }\n  addPlan(){\n    if(this.edit == false){\n      this.taskServ.addPlanning(this.planning,this.user.id).subscribe(res=>window.location.reload())\n    }\n    else{\n      this.taskServ.editPlanning(this.planning,this.user.id).subscribe(res=>window.location.reload())\n    }\n  }\n  deletePlan(){\n    if(confirm('êtes vous sûr(e) de vouloir supprimer ce planning ?')){\n      this.taskServ.deletePlanning(this.planning.id).subscribe(res=>window.location.reload())\n    }\n  }\n  emitOutput(){\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW5uaW5nL3BsYW5uaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { CalendarEvent, CalendarView } from 'angular-calendar';\nimport {\n  isSameMonth,\n  isSameDay,\n  startOfMonth,\n  endOfMonth,\n  startOfWeek,\n  endOfWeek,\n  startOfDay,\n  endOfDay,\n  format,\n} from 'date-fns';\nimport { Observable } from 'rxjs';\nimport { TaskService } from '../services/task.service';\nimport { Task } from '../models/task.model';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\nimport { environment } from 'src/environments/environment.prod';\nimport { Disponibilite } from '../models/disponibilite.model';\ndeclare var $ : any;\n\n\nfunction getTimezoneOffsetString(date: Date): string {\n  const timezoneOffset = date.getTimezoneOffset();\n  const hoursOffset = String(\n    Math.floor(Math.abs(timezoneOffset / 60))\n  ).padStart(2, '0');\n  const minutesOffset = String(Math.abs(timezoneOffset % 60)).padEnd(2, '0');\n  const direction = timezoneOffset > 0 ? '-' : '+';\n\n  return `T00:00:00${direction}${hoursOffset}:${minutesOffset}`;\n}\nconst colors: any = {\n  red: {\n    primary: '#ad2121',\n    secondary: '#FAE3E3',\n  },\n  blue: {\n    primary: '#1e90ff',\n    secondary: '#D1E8FF',\n  },\n  yellow: {\n    primary: '#e3bc08',\n    secondary: '#FDF1BA',\n  },\n  orange : {\n    primary : '#FFA500',\n    secondary : '#FFA500'\n  }\n};\n@Component({\n  selector: 'app-planning',\n  templateUrl: './planning.component.html',\n  styleUrls: ['./planning.component.css']\n})\nexport class PlanningComponent implements OnInit {\n  baseUrl : string = environment.backend.baseUrl;\n  view: CalendarView = CalendarView.Month;\n  CalendarView = CalendarView;\n  viewDate: Date = new Date();\n  user : User\n  events$: Observable<CalendarEvent<{ tasks: Task }>[]>;\n  activeDayIsOpen: boolean = false;\n  selectedPlanning : Disponibilite\n  edit : boolean = false // when editing a plan this becomes true\n  constructor(private http: HttpClient,private taskserv:TaskService,private userv:UserService) {}\n\n  ngOnInit(): void {\n    this.user = {} as User\n    this.selectedPlanning = {} as Disponibilite\n    this.fetchEvents();\n  }\n\n  fetchEvents(): void {\n    const getStart: any = {\n      month: startOfMonth,\n      week: startOfWeek,\n      day: startOfDay,\n    }[this.view];\n\n    const getEnd: any = {\n      month: endOfMonth,\n      week: endOfWeek,\n      day: endOfDay,\n    }[this.view];\n    this.userv.getCurrentUser().subscribe((user:User)=>{\n      this.user = user\n      this.events$ = this.taskserv.getAllPlannings(user.id)\n      .pipe(\n        map(( results: any[] ) => {\n          return results.map((result: any) => {\n            if(result.type == 'dispo'){\n              return {\n                start: new Date(result.date_debut),\n                end : new Date(result.date_fin),\n                title: result.user.nom+' '+result.user.prenom+' ('+result.user.role+') : '+ result.intitule  +' du '\n                +result.date_debut + ' au '+result.date_fin, \n                color: result.user.id == user.id ? colors.orange : colors.red,\n                allDay: true,\n                user : result.user.id,\n                meta : null,\n                plan : result\n              };\n            }\n            else{\n              return {\n                start: new Date(result.task.date_rappel),\n                end : new Date(result.task.date_echance),\n                title: result.user.nom+' '+result.user.prenom+' ('+result.user.role+') : '+ result.task.nom_tache, \n                color: result.user.id == user.id ? colors.yellow : colors.blue,\n                allDay: true,\n                meta : result.user.id,\n                user : result.user.id,\n                plan : null\n              };\n            }\n          });\n        })\n      ); \n  })\n  }\n\n  dayClicked({\n    date,\n    events,\n  }: {\n    date: Date;\n    events: CalendarEvent<{ task: Task }>[];\n  }): void {\n    if (isSameMonth(date, this.viewDate)) {\n      if (\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n        events.length === 0\n      ) {\n        this.activeDayIsOpen = false;\n      } else {\n        this.activeDayIsOpen = true;\n        this.viewDate = date;\n      }\n    }\n  }\n\n  eventClicked(event): void {\n    if(event.meta && (event.user == this.user.id || this.user.role == \"admin\" || this.user.role == \"superviseur\") ){\n      this.selectedPlanning = {} as Disponibilite\n      this.edit = false\n      window.open(\n        `https://gestionfarmavans.com/discussion/${event.meta}`,\n        '_blank'\n      );\n    }\n    else if (event.plan && (event.user == this.user.id || this.user.role == \"admin\" || this.user.role == \"superviseur\")){\n      this.selectedPlanning = event.plan\n      this.edit = true;\n      $('#centeredModalPrimary').modal('show');\n    }\n    \n  }\n  setView(view: CalendarView) {\n    this.view = view;\n  }\n\n  closeOpenMonthViewDay() {\n    this.activeDayIsOpen = true;\n  }\n  interceptEmit(event){\n    if(event == 'new'){\n      this.edit = false\n      this.selectedPlanning = {} as Disponibilite\n    }\n  }\n}\n","export default \".selected{\\r\\n    border: 1px solid darkblue;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdC1pdGVtL3Byb2R1Y3QtaXRlbS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMEJBQTBCO0FBQzlCIiwiZmlsZSI6InNyYy9hcHAvcHJvZHVjdC1pdGVtL3Byb2R1Y3QtaXRlbS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdGVke1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgZGFya2JsdWU7XHJcbn0iXX0= */\"","import { Component, OnInit, Input, Output,EventEmitter } from '@angular/core';\nimport { Produit } from '../models/produit.model';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.css']\n})\nexport class ProductItemComponent implements OnInit {\n@Input() product : Produit\n@Output() productOperation = new EventEmitter<any>()\nisSelected : boolean = false\n  constructor() { }\n\n  ngOnInit() {\n  }\n  deleteProduct(){\n    this.isSelected = true\n    this.productOperation.emit({product : this.product, 'op' : 'del'})\n  }\n  editProduct(){\n    this.isSelected = true\n    this.productOperation.emit({product : this.product , 'op' : 'edit'})\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzLWNvbXBhcmF0b3IvcHJvZHVjdHMtY29tcGFyYXRvci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Produit } from '../models/produit.model';\nimport { ProductService } from '../services/product.service';\nimport { VeilleService } from '../services/veille.service';\nimport { Veille } from '../models/veille.model';\n\n@Component({\n  selector: 'app-products-comparator',\n  templateUrl: './products-comparator.component.html',\n  styleUrls: ['./products-comparator.component.css']\n})\nexport class ProductsComparatorComponent implements OnInit {\n  items : Produit[] = []\n  origItems : Produit[] = [];\n  myProduct : Produit\n  targetMedic : string\n  veilles : Veille[] = []\n  @ViewChild('selectList', { static: false }) selectList: ElementRef;\n  constructor(private prodserv:ProductService, private veillecserv:VeilleService) { }\n\n  ngOnInit() {\n    this.prodserv.getAll().subscribe((res:Produit[])=>{\n      this.items = res\n      this.origItems = res\n    })\n  }\n  onChangeofOptions(opt){\n    if(this.myProduct){\n      this.veillecserv.getVeillesOfProduct(this.myProduct.id).subscribe((res:Veille[])=>{\n        this.veilles = res\n      })\n    }\n  }\n  filterItem(event) {\n    if (!event) {\n      this.items = this.origItems;\n    }\n    if (typeof event === 'string') {\n      this.items = this.origItems.filter(a => a.libelle.toLowerCase()\n        .startsWith(event.toLowerCase()));\n    }\n    this.selectList.nativeElement.size = this.items.length + 1;\n  } \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzLXZlaWxsZWMtYWRtaW4vcHJvZHVjdHMtdmVpbGxlYy1hZG1pbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Veille } from '../models/veille.model';\nimport { VeilleService } from '../services/veille.service';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-products-veillec-admin',\n  templateUrl: './products-veillec-admin.component.html',\n  styleUrls: ['./products-veillec-admin.component.css']\n})\nexport class ProductsVeillecAdminComponent implements OnInit {\n  dtOptions: DataTables.Settings = {};\n  trigger: Subject<Veille> = new Subject();\n  veilles : Veille [] = []\n  selectedVeille : Veille\n  selectedReview : Veille // delete\n  user:User = {} as User\n  resTable  = {}\n  constructor(private veilleserv:VeilleService,private userservice:UserService) { }\n  group(xs, key) {\n    return xs.reduce(function(rv, x) {\n      (rv[x[key]] = rv[x[key]] || []).push(x);\n      return rv;\n    }, {});\n  };\n  \n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive : true\n    };\n    if(this.userservice.getLoggedOn()){\n      this.userservice.getCurrentUser().subscribe((user:any)=>{\n      this.veilleserv.getAll().subscribe((res:Veille[])=>{\n        this.user = user\n        if(user.role === 'admin') this.veilles = res\n        else {\n          this.veilles = res.filter(x=>x.analyseur.email === user.email)\n        }\n      this.trigger.next()\n    })\n      })\n    }\n  }\n  showDetails(v){\n    this.selectedVeille = v\n  }\n  deleteReview(){\n    this.veilleserv.delete(this.selectedReview.id).subscribe(()=>window.location.reload())\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzLXZlaWxsZWMvcHJvZHVjdHMtdmVpbGxlYy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ProductService } from '../services/product.service';\nimport { Produit } from '../models/produit.model';\nimport { Veille } from '../models/veille.model';\nimport { VeilleService } from '../services/veille.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-products-veillec',\n  templateUrl: './products-veillec.component.html',\n  styleUrls: ['./products-veillec.component.css']\n})\nexport class ProductsVeillecComponent implements OnInit {\n  items : Produit[] = [];\n  origItems : Produit[] = [];\n  myProduct : Produit\n  targetMedic : string\n  @ViewChild('selectList', { static: false }) selectList: ElementRef;\n  veille : Veille = {} as Veille\n  constructor(private prodserv:ProductService, private veillecserv:VeilleService) { }\n\n  ngOnInit() {\n    this.prodserv.getAll().subscribe((res:Produit[])=>{\n      this.items = res\n      this.origItems = res\n    })\n  }\n  onChangeofOptions(newGov) {\n    this.veille.produit = this.myProduct\n  }\n  filterItem(event) {\n    if (!event) {\n      this.items = this.origItems;\n    }\n    if (typeof event === 'string') {\n      this.items = this.origItems.filter(a => a.libelle.toLowerCase()\n        .startsWith(event.toLowerCase()));\n    }\n    this.selectList.nativeElement.size = this.items.length + 1;\n  }      \n  submit(f:NgForm){\n    if(f.valid && this.veille && this.myProduct){\n      this.veillecserv.add(this.veille).subscribe(()=>{\n        window.location.reload()\n      },err=>window.location.reload())\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3RzL3Byb2R1Y3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Produit } from '../models/produit.model';\nimport { NgForm } from '@angular/forms';\nimport { ProductService } from '../services/product.service';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  productToAdd : Produit = {} as Produit\n  addError : boolean = false\n  showForm : boolean = false\n  products : Produit [] = []\n  modification : boolean = false\n  ajout : boolean = true\n  selectedProduct : Produit\n  p:number = 1\n  constructor(private prodServ : ProductService) { }\n\n  loadProducts(){\n\n  }\n  ngOnInit() {\n    this.prodServ.getAll().subscribe((res : Produit[])=>{\n      if(res) this.products = res\n    },err=>{\n      this.products = []\n    })\n  }\n  submit(f:NgForm){\n    if(f.valid && this.productToAdd){\n      this.prodServ.addProduct(this.productToAdd).subscribe((res)=>{\n        if(res) window.location.reload()\n      },error=>{\n        this.addError = true\n      } )\n    }\n  }\n  submitModif(f:NgForm){\n    if(f.valid && this.productToAdd){\n      this.prodServ.editProduct(this.productToAdd).subscribe((res)=>{\n        if(res) window.location.reload()\n      },error=>{\n        this.addError = true\n      } )\n    }\n  }\n  filterProducts(content){\n    if(content){\n      this.products = this.products.filter(x=>x.libelle.toLowerCase().indexOf(content.toLowerCase()) != -1 ||x.libelle.toLowerCase().includes(content.toLowerCase()))\n    }\n    else this.ngOnInit()\n  }\n  handleProductOp($event){\n    let resval = $event\n    if (resval.op == 'edit' && resval.product){\n      this.productToAdd = resval.product\n      this.modification = true\n      this.ajout = false\n      this.showForm = true\n    }else if(resval.op == 'del' && resval.product){\n      // delete\n      this.selectedProduct = resval.product\n    }\n  }\n  deleteProduct(){\n    if(this.selectedProduct){\n      this.prodServ.delete(this.selectedProduct.id).subscribe((res)=>window.location.reload(),err=>window.location.reload())\n    }\n  }\n  showPanel(){\n    this.modification = false\n    this.ajout = true\n    this.showForm = true\n    if(this.productToAdd) this.productToAdd = {} as Produit\n  }\n  hidePanel(){\n    this.modification = false\n    this.ajout = true\n    this.showForm = false\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user:User = {} as User\n  oldMdp : string\n  newMdp : string\n  confirmMdp : string\n  updatePwError : boolean\n  updateInfoPError : boolean\n  updateInfoError : boolean\n  constructor(private userv:UserService) {\n   }\n\n  ngOnInit() {\n    this.updatePwError = false\n    this.updateInfoPError = false\n    this.updateInfoError = false\n    this.userv.getCurrentUser().subscribe((r:User)=>{\n      this.user = r})\n  }\n  updateInfoPublique(){\n    this.userv.updateUser(this.user).subscribe((res:Response)=>{\n      if(res.status == 200) window.location.reload()\n      else this.updateInfoError = true\n    })\n  }\n  updatePw(){\n    if(this.oldMdp && this.newMdp && this.confirmMdp){\n      if(this.newMdp === this.confirmMdp){\n        this.userv.updateUserPW(this.confirmMdp).subscribe((res:Response)=>{\n          if(res.status === 200) window.location.reload()\n          else this.updatePwError = true\n        })\n      }\n      else this.updatePwError = true\n    }else this.updatePwError = true\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JhcHBvcnQtZm9ybS9yYXBwb3J0LWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Rapport } from '../models/rapport.model';\nimport { RapportService } from '../services/rapport.service';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\nimport { NgForm, FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-rapport-form',\n  templateUrl: './rapport-form.component.html',\n  styleUrls: ['./rapport-form.component.css']\n})\nexport class RapportFormComponent implements OnInit {\n  @Input() inputData : any\n  rapportToAdd : Rapport\n  delegues:User[]\n  ajout:boolean\n  modif : boolean\n  reviewForm: FormGroup;\n  deletableRows : any [] = []\n  addError : boolean = false\n  constructor(private fb:FormBuilder,private rapserv:RapportService, private userv:UserService) {\n    this.reviewForm = this.fb.group({\n      row: this.fb.array([]) ,\n    });\n   }\n\n  ngOnInit() {\n    this.delegues = []\n    if(this.inputData && this.inputData.op === 'modif' && this.inputData.rapport_delege){\n      this.ajout = false\n      this.modif = true\n      this.inputData.rapport_delege.forEach(elem=>{\n        this.report().push(this.newPopulatedRow(elem))\n      })\n    }else{\n        this.ajout = true\n        this.modif = false\n    }\n    if(this.inputData && this.inputData.report){\n      this.rapportToAdd = this.inputData.report\n    }  \n    if(!this.rapportToAdd){\n      this.rapportToAdd = {} as Rapport\n      this.rapportToAdd.type_rapport = null\n      this.rapportToAdd.jour_ferie = false\n      this.rapportToAdd.reunion = false\n    } \n    this.userv.getAllDeleges().subscribe((user:User[])=>{\n      this.delegues = user\n    })\n    \n  }\n  report() : FormArray {\n    return this.reviewForm.get(\"row\") as FormArray\n  }\n   \n  newRow(): FormGroup {\n    return this.fb.group({\n      idDelegue : new FormControl({},Validators.required),\n      manifestation: new FormControl(\"aucune\",Validators.required),\n      conges : new FormControl(false, Validators.required),\n      nb_jours_conges : new FormControl(0,Validators.required),\n      realise_obj_1 : new FormControl(0,Validators.required),\n      realise_obj_2 : new FormControl(0,Validators.required),\n      total_realise : new FormControl(0,Validators.required),\n      pharma_gro_realisees : new FormControl(null,Validators.required),\n      realise_ventes : new FormControl(0,Validators.required),\n      rapport_envoye : new FormControl(false,Validators.required),\n      respect_plan_tournee : new FormControl(false,Validators.required),\n      visite_detail : new FormControl(false,Validators.required),\n      promesse_packs : new FormControl(false,Validators.required),\n      respect_plan_charge : new FormControl(false,Validators.required),\n      remarques_pertinentes : new FormControl(false,Validators.required),\n      veille_c : new FormControl(false,Validators.required),\n      capture_ecran : new FormControl(false,Validators.required),\n      pourcentage_satisfaction : new FormControl(null,Validators.required),\n    })\n  } \n  newPopulatedRow(data) : FormGroup {\n    return this.fb.group({\n      id : new FormControl(data.id,Validators.required),\n      idDelegue : new FormControl(data.idDelegue,Validators.required),\n      manifestation: new FormControl(data.manifestation,Validators.required),\n      conges : new FormControl(data.conges, Validators.required),\n      nb_jours_conges : new FormControl(data.nb_jours_conges,Validators.required),\n      realise_obj_1 : new FormControl(data.realise_obj_1,Validators.required),\n      realise_obj_2 : new FormControl(data.realise_obj_2,Validators.required),\n      total_realise : new FormControl(data.total_realise,Validators.required),\n      pharma_gro_realisees : new FormControl(data.pharma_gro_realisees,Validators.required),\n      realise_ventes : new FormControl(data.realise_ventes,Validators.required),\n      rapport_envoye : new FormControl(data.rapport_envoye,Validators.required),\n      respect_plan_tournee : new FormControl(data.respect_plan_tournee,Validators.required),\n      visite_detail : new FormControl(data.visite_detail,Validators.required),\n      promesse_packs : new FormControl(data.promesse_packs,Validators.required),\n      respect_plan_charge : new FormControl(data.respect_plan_charge,Validators.required),\n      remarques_pertinentes : new FormControl(data.remarques_pertinentes,Validators.required),\n      veille_c : new FormControl(data.veille_c,Validators.required),\n      capture_ecran : new FormControl(data.capture_ecran,Validators.required),\n      pourcentage_satisfaction : new FormControl(data.pourcentage_satisfaction,Validators.required),\n    })\n  }\n  addRow() {\n    this.report().push(this.newRow());\n  }\n   \n  removeRow(i:number) {\n    if(this.modif){\n      this.deletableRows.push(this.report().at(i).value)\n    }\n    this.report().removeAt(i);\n  }\n  addReport(g:NgForm){\n    if(g.valid && this.report().value.length > 0 && this.rapportToAdd){\n      this.report().value.forEach(element => {\n      element.total_realise = element.realise_obj_1 + element.realise_obj_2\n    });\n    this.rapserv.add(this.rapportToAdd,this.report().value).subscribe((res)=>{\n      window.location.reload()\n    },err=>this.addError = true)\n    }\n    \n  }\n  editReport(g:NgForm){\n    if(g.valid && this.report().value.length > 0 && this.rapportToAdd){\n      this.report().value.forEach(element => {\n        element.total_realise = element.realise_obj_1 + element.realise_obj_2\n      });\n    this.rapserv.update(this.rapportToAdd,this.report().value,this.deletableRows).subscribe(d=>{\n      window.location.reload()\n    })\n  }\n  }\n  calculTotalObj(){\n    if(this.rapportToAdd.objectif_1 >=0 && this.rapportToAdd.objectif_2 >=0) this.rapportToAdd.objectif_total = this.rapportToAdd.objectif_1 + this.rapportToAdd.objectif_2\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JhcHBvcnRzL3JhcHBvcnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Rapport } from '../models/rapport.model';\nimport { RapportService } from '../services/rapport.service';\nimport { RapportDelegue } from '../models/rapportdelege.model';\n\n@Component({\n  selector: 'app-rapports',\n  templateUrl: './rapports.component.html',\n  styleUrls: ['./rapports.component.css']\n})\nexport class RapportsComponent implements OnInit {\n  dtOptions: DataTables.Settings = {};\n  trigger: Subject<Rapport> = new Subject();\n  selectedRapportToDelete : Rapport\n  selectedRapportToEdit : Rapport\n  input : any\n  rapports : Rapport[] \n  showForm:boolean\n  addError:boolean\n  constructor(private rapportservice:RapportService) { }\n\n  ngOnInit() {\n    this.rapports = []\n    this.showForm = false\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive : true\n    };\n    this.addError = false\n    this.rapportservice.getAll().subscribe((r:Rapport[])=>{\n      this.rapports = r\n      this.trigger.next()\n    })\n  }\n  deleteReport(){\n    this.rapportservice.delete(this.selectedRapportToDelete.id).subscribe((res)=>window.location.reload())\n  }\n  showPanel(){\n    this.input  = {\n      report :  null,\n      op : 'add'\n    }\n    this.showForm = true\n  }\n  hidePanel(){\n    this.showForm = false\n  }\n  editReport(g){\n    this.rapportservice.getRdOfRapport(g.id).subscribe((res:RapportDelegue)=>{\n      this.input  = {\n        report :  g,\n        rapport_delege : res,\n        op : 'modif'\n      }\n      this.showForm = true\n    })\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JldW5pb25zL3JldW5pb25zLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Reunion } from '../models/reunion.model';\nimport { ReunionService } from '../services/reunion.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-reunions',\n  templateUrl: './reunions.component.html',\n  styleUrls: ['./reunions.component.css']\n})\nexport class ReunionsComponent implements OnInit {\n  date : number = Date.now()\n  reunion : Reunion = {} as Reunion\n  showForm : boolean = true\n  reunions : Reunion [] = []\n  selectedReu : Reunion \n  edition : boolean = false\n  dtOptions: DataTables.Settings = {};\n  dtTrigger: Subject<Reunion> = new Subject();\n  constructor(private rserv:ReunionService) { }\n\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 5,\n      processing: true,\n      responsive : true\n    };\n    this.rserv.getAll().subscribe((x:Reunion[])=>{\n      this.reunions = x\n      this.dtTrigger.next()\n    })\n  }\n  submit(){\n    this.rserv.add(this.reunion).subscribe(d=>{\n      window.location.reload()\n    })\n  }\n  edit(){\n    this.rserv.update(this.reunion).subscribe(d=>{\n      window.location.reload()\n    })\n  }\n  setEditable(r){\n    this.edition = true\n    this.reunion = r\n  }\n  cancelEdition(){\n    this.edition = false\n    this.reunion = {} as Reunion\n  }\n\n  deleteReunion(){\n    this.rserv.delete(this.selectedReu.id).subscribe(d=>{\n      window.location.reload()\n    })\n  }\n  \n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NhaXNpZS1maWNoZXMvc2Fpc2llLWZpY2hlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-saisie-fiches',\n  templateUrl: './saisie-fiches.component.html',\n  styleUrls: ['./saisie-fiches.component.css']\n})\nexport class SaisieFichesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { UserService } from './user.service';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor(public auth: UserService, public router: Router) {}\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n    return true \r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Client } from '../models/client.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n\r\n  add(client:Client){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(client && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addClient',{client : client},options)\r\n    }\r\n    return null\r\n  }\r\n  edit(client:Client){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(client && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editClient',{client : client},options)\r\n    }\r\n    return null\r\n  }\r\n  getAll(type){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/allClients?type='+type,options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteClient',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Client } from '../models/client.model';\r\nimport { Commande } from '../models/commande.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommandeService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n\r\n  add(commande:Commande, produits:Produit[]){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(commande && produits && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addCommande',{commande : commande , produits : produits , emetteur : connnectedUser.email},options)\r\n    }\r\n    return null\r\n  }\r\n  getProduitsOfCommande(id:number){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id  && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getCommandesProducts',{commande : id },options)\r\n    }\r\n    return null\r\n  }\r\n  edit(client:Client){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(client && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editClient',{client : client},options)\r\n    }\r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getAllCommandes',options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteCommande',{commandeId : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n\r\n  add(comment:string, taskid:number){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(comment && taskid && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addComment',{comment : comment , user : connnectedUser.email , task : taskid},options)\r\n    }       \r\n    return null\r\n  }\r\n  edit(comm:Comment){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(comm && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editComment',{comment : comm},options)\r\n    }\r\n    return null\r\n  }\r\n  getCommentsOfTask(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getCommentsOfTask',{task : id},options)\r\n    }\r\n    return null\r\n  }\r\n\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteComment',{comment : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Task } from '../models/task.model';\r\nimport { User } from '../models/user.model';\r\nimport { Reunion } from '../models/reunion.model';\r\nimport { Contact } from '../models/contact.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n  add(reun:Contact){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(reun &&   connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addContact',{contact : reun , email:connnectedUser.email},options)\r\n    }       \r\n    return null\r\n  }\r\n  update(contact){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(contact && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/updateContact',{contact : contact},options)\r\n    }       \r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getAllContacts',options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteContact',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\n\r\nimport { Evaluation } from '../models/evaluation.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EvalService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n  getEvalsOfdeleg(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getEvalsOfdeleg',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n  add(evaluation:Evaluation,email){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(eval &&   connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addEval',{eval : evaluation , email: email},options)\r\n    }       \r\n    return null\r\n  }\r\n  update(evaluation){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(evaluation && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editEval',{evaluation : evaluation},options)\r\n    }       \r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getAllEvals',options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteEval',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Task } from '../models/task.model';\r\nimport { User } from '../models/user.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n  get(email){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getNotificationsOfUser',{email : email},options)\r\n    }\r\n    return null\r\n  }\r\n  add(content:string, title:string , targetsId :number[], sender, taskId){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(content && title && targetsId && sender && taskId &&   connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addNotif',{notif : {content : content , title : title}\r\n       , targets : targetsId , sender : sender , taskId : taskId},options)\r\n    }       \r\n    return null\r\n  }\r\n  updateSeen(email){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(email && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/updateNotif',{email : email},options)\r\n    }       \r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getAllTasks',{email : connnectedUser.email},options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteNotif',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Pack } from '../models/pack.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PackService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n\r\n  add(pack:Pack , produits :Produit[]){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(pack && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addPack',{pack : pack , produits : produits},options)\r\n    }       \r\n    return null\r\n  }\r\n  edit(product:Produit){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(product && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editProduct',{produit : product},options)\r\n    }\r\n    return null\r\n  }\r\n  getProdPacks(id:number){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getProdPacks',{pack : id},options)\r\n    }\r\n    return null\r\n  }\r\n  updatePackSoldCount(id:number){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/incrementPackSold',{pack : id},options)\r\n    }\r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getPacks',options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deletePack',{packId : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n\r\n  addProduct(product:Produit){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(product && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addProduct',{produit : product},options)\r\n    }\r\n    return null\r\n  }\r\n  editProduct(product:Produit){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(product && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editProduct',{produit : product},options)\r\n    }\r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/allProducts',options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteProduct',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Contact } from '../models/contact.model';\r\nimport { Rapport } from '../models/rapport.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RapportService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n  getRdOfRapport(rapport){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(rapport &&   connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getRDOfrapport',{report : rapport},options)\r\n    }       \r\n    return null\r\n  }\r\n  add(rapport:Rapport,rapport_data){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(rapport && rapport_data &&   connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addRapport',{rapport : rapport, rapport_data : rapport_data , email:connnectedUser.email},options)\r\n    }       \r\n    return null\r\n  }\r\n  update(rapport:Rapport,rapport_data,deletableRows){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(rapport && rapport_data && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editRapport',{rapport : rapport, rapport_data : rapport_data , \r\n        deletable : deletableRows,email:connnectedUser.email},options)\r\n    }       \r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getAllRapports',options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteRapport',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Task } from '../models/task.model';\r\nimport { User } from '../models/user.model';\r\nimport { Reunion } from '../models/reunion.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReunionService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n  add(reun:Reunion){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(reun &&   connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addReun',{reunions : reun , email:connnectedUser.email},options)\r\n    }       \r\n    return null\r\n  }\r\n  update(reunion){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(reunion && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/updateReun',{reun : reunion},options)\r\n    }       \r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getAllReun',options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteReun',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { UserService } from './user.service';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable()\r\nexport class RoleGuardService implements CanActivate {\r\n    constructor(public auth: UserService, public router: Router) { }\r\n    canActivate(activatedRoute: ActivatedRouteSnapshot): boolean {\r\n        if (!this.auth.isAuthenticated()) {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n        let bool = false\r\n        let u = this.auth.getLoggedOn().role\r\n        if (activatedRoute.data.role &&\r\n            activatedRoute.data.role.indexOf(u) === -1) {\r\n            this.router.navigate(['/login']);\r\n            bool = false\r\n        }\r\n        else bool = true\r\n        return bool\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Task } from '../models/task.model';\r\nimport { User } from '../models/user.model';\r\nimport { Reunion } from '../models/reunion.model';\r\nimport { Contact } from '../models/contact.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getStats',options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Task } from '../models/task.model';\r\nimport { User } from '../models/user.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n  get(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getTask',{task : id},options)\r\n    }\r\n    return null\r\n  }\r\n  add(task:Task , users :User[]){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(task && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addTask',{task : task , users : users},options)\r\n    }       \r\n    return null\r\n  }\r\n  edit(product:Produit){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(product && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editProduct',{produit : product},options)\r\n    }\r\n    return null\r\n  }\r\n  getUTOFtask(id:number){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getUTOfTask',{task : id},options)\r\n    }\r\n    return null\r\n  }\r\n  getTasksOfUser(id:number){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getTasksOfUser',{user : id},options)\r\n    }\r\n    return null\r\n  }\r\n  updateTaskStatus(id:number,status:boolean){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/updateTaskstatus',{id : id , state : status},options)\r\n    }\r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getAllTasks',options)\r\n    }\r\n    return null\r\n  }\r\n  getAllPlannings(iduser) : Observable<any> {\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"JWT \"+connnectedUser.token });\r\n    let options = { headers: headers };\r\n    return this.http.get(this.baseUrl+'/getPlannings/'+iduser,options)\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteTask',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n  addPlanning(planning, userid){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(userid && planning && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addPlanning',{planning : planning , user : userid},options)\r\n    }       \r\n    return null\r\n  }\r\n  editPlanning(planning, userid){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(userid && planning && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/updatePlanning',{planning : planning , user : userid},options)\r\n    }       \r\n    return null\r\n  }\r\n  deletePlanning(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deletePlanning',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n  getDisponibilitesForSimpleUser(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"JWT \"+connnectedUser.token });\r\n    let options = { headers: headers };\r\n    return this.http.get(this.baseUrl+'/getUserPlanning',options)\r\n  }\r\n  getDisponibilitesForAdmin(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    let headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': \"JWT \"+connnectedUser.token });\r\n    let options = { headers: headers };\r\n    return this.http.get(this.baseUrl+'/getAdminPlanning',options)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from '../models/user.model';\r\nimport { Vehicule } from '../models/vehicule.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  baseUrl : string = environment.backend.baseUrl;\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getLoggedOn(){\r\n    return localStorage.getItem('connected') ? JSON.parse(localStorage.getItem('connected')) : JSON.parse(sessionStorage.getItem('connected'))\r\n  }\r\n  login(email,password){\r\n    return this.http.post(this.baseUrl+'/login',{email : email,password : password})\r\n  }\r\n  logout(){\r\n    let user :any = this.getLoggedOn()\r\n    if(user){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+user.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/logout',{email : user.email},options)\r\n    }\r\n    return null\r\n  }\r\n  getCurrentUser(){\r\n    let user :any = this.getLoggedOn()\r\n    if(user){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+user.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/connected?email='+user.email,options)\r\n    }\r\n    return null\r\n  }\r\n  getAllDeleges(){\r\n    let user :any = this.getLoggedOn()\r\n    if(user){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+user.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/allDeleges',options)\r\n    }\r\n    return null\r\n  }\r\n  getAllUsers(){\r\n    let user :any = this.getLoggedOn()\r\n    if(user){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+user.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/allUsers',options)\r\n    }\r\n    return null\r\n  }\r\n  addUser(user:User, vehicule : Vehicule){\r\n    let connnectedUser :any = this.getLoggedOn()\r\n    if(user && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/register',{user : user , vehicule : vehicule},options)\r\n    }\r\n    return null\r\n  }\r\n  public isAuthenticated(): boolean {\r\n    const user = localStorage.getItem('connected') ? JSON.parse(localStorage.getItem('connected')) : JSON.parse(sessionStorage.getItem('connected'))\r\n    return user && user.token \r\n  }\r\n  deleteUser(id:number){\r\n    let connnectedUser :any = this.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteUser',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n  updateUser(user:User){\r\n    let connnectedUser :any = this.getLoggedOn()\r\n    if(user && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/updateUser',{user : user },options)\r\n    }\r\n    return null\r\n  }\r\n  updateUserPW(pw:string){\r\n    let connnectedUser :any = this.getLoggedOn()\r\n    if(pw && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/update-pw',{password : pw, email : connnectedUser.email },options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { User } from '../models/user.model';\r\nimport { UserService } from './user.service';\r\nimport { Vehicule } from '../models/vehicule.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VehiculeService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n\r\n  getUserVehicle(targetEmail : string){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(targetEmail && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getUserCars',{email : targetEmail},options)\r\n    }\r\n    return null\r\n  }\r\n  addVehicle(vehicule:Vehicule){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(vehicule && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/addVehicle',{vehicule : vehicule},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { UserService } from './user.service';\r\nimport { Produit } from '../models/produit.model';\r\nimport { Pack } from '../models/pack.model';\r\nimport { Veille } from '../models/veille.model';\r\nimport { environment } from 'src/environments/environment.prod';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VeilleService {\r\n  baseUrl : string = environment.backend.baseUrl;\r\n\r\n  constructor(private http:HttpClient, private userService : UserService) { }\r\n\r\n  add(veille:Veille){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(veille && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post('/api/addVeille',{veille : veille, user : connnectedUser.email},options)\r\n    }       \r\n    return null\r\n  }\r\n  getVeillesOfProduct(idp){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(idp && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getVeillesOfProduct',{id : idp},options)\r\n    }       \r\n    return null\r\n  }\r\n  edit(product:Produit){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(product && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/editProduct',{produit : product},options)\r\n    }\r\n    return null\r\n  }\r\n  getProdPacks(id:number){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/getProdPacks',{pack : id},options)\r\n    }\r\n    return null\r\n  }\r\n  updatePackSoldCount(id:number){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/incrementPackSold',{pack : id},options)\r\n    }\r\n    return null\r\n  }\r\n  getAll(){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.get(this.baseUrl+'/getVeilles',options)\r\n    }\r\n    return null\r\n  }\r\n  delete(id){\r\n    let connnectedUser :any = this.userService.getLoggedOn()\r\n    if(id && connnectedUser){\r\n      let headers = new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': \"JWT \"+connnectedUser.token });\r\n      let options = { headers: headers };\r\n      return this.http.post(this.baseUrl+'/deleteVeille',{id : id},options)\r\n    }\r\n    return null\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NtYWxsLW1vZGFsL3NtYWxsLW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-small-modal',\n  templateUrl: './small-modal.component.html',\n  styleUrls: ['./small-modal.component.css']\n})\nexport class SmallModalComponent implements OnInit {\n  @Input() contenu : string\n  @Input() titre : string \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stZGlzY3Vzc2lvbi90YXNrLWRpc2N1c3Npb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Task } from '../models/task.model';\nimport { Observable } from 'rxjs';\nimport { TaskService } from '../services/task.service';\nimport { UserTask } from '../models/usertaks.model';\nimport { CommentService } from '../services/comment.service';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\nimport { NotificationService } from '../services/notif.service';\n\n@Component({\n  selector: 'app-task-discussion',\n  templateUrl: './task-discussion.component.html',\n  styleUrls: ['./task-discussion.component.css']\n})\nexport class TaskDiscussionComponent implements OnInit {\n  targetTask : Task\n  state$: Observable<object>;\n  todos : UserTask[] = []\n  commentsList : Comment [] = []\n  connectedUser : User = null\n  text:string \n  loading : boolean = false\n  constructor(private activatedRoute: ActivatedRoute,\n    private taskserv:TaskService, private router:Router,\n    private commserv:CommentService, private userv:UserService, private notifserv:NotificationService) {}\n\n  ngOnInit() {\n    setTimeout(()=>{\n      this.activatedRoute.paramMap.subscribe(x=>{\n      this.taskserv.get(x.get('id')).subscribe((task:Task)=>{\n        this.userv.getCurrentUser().subscribe((x:User)=>this.connectedUser = x)\n        if(task){\n          this.taskserv.getUTOFtask(Number(x.get('id'))).subscribe((todo:UserTask[])=>{\n            if(todo){\n              this.targetTask = task\n              this.todos = todo\n              this.commserv.getCommentsOfTask(this.targetTask.id).subscribe((comments:Comment[])=>{\n                this.commentsList = comments                \n                this.loading = false\n              })\n            }\n          })\n        }\n        else this.router.navigateByUrl('/tasks')\n      })\n    })\n    },2000)\n    \n  }\n  sendComment(){\n    this.loading = true\n      this.commserv.add(this.text,this.targetTask.id).subscribe((comment:any)=>{      \n        setTimeout(()=>{\n          if(comment){\n            let targetUsers = []\n            this.todos.forEach(t=>{\n              if(t.task_users[0].id != this.connectedUser.id){\n                targetUsers.push(t.task_users[0].id)\n              }\n            })\n            if(this.connectedUser.role != 'admin'){\n              targetUsers.push(1)\n            }\n            if(targetUsers.length > 0){\n              this.notifserv.add(comment.comment.content , \"nouveau message\" , targetUsers\n               ,this.connectedUser.email, this.targetTask.id).subscribe(r=>{\n              this.commentsList.push(comment.comment)\n              this.loading = false\n            })    \n            }       \n        }} ,5000)\n      })\n  }\n  tap(){ return false}\n  load(){\n    this.loading = true\n    this.ngOnInit()\n  }\n  updateTaskStatus(){\n      this.taskserv.updateTaskStatus(this.targetTask.id,true).subscribe(x=>{\n        this.router.navigateByUrl('/tasks')\n      })\n  }\n  deleteMessage(message){\n    this.commserv.delete(message.id).subscribe(x=>{\n      this.load()\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2stZWxlbWVudC90YXNrLWVsZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Input, Output,EventEmitter } from '@angular/core';\nimport { Task } from '../models/task.model';\nimport { TaskService } from '../services/task.service';\nimport { UserTask } from '../models/usertaks.model';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-task-element',\n  templateUrl: './task-element.component.html',\n  styleUrls: ['./task-element.component.css']\n})\nexport class TaskElementComponent implements OnInit {\n  @Input() task:Task\n  UToftask : UserTask[] = []\n  @Output() handleDeletion = new EventEmitter<any>()\n  connectedUser : User = {} as User\n  constructor(private taskserv:TaskService, private router:Router, private userserv:UserService) { }\n\n  ngOnInit() {\n    this.userserv.getCurrentUser().subscribe((u:User)=>{\n      if(u){\n        this.connectedUser = u\n        this.taskserv.getUTOFtask(this.task.id).subscribe((res:UserTask[])=>{\n          this.UToftask = res\n        })\n      } \n    }) \n  }\n  updateTaskStatus(){\n    let bool = !(this.task.isdone)\n      this.taskserv.updateTaskStatus(this.task.id,bool).subscribe(x=>{\n        window.location.reload()\n      })\n  }\n  deleteTask(){\n    this.handleDeletion.emit({\n      task : this.task,\n      op : 'del'\n    })\n  }\n  disscuss(){\n    this.router.navigateByUrl('/discussion/'+this.task.id)\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tzL3Rhc2tzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../models/task.model';\nimport { NgForm, FormGroup, FormBuilder, FormArray, FormControl, Validators } from '@angular/forms';\nimport { User } from '../models/user.model';\nimport { UserService } from '../services/user.service';\nimport { TaskService } from '../services/task.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  taskToAdd : Task = {} as Task\n  selectedTask : Task\n  addError:boolean = false\n  tasks:Task[] = []\n  showForm : boolean = false\n  usersForm: FormGroup\n  deleges : User [] = []\n  done : boolean = false\n  oldArray : Task[] = []\n  connectedUser : User = {} as User\n  loading : boolean = true\n  p:number = 1\n  constructor(private fb:FormBuilder,private userv:UserService, private taskserv:TaskService) { \n    this.usersForm = this.fb.group({\n      users: this.fb.array([]) ,\n    });\n    this.addUser()\n  }\n\n  ngOnInit() {\n    this.userv.getCurrentUser().subscribe((user:User)=>{\n      if(user){\n        this.loading = true\n        this.connectedUser = user\n        if(this.connectedUser.role === 'admin' || this.connectedUser.role === 'superviseur' ){\n          setTimeout(()=>{\n          this.taskserv.getAll().subscribe((task:Task[])=>{\n              this.userv.getAllDeleges().subscribe((d:User[])=>{\n                this.deleges = d\n                this.tasks = task\n                this.loading = false\n              })\n            })},500)\n        }else {\n          setTimeout(()=>{\n            this.taskserv.getTasksOfUser(user.id).subscribe((tasks : Task[])=>{\n              this.loading = false\n              this.tasks = tasks             \n            })\n          },500)\n          \n        }\n        }\n    })\n   \n  }\n  updateList(data,i){\n    let id = Number(data.substring(data.indexOf(':')+1,data.length))\n    let array : any  = this.usersForm.get(\"users\").value as any\n    let nbOcc : number = 0\n    if(array.length > 1){\n      array.forEach(x=>{\n        if(x.delege === id){\n          nbOcc++\n        }\n      })\n      if(nbOcc > 1){\n        this.deleteUser(i)\n        alert('vous ne pouvez pas affecter le même utilisateur plusieurs fois à la même tâche.')\n      } \n    }\n    return true\n  }\n  filterDoneTasks(){\n    if(this.done){\n      if(this.tasks.length > 0){\n        this.oldArray = this.tasks\n        this.tasks = this.tasks.filter(x=>x.isdone)\n      }\n      else return false     \n    }\n    else {\n      this.ngOnInit()\n      this.tasks = this.tasks.filter(x=>!x.isdone)\n    }\n  }\n  filterTasks(content){\n    if(content.length > 0){\n      this.tasks = this.tasks.filter(x=>x.nom_tache.trim().toLowerCase().indexOf(content.toLowerCase()) != -1)\n    }\n    else this.ngOnInit()\n  }\n  showPanel(){\n    this.showForm = true\n  }\n  hidePanel(){\n    this.showForm = false\n  }\n  users() : FormArray {\n    return this.usersForm.get(\"users\") as FormArray\n  }\n   \n  newUser(): FormGroup {\n    return this.fb.group({\n      delege : new FormControl('null',Validators.required),\n    })\n  }\n   \n  addUser() {\n    this.users().push(this.newUser());\n  }\n  deleteUser(i){\n    this.users().removeAt(i)\n  }\n  submit(f:NgForm){\n    this.taskserv.add(this.taskToAdd,this.users().value).subscribe((done)=>{\n      window.location.reload()\n    },error=>this.addError = true)\n  }\n  deleteIncomingTask(event){\n    if(event.op === 'del'){\n      this.selectedTask = event.task\n    }\n\n  }\n  deleteTask(){\n    this.taskserv.delete(this.selectedTask.id).subscribe(res=>{\n      window.location.reload()\n    })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvcGJhci90b3BiYXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { User } from '../models/user.model';\nimport { NotificationService } from '../services/notif.service';\nimport { Notification } from '../models/notification.model';\n\n@Component({\n  selector: 'app-topbar',\n  templateUrl: './topbar.component.html',\n  styleUrls: ['./topbar.component.css']\n})\nexport class TopbarComponent implements OnInit {\n  user : User = {} as User\n  messages : Notification[] = []\n  constructor(private router: Router, private userv:UserService\n    , private nserv:NotificationService) { }\n  ngOnInit() {\n    if(this.userv.getCurrentUser()){\n       this.userv.getCurrentUser().subscribe((res:any)=>{\n      this.user.nom = res.nom\n      this.user.prenom = res.prenom\n      this.user.imageUrl = res.imageUrl\n      this.user.email = res.email\n      this.user.role = res.role\n      this.loadMessages()\n    })\n  }\n  }\n  logout(){\n      this.userv.logout().subscribe(res=>{\n        localStorage.clear()\n        sessionStorage.clear()\n        this.router.navigate(['login'])\n      })\n      \n  }\n  loadMessages(){\n    this.nserv.get(this.user.email).subscribe((res:Notification[])=>{\n      this.messages = res\n    })\n  }\n\n  redirectToChat(m:Notification){\n    this.nserv.delete(m.id).subscribe(res=>{\n      this.router.navigateByUrl('discussion/'+m.subject.id)\n    })\n  }\n}\n","export const environment = {\n  production: true,\n  backend : {\n    baseUrl : \"https://gestionfarmavans.com:60000\"\n  }\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { registerLocaleData } from '@angular/common';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport localeFr from '@angular/common/locales/fr';\n// the second parameter 'fr' is optional\nregisterLocaleData(localeFr, 'fr');\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}